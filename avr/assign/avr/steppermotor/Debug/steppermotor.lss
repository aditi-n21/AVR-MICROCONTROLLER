
steppermotor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000f9c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00001638  00000000  00000000  00000ff0  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      0000057e  00000000  00000000  00002628  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_aranges 00000080  00000000  00000000  00002ba8  2**3
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   000007d8  00000000  00000000  00002c28  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000012d  00000000  00000000  00003400  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000005bd  00000000  00000000  0000352d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  0000008c  00000000  00000000  00003aec  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000000d5  00000000  00000000  00003b78  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000000ff  00000000  00000000  00003c4d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec e9       	ldi	r30, 0x9C	; 156
  68:	ff e0       	ldi	r31, 0x0F	; 15
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 cc 07 	jmp	0xf98	; 0xf98 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:

void stepperf(void);
void stepperb(void);

int main(void)
{
  92:	0f 93       	push	r16
  94:	1f 93       	push	r17
  96:	cf 93       	push	r28
  98:	df 93       	push	r29
  9a:	cd b7       	in	r28, 0x3d	; 61
  9c:	de b7       	in	r29, 0x3e	; 62
  9e:	6c 97       	sbiw	r28, 0x1c	; 28
  a0:	0f b6       	in	r0, 0x3f	; 63
  a2:	f8 94       	cli
  a4:	de bf       	out	0x3e, r29	; 62
  a6:	0f be       	out	0x3f, r0	; 63
  a8:	cd bf       	out	0x3d, r28	; 61
	DDRD = 0x0f;
  aa:	81 e3       	ldi	r24, 0x31	; 49
  ac:	90 e0       	ldi	r25, 0x00	; 0
  ae:	2f e0       	ldi	r18, 0x0F	; 15
  b0:	fc 01       	movw	r30, r24
  b2:	20 83       	st	Z, r18
//PORTD = 0x0f;
    while(1)
	{
		stepperf();
  b4:	0e 94 60 01 	call	0x2c0	; 0x2c0 <stepperf>
  b8:	80 e0       	ldi	r24, 0x00	; 0
  ba:	90 e0       	ldi	r25, 0x00	; 0
  bc:	a8 e4       	ldi	r26, 0x48	; 72
  be:	b2 e4       	ldi	r27, 0x42	; 66
  c0:	89 83       	std	Y+1, r24	; 0x01
  c2:	9a 83       	std	Y+2, r25	; 0x02
  c4:	ab 83       	std	Y+3, r26	; 0x03
  c6:	bc 83       	std	Y+4, r27	; 0x04
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
  c8:	69 81       	ldd	r22, Y+1	; 0x01
  ca:	7a 81       	ldd	r23, Y+2	; 0x02
  cc:	8b 81       	ldd	r24, Y+3	; 0x03
  ce:	9c 81       	ldd	r25, Y+4	; 0x04
  d0:	20 e0       	ldi	r18, 0x00	; 0
  d2:	30 e0       	ldi	r19, 0x00	; 0
  d4:	4a e7       	ldi	r20, 0x7A	; 122
  d6:	53 e4       	ldi	r21, 0x43	; 67
  d8:	0e 94 41 07 	call	0xe82	; 0xe82 <__mulsf3>
  dc:	dc 01       	movw	r26, r24
  de:	cb 01       	movw	r24, r22
  e0:	8d 83       	std	Y+5, r24	; 0x05
  e2:	9e 83       	std	Y+6, r25	; 0x06
  e4:	af 83       	std	Y+7, r26	; 0x07
  e6:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
  e8:	11 e0       	ldi	r17, 0x01	; 1
  ea:	6d 81       	ldd	r22, Y+5	; 0x05
  ec:	7e 81       	ldd	r23, Y+6	; 0x06
  ee:	8f 81       	ldd	r24, Y+7	; 0x07
  f0:	98 85       	ldd	r25, Y+8	; 0x08
  f2:	20 e0       	ldi	r18, 0x00	; 0
  f4:	30 e0       	ldi	r19, 0x00	; 0
  f6:	40 e8       	ldi	r20, 0x80	; 128
  f8:	5f e3       	ldi	r21, 0x3F	; 63
  fa:	0e 94 c0 06 	call	0xd80	; 0xd80 <__cmpsf2>
  fe:	88 23       	and	r24, r24
 100:	0c f0       	brlt	.+2      	; 0x104 <main+0x72>
 102:	10 e0       	ldi	r17, 0x00	; 0
 104:	11 23       	and	r17, r17
 106:	29 f0       	breq	.+10     	; 0x112 <main+0x80>
		__ticks = 1;
 108:	81 e0       	ldi	r24, 0x01	; 1
 10a:	90 e0       	ldi	r25, 0x00	; 0
 10c:	9a 87       	std	Y+10, r25	; 0x0a
 10e:	89 87       	std	Y+9, r24	; 0x09
 110:	46 c0       	rjmp	.+140    	; 0x19e <main+0x10c>
	else if (__tmp > 65535)
 112:	11 e0       	ldi	r17, 0x01	; 1
 114:	6d 81       	ldd	r22, Y+5	; 0x05
 116:	7e 81       	ldd	r23, Y+6	; 0x06
 118:	8f 81       	ldd	r24, Y+7	; 0x07
 11a:	98 85       	ldd	r25, Y+8	; 0x08
 11c:	20 e0       	ldi	r18, 0x00	; 0
 11e:	3f ef       	ldi	r19, 0xFF	; 255
 120:	4f e7       	ldi	r20, 0x7F	; 127
 122:	57 e4       	ldi	r21, 0x47	; 71
 124:	0e 94 3d 07 	call	0xe7a	; 0xe7a <__gesf2>
 128:	18 16       	cp	r1, r24
 12a:	0c f0       	brlt	.+2      	; 0x12e <main+0x9c>
 12c:	10 e0       	ldi	r17, 0x00	; 0
 12e:	11 23       	and	r17, r17
 130:	61 f1       	breq	.+88     	; 0x18a <main+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 132:	69 81       	ldd	r22, Y+1	; 0x01
 134:	7a 81       	ldd	r23, Y+2	; 0x02
 136:	8b 81       	ldd	r24, Y+3	; 0x03
 138:	9c 81       	ldd	r25, Y+4	; 0x04
 13a:	20 e0       	ldi	r18, 0x00	; 0
 13c:	30 e0       	ldi	r19, 0x00	; 0
 13e:	40 e2       	ldi	r20, 0x20	; 32
 140:	51 e4       	ldi	r21, 0x41	; 65
 142:	0e 94 41 07 	call	0xe82	; 0xe82 <__mulsf3>
 146:	dc 01       	movw	r26, r24
 148:	cb 01       	movw	r24, r22
 14a:	bc 01       	movw	r22, r24
 14c:	cd 01       	movw	r24, r26
 14e:	0e 94 c4 06 	call	0xd88	; 0xd88 <__fixunssfsi>
 152:	dc 01       	movw	r26, r24
 154:	cb 01       	movw	r24, r22
 156:	9a 87       	std	Y+10, r25	; 0x0a
 158:	89 87       	std	Y+9, r24	; 0x09
 15a:	12 c0       	rjmp	.+36     	; 0x180 <main+0xee>
 15c:	89 e1       	ldi	r24, 0x19	; 25
 15e:	90 e0       	ldi	r25, 0x00	; 0
 160:	9c 87       	std	Y+12, r25	; 0x0c
 162:	8b 87       	std	Y+11, r24	; 0x0b
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 164:	8b 85       	ldd	r24, Y+11	; 0x0b
 166:	9c 85       	ldd	r25, Y+12	; 0x0c
 168:	8c 01       	movw	r16, r24
 16a:	c8 01       	movw	r24, r16
 16c:	01 97       	sbiw	r24, 0x01	; 1
 16e:	f1 f7       	brne	.-4      	; 0x16c <main+0xda>
 170:	8c 01       	movw	r16, r24
 172:	1c 87       	std	Y+12, r17	; 0x0c
 174:	0b 87       	std	Y+11, r16	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 176:	89 85       	ldd	r24, Y+9	; 0x09
 178:	9a 85       	ldd	r25, Y+10	; 0x0a
 17a:	01 97       	sbiw	r24, 0x01	; 1
 17c:	9a 87       	std	Y+10, r25	; 0x0a
 17e:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 180:	89 85       	ldd	r24, Y+9	; 0x09
 182:	9a 85       	ldd	r25, Y+10	; 0x0a
 184:	00 97       	sbiw	r24, 0x00	; 0
 186:	51 f7       	brne	.-44     	; 0x15c <main+0xca>
 188:	17 c0       	rjmp	.+46     	; 0x1b8 <main+0x126>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 18a:	6d 81       	ldd	r22, Y+5	; 0x05
 18c:	7e 81       	ldd	r23, Y+6	; 0x06
 18e:	8f 81       	ldd	r24, Y+7	; 0x07
 190:	98 85       	ldd	r25, Y+8	; 0x08
 192:	0e 94 c4 06 	call	0xd88	; 0xd88 <__fixunssfsi>
 196:	dc 01       	movw	r26, r24
 198:	cb 01       	movw	r24, r22
 19a:	9a 87       	std	Y+10, r25	; 0x0a
 19c:	89 87       	std	Y+9, r24	; 0x09
 19e:	89 85       	ldd	r24, Y+9	; 0x09
 1a0:	9a 85       	ldd	r25, Y+10	; 0x0a
 1a2:	9e 87       	std	Y+14, r25	; 0x0e
 1a4:	8d 87       	std	Y+13, r24	; 0x0d
 1a6:	8d 85       	ldd	r24, Y+13	; 0x0d
 1a8:	9e 85       	ldd	r25, Y+14	; 0x0e
 1aa:	8c 01       	movw	r16, r24
 1ac:	f8 01       	movw	r30, r16
 1ae:	31 97       	sbiw	r30, 0x01	; 1
 1b0:	f1 f7       	brne	.-4      	; 0x1ae <main+0x11c>
 1b2:	8f 01       	movw	r16, r30
 1b4:	1e 87       	std	Y+14, r17	; 0x0e
 1b6:	0d 87       	std	Y+13, r16	; 0x0d
		_delay_ms(50);
		stepperb();
 1b8:	0e 94 10 04 	call	0x820	; 0x820 <stepperb>
 1bc:	80 e0       	ldi	r24, 0x00	; 0
 1be:	90 e0       	ldi	r25, 0x00	; 0
 1c0:	a8 e4       	ldi	r26, 0x48	; 72
 1c2:	b2 e4       	ldi	r27, 0x42	; 66
 1c4:	8f 87       	std	Y+15, r24	; 0x0f
 1c6:	98 8b       	std	Y+16, r25	; 0x10
 1c8:	a9 8b       	std	Y+17, r26	; 0x11
 1ca:	ba 8b       	std	Y+18, r27	; 0x12
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
 1cc:	6f 85       	ldd	r22, Y+15	; 0x0f
 1ce:	78 89       	ldd	r23, Y+16	; 0x10
 1d0:	89 89       	ldd	r24, Y+17	; 0x11
 1d2:	9a 89       	ldd	r25, Y+18	; 0x12
 1d4:	20 e0       	ldi	r18, 0x00	; 0
 1d6:	30 e0       	ldi	r19, 0x00	; 0
 1d8:	4a e7       	ldi	r20, 0x7A	; 122
 1da:	53 e4       	ldi	r21, 0x43	; 67
 1dc:	0e 94 41 07 	call	0xe82	; 0xe82 <__mulsf3>
 1e0:	dc 01       	movw	r26, r24
 1e2:	cb 01       	movw	r24, r22
 1e4:	8b 8b       	std	Y+19, r24	; 0x13
 1e6:	9c 8b       	std	Y+20, r25	; 0x14
 1e8:	ad 8b       	std	Y+21, r26	; 0x15
 1ea:	be 8b       	std	Y+22, r27	; 0x16
	if (__tmp < 1.0)
 1ec:	11 e0       	ldi	r17, 0x01	; 1
 1ee:	6b 89       	ldd	r22, Y+19	; 0x13
 1f0:	7c 89       	ldd	r23, Y+20	; 0x14
 1f2:	8d 89       	ldd	r24, Y+21	; 0x15
 1f4:	9e 89       	ldd	r25, Y+22	; 0x16
 1f6:	20 e0       	ldi	r18, 0x00	; 0
 1f8:	30 e0       	ldi	r19, 0x00	; 0
 1fa:	40 e8       	ldi	r20, 0x80	; 128
 1fc:	5f e3       	ldi	r21, 0x3F	; 63
 1fe:	0e 94 c0 06 	call	0xd80	; 0xd80 <__cmpsf2>
 202:	88 23       	and	r24, r24
 204:	0c f0       	brlt	.+2      	; 0x208 <main+0x176>
 206:	10 e0       	ldi	r17, 0x00	; 0
 208:	11 23       	and	r17, r17
 20a:	29 f0       	breq	.+10     	; 0x216 <main+0x184>
		__ticks = 1;
 20c:	81 e0       	ldi	r24, 0x01	; 1
 20e:	90 e0       	ldi	r25, 0x00	; 0
 210:	98 8f       	std	Y+24, r25	; 0x18
 212:	8f 8b       	std	Y+23, r24	; 0x17
 214:	46 c0       	rjmp	.+140    	; 0x2a2 <main+0x210>
	else if (__tmp > 65535)
 216:	11 e0       	ldi	r17, 0x01	; 1
 218:	6b 89       	ldd	r22, Y+19	; 0x13
 21a:	7c 89       	ldd	r23, Y+20	; 0x14
 21c:	8d 89       	ldd	r24, Y+21	; 0x15
 21e:	9e 89       	ldd	r25, Y+22	; 0x16
 220:	20 e0       	ldi	r18, 0x00	; 0
 222:	3f ef       	ldi	r19, 0xFF	; 255
 224:	4f e7       	ldi	r20, 0x7F	; 127
 226:	57 e4       	ldi	r21, 0x47	; 71
 228:	0e 94 3d 07 	call	0xe7a	; 0xe7a <__gesf2>
 22c:	18 16       	cp	r1, r24
 22e:	0c f0       	brlt	.+2      	; 0x232 <main+0x1a0>
 230:	10 e0       	ldi	r17, 0x00	; 0
 232:	11 23       	and	r17, r17
 234:	61 f1       	breq	.+88     	; 0x28e <main+0x1fc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 236:	6f 85       	ldd	r22, Y+15	; 0x0f
 238:	78 89       	ldd	r23, Y+16	; 0x10
 23a:	89 89       	ldd	r24, Y+17	; 0x11
 23c:	9a 89       	ldd	r25, Y+18	; 0x12
 23e:	20 e0       	ldi	r18, 0x00	; 0
 240:	30 e0       	ldi	r19, 0x00	; 0
 242:	40 e2       	ldi	r20, 0x20	; 32
 244:	51 e4       	ldi	r21, 0x41	; 65
 246:	0e 94 41 07 	call	0xe82	; 0xe82 <__mulsf3>
 24a:	dc 01       	movw	r26, r24
 24c:	cb 01       	movw	r24, r22
 24e:	bc 01       	movw	r22, r24
 250:	cd 01       	movw	r24, r26
 252:	0e 94 c4 06 	call	0xd88	; 0xd88 <__fixunssfsi>
 256:	dc 01       	movw	r26, r24
 258:	cb 01       	movw	r24, r22
 25a:	98 8f       	std	Y+24, r25	; 0x18
 25c:	8f 8b       	std	Y+23, r24	; 0x17
 25e:	12 c0       	rjmp	.+36     	; 0x284 <main+0x1f2>
 260:	89 e1       	ldi	r24, 0x19	; 25
 262:	90 e0       	ldi	r25, 0x00	; 0
 264:	9a 8f       	std	Y+26, r25	; 0x1a
 266:	89 8f       	std	Y+25, r24	; 0x19
 268:	89 8d       	ldd	r24, Y+25	; 0x19
 26a:	9a 8d       	ldd	r25, Y+26	; 0x1a
 26c:	8c 01       	movw	r16, r24
 26e:	c8 01       	movw	r24, r16
 270:	01 97       	sbiw	r24, 0x01	; 1
 272:	f1 f7       	brne	.-4      	; 0x270 <main+0x1de>
 274:	8c 01       	movw	r16, r24
 276:	1a 8f       	std	Y+26, r17	; 0x1a
 278:	09 8f       	std	Y+25, r16	; 0x19
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 27a:	8f 89       	ldd	r24, Y+23	; 0x17
 27c:	98 8d       	ldd	r25, Y+24	; 0x18
 27e:	01 97       	sbiw	r24, 0x01	; 1
 280:	98 8f       	std	Y+24, r25	; 0x18
 282:	8f 8b       	std	Y+23, r24	; 0x17
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 284:	8f 89       	ldd	r24, Y+23	; 0x17
 286:	98 8d       	ldd	r25, Y+24	; 0x18
 288:	00 97       	sbiw	r24, 0x00	; 0
 28a:	51 f7       	brne	.-44     	; 0x260 <main+0x1ce>
 28c:	18 c0       	rjmp	.+48     	; 0x2be <main+0x22c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 28e:	6b 89       	ldd	r22, Y+19	; 0x13
 290:	7c 89       	ldd	r23, Y+20	; 0x14
 292:	8d 89       	ldd	r24, Y+21	; 0x15
 294:	9e 89       	ldd	r25, Y+22	; 0x16
 296:	0e 94 c4 06 	call	0xd88	; 0xd88 <__fixunssfsi>
 29a:	dc 01       	movw	r26, r24
 29c:	cb 01       	movw	r24, r22
 29e:	98 8f       	std	Y+24, r25	; 0x18
 2a0:	8f 8b       	std	Y+23, r24	; 0x17
 2a2:	8f 89       	ldd	r24, Y+23	; 0x17
 2a4:	98 8d       	ldd	r25, Y+24	; 0x18
 2a6:	9c 8f       	std	Y+28, r25	; 0x1c
 2a8:	8b 8f       	std	Y+27, r24	; 0x1b
 2aa:	8b 8d       	ldd	r24, Y+27	; 0x1b
 2ac:	9c 8d       	ldd	r25, Y+28	; 0x1c
 2ae:	8c 01       	movw	r16, r24
 2b0:	f8 01       	movw	r30, r16
 2b2:	31 97       	sbiw	r30, 0x01	; 1
 2b4:	f1 f7       	brne	.-4      	; 0x2b2 <main+0x220>
 2b6:	8f 01       	movw	r16, r30
 2b8:	1c 8f       	std	Y+28, r17	; 0x1c
 2ba:	0b 8f       	std	Y+27, r16	; 0x1b
		_delay_ms(50);
	}
 2bc:	fb ce       	rjmp	.-522    	; 0xb4 <main+0x22>
 2be:	fa ce       	rjmp	.-524    	; 0xb4 <main+0x22>

000002c0 <stepperf>:
}
void stepperf(void)
	   {
 2c0:	0f 93       	push	r16
 2c2:	1f 93       	push	r17
 2c4:	cf 93       	push	r28
 2c6:	df 93       	push	r29
 2c8:	cd b7       	in	r28, 0x3d	; 61
 2ca:	de b7       	in	r29, 0x3e	; 62
 2cc:	e9 97       	sbiw	r28, 0x39	; 57
 2ce:	0f b6       	in	r0, 0x3f	; 63
 2d0:	f8 94       	cli
 2d2:	de bf       	out	0x3e, r29	; 62
 2d4:	0f be       	out	0x3f, r0	; 63
 2d6:	cd bf       	out	0x3d, r28	; 61
		unsigned char i;
		for(i=0;i<20;i++)
 2d8:	19 82       	std	Y+1, r1	; 0x01
 2da:	93 c2       	rjmp	.+1318   	; 0x802 <__stack+0x3a3>
		{ 
		PORTD |= (1<<PD0);
 2dc:	82 e3       	ldi	r24, 0x32	; 50
 2de:	90 e0       	ldi	r25, 0x00	; 0
 2e0:	22 e3       	ldi	r18, 0x32	; 50
 2e2:	30 e0       	ldi	r19, 0x00	; 0
 2e4:	f9 01       	movw	r30, r18
 2e6:	20 81       	ld	r18, Z
 2e8:	21 60       	ori	r18, 0x01	; 1
 2ea:	fc 01       	movw	r30, r24
 2ec:	20 83       	st	Z, r18
        PORTD &= ~(1<<PD1);
 2ee:	82 e3       	ldi	r24, 0x32	; 50
 2f0:	90 e0       	ldi	r25, 0x00	; 0
 2f2:	22 e3       	ldi	r18, 0x32	; 50
 2f4:	30 e0       	ldi	r19, 0x00	; 0
 2f6:	f9 01       	movw	r30, r18
 2f8:	20 81       	ld	r18, Z
 2fa:	2d 7f       	andi	r18, 0xFD	; 253
 2fc:	fc 01       	movw	r30, r24
 2fe:	20 83       	st	Z, r18
		PORTD &= ~(1<<PD2);
 300:	82 e3       	ldi	r24, 0x32	; 50
 302:	90 e0       	ldi	r25, 0x00	; 0
 304:	22 e3       	ldi	r18, 0x32	; 50
 306:	30 e0       	ldi	r19, 0x00	; 0
 308:	f9 01       	movw	r30, r18
 30a:	20 81       	ld	r18, Z
 30c:	2b 7f       	andi	r18, 0xFB	; 251
 30e:	fc 01       	movw	r30, r24
 310:	20 83       	st	Z, r18
        PORTD &= ~(1<<PD3);
 312:	82 e3       	ldi	r24, 0x32	; 50
 314:	90 e0       	ldi	r25, 0x00	; 0
 316:	22 e3       	ldi	r18, 0x32	; 50
 318:	30 e0       	ldi	r19, 0x00	; 0
 31a:	f9 01       	movw	r30, r18
 31c:	20 81       	ld	r18, Z
 31e:	27 7f       	andi	r18, 0xF7	; 247
 320:	fc 01       	movw	r30, r24
 322:	20 83       	st	Z, r18
 324:	80 e0       	ldi	r24, 0x00	; 0
 326:	90 e0       	ldi	r25, 0x00	; 0
 328:	a0 e2       	ldi	r26, 0x20	; 32
 32a:	b1 e4       	ldi	r27, 0x41	; 65
 32c:	8a 83       	std	Y+2, r24	; 0x02
 32e:	9b 83       	std	Y+3, r25	; 0x03
 330:	ac 83       	std	Y+4, r26	; 0x04
 332:	bd 83       	std	Y+5, r27	; 0x05
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
 334:	6a 81       	ldd	r22, Y+2	; 0x02
 336:	7b 81       	ldd	r23, Y+3	; 0x03
 338:	8c 81       	ldd	r24, Y+4	; 0x04
 33a:	9d 81       	ldd	r25, Y+5	; 0x05
 33c:	20 e0       	ldi	r18, 0x00	; 0
 33e:	30 e0       	ldi	r19, 0x00	; 0
 340:	4a e7       	ldi	r20, 0x7A	; 122
 342:	53 e4       	ldi	r21, 0x43	; 67
 344:	0e 94 41 07 	call	0xe82	; 0xe82 <__mulsf3>
 348:	dc 01       	movw	r26, r24
 34a:	cb 01       	movw	r24, r22
 34c:	8e 83       	std	Y+6, r24	; 0x06
 34e:	9f 83       	std	Y+7, r25	; 0x07
 350:	a8 87       	std	Y+8, r26	; 0x08
 352:	b9 87       	std	Y+9, r27	; 0x09
	if (__tmp < 1.0)
 354:	11 e0       	ldi	r17, 0x01	; 1
 356:	6e 81       	ldd	r22, Y+6	; 0x06
 358:	7f 81       	ldd	r23, Y+7	; 0x07
 35a:	88 85       	ldd	r24, Y+8	; 0x08
 35c:	99 85       	ldd	r25, Y+9	; 0x09
 35e:	20 e0       	ldi	r18, 0x00	; 0
 360:	30 e0       	ldi	r19, 0x00	; 0
 362:	40 e8       	ldi	r20, 0x80	; 128
 364:	5f e3       	ldi	r21, 0x3F	; 63
 366:	0e 94 c0 06 	call	0xd80	; 0xd80 <__cmpsf2>
 36a:	88 23       	and	r24, r24
 36c:	0c f0       	brlt	.+2      	; 0x370 <stepperf+0xb0>
 36e:	10 e0       	ldi	r17, 0x00	; 0
 370:	11 23       	and	r17, r17
 372:	29 f0       	breq	.+10     	; 0x37e <stepperf+0xbe>
		__ticks = 1;
 374:	81 e0       	ldi	r24, 0x01	; 1
 376:	90 e0       	ldi	r25, 0x00	; 0
 378:	9b 87       	std	Y+11, r25	; 0x0b
 37a:	8a 87       	std	Y+10, r24	; 0x0a
 37c:	46 c0       	rjmp	.+140    	; 0x40a <stepperf+0x14a>
	else if (__tmp > 65535)
 37e:	11 e0       	ldi	r17, 0x01	; 1
 380:	6e 81       	ldd	r22, Y+6	; 0x06
 382:	7f 81       	ldd	r23, Y+7	; 0x07
 384:	88 85       	ldd	r24, Y+8	; 0x08
 386:	99 85       	ldd	r25, Y+9	; 0x09
 388:	20 e0       	ldi	r18, 0x00	; 0
 38a:	3f ef       	ldi	r19, 0xFF	; 255
 38c:	4f e7       	ldi	r20, 0x7F	; 127
 38e:	57 e4       	ldi	r21, 0x47	; 71
 390:	0e 94 3d 07 	call	0xe7a	; 0xe7a <__gesf2>
 394:	18 16       	cp	r1, r24
 396:	0c f0       	brlt	.+2      	; 0x39a <stepperf+0xda>
 398:	10 e0       	ldi	r17, 0x00	; 0
 39a:	11 23       	and	r17, r17
 39c:	61 f1       	breq	.+88     	; 0x3f6 <stepperf+0x136>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 39e:	6a 81       	ldd	r22, Y+2	; 0x02
 3a0:	7b 81       	ldd	r23, Y+3	; 0x03
 3a2:	8c 81       	ldd	r24, Y+4	; 0x04
 3a4:	9d 81       	ldd	r25, Y+5	; 0x05
 3a6:	20 e0       	ldi	r18, 0x00	; 0
 3a8:	30 e0       	ldi	r19, 0x00	; 0
 3aa:	40 e2       	ldi	r20, 0x20	; 32
 3ac:	51 e4       	ldi	r21, 0x41	; 65
 3ae:	0e 94 41 07 	call	0xe82	; 0xe82 <__mulsf3>
 3b2:	dc 01       	movw	r26, r24
 3b4:	cb 01       	movw	r24, r22
 3b6:	bc 01       	movw	r22, r24
 3b8:	cd 01       	movw	r24, r26
 3ba:	0e 94 c4 06 	call	0xd88	; 0xd88 <__fixunssfsi>
 3be:	dc 01       	movw	r26, r24
 3c0:	cb 01       	movw	r24, r22
 3c2:	9b 87       	std	Y+11, r25	; 0x0b
 3c4:	8a 87       	std	Y+10, r24	; 0x0a
 3c6:	12 c0       	rjmp	.+36     	; 0x3ec <stepperf+0x12c>
 3c8:	89 e1       	ldi	r24, 0x19	; 25
 3ca:	90 e0       	ldi	r25, 0x00	; 0
 3cc:	9d 87       	std	Y+13, r25	; 0x0d
 3ce:	8c 87       	std	Y+12, r24	; 0x0c
 3d0:	8c 85       	ldd	r24, Y+12	; 0x0c
 3d2:	9d 85       	ldd	r25, Y+13	; 0x0d
 3d4:	8c 01       	movw	r16, r24
 3d6:	c8 01       	movw	r24, r16
 3d8:	01 97       	sbiw	r24, 0x01	; 1
 3da:	f1 f7       	brne	.-4      	; 0x3d8 <stepperf+0x118>
 3dc:	8c 01       	movw	r16, r24
 3de:	1d 87       	std	Y+13, r17	; 0x0d
 3e0:	0c 87       	std	Y+12, r16	; 0x0c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 3e2:	8a 85       	ldd	r24, Y+10	; 0x0a
 3e4:	9b 85       	ldd	r25, Y+11	; 0x0b
 3e6:	01 97       	sbiw	r24, 0x01	; 1
 3e8:	9b 87       	std	Y+11, r25	; 0x0b
 3ea:	8a 87       	std	Y+10, r24	; 0x0a
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 3ec:	8a 85       	ldd	r24, Y+10	; 0x0a
 3ee:	9b 85       	ldd	r25, Y+11	; 0x0b
 3f0:	00 97       	sbiw	r24, 0x00	; 0
 3f2:	51 f7       	brne	.-44     	; 0x3c8 <stepperf+0x108>
 3f4:	17 c0       	rjmp	.+46     	; 0x424 <stepperf+0x164>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 3f6:	6e 81       	ldd	r22, Y+6	; 0x06
 3f8:	7f 81       	ldd	r23, Y+7	; 0x07
 3fa:	88 85       	ldd	r24, Y+8	; 0x08
 3fc:	99 85       	ldd	r25, Y+9	; 0x09
 3fe:	0e 94 c4 06 	call	0xd88	; 0xd88 <__fixunssfsi>
 402:	dc 01       	movw	r26, r24
 404:	cb 01       	movw	r24, r22
 406:	9b 87       	std	Y+11, r25	; 0x0b
 408:	8a 87       	std	Y+10, r24	; 0x0a
 40a:	8a 85       	ldd	r24, Y+10	; 0x0a
 40c:	9b 85       	ldd	r25, Y+11	; 0x0b
 40e:	9f 87       	std	Y+15, r25	; 0x0f
 410:	8e 87       	std	Y+14, r24	; 0x0e
 412:	8e 85       	ldd	r24, Y+14	; 0x0e
 414:	9f 85       	ldd	r25, Y+15	; 0x0f
 416:	8c 01       	movw	r16, r24
 418:	f8 01       	movw	r30, r16
 41a:	31 97       	sbiw	r30, 0x01	; 1
 41c:	f1 f7       	brne	.-4      	; 0x41a <stepperf+0x15a>
 41e:	8f 01       	movw	r16, r30
 420:	1f 87       	std	Y+15, r17	; 0x0f
 422:	0e 87       	std	Y+14, r16	; 0x0e
		_delay_ms(10);
		
        PORTD &= ~(1<<PD0);
 424:	82 e3       	ldi	r24, 0x32	; 50
 426:	90 e0       	ldi	r25, 0x00	; 0
 428:	22 e3       	ldi	r18, 0x32	; 50
 42a:	30 e0       	ldi	r19, 0x00	; 0
 42c:	f9 01       	movw	r30, r18
 42e:	20 81       	ld	r18, Z
 430:	2e 7f       	andi	r18, 0xFE	; 254
 432:	fc 01       	movw	r30, r24
 434:	20 83       	st	Z, r18
		PORTD |= (1<<PD1);
 436:	82 e3       	ldi	r24, 0x32	; 50
 438:	90 e0       	ldi	r25, 0x00	; 0
 43a:	22 e3       	ldi	r18, 0x32	; 50
 43c:	30 e0       	ldi	r19, 0x00	; 0
 43e:	f9 01       	movw	r30, r18
 440:	20 81       	ld	r18, Z
 442:	22 60       	ori	r18, 0x02	; 2
 444:	fc 01       	movw	r30, r24
 446:	20 83       	st	Z, r18
		PORTD &= ~(1<<PD2);
 448:	82 e3       	ldi	r24, 0x32	; 50
 44a:	90 e0       	ldi	r25, 0x00	; 0
 44c:	22 e3       	ldi	r18, 0x32	; 50
 44e:	30 e0       	ldi	r19, 0x00	; 0
 450:	f9 01       	movw	r30, r18
 452:	20 81       	ld	r18, Z
 454:	2b 7f       	andi	r18, 0xFB	; 251
 456:	fc 01       	movw	r30, r24
 458:	20 83       	st	Z, r18
        PORTD &= ~(1<<PD3);
 45a:	82 e3       	ldi	r24, 0x32	; 50
 45c:	90 e0       	ldi	r25, 0x00	; 0
 45e:	22 e3       	ldi	r18, 0x32	; 50
 460:	30 e0       	ldi	r19, 0x00	; 0
 462:	f9 01       	movw	r30, r18
 464:	20 81       	ld	r18, Z
 466:	27 7f       	andi	r18, 0xF7	; 247
 468:	fc 01       	movw	r30, r24
 46a:	20 83       	st	Z, r18
 46c:	80 e0       	ldi	r24, 0x00	; 0
 46e:	90 e0       	ldi	r25, 0x00	; 0
 470:	a0 ea       	ldi	r26, 0xA0	; 160
 472:	b1 e4       	ldi	r27, 0x41	; 65
 474:	88 8b       	std	Y+16, r24	; 0x10
 476:	99 8b       	std	Y+17, r25	; 0x11
 478:	aa 8b       	std	Y+18, r26	; 0x12
 47a:	bb 8b       	std	Y+19, r27	; 0x13
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
 47c:	68 89       	ldd	r22, Y+16	; 0x10
 47e:	79 89       	ldd	r23, Y+17	; 0x11
 480:	8a 89       	ldd	r24, Y+18	; 0x12
 482:	9b 89       	ldd	r25, Y+19	; 0x13
 484:	20 e0       	ldi	r18, 0x00	; 0
 486:	30 e0       	ldi	r19, 0x00	; 0
 488:	4a e7       	ldi	r20, 0x7A	; 122
 48a:	53 e4       	ldi	r21, 0x43	; 67
 48c:	0e 94 41 07 	call	0xe82	; 0xe82 <__mulsf3>
 490:	dc 01       	movw	r26, r24
 492:	cb 01       	movw	r24, r22
 494:	8c 8b       	std	Y+20, r24	; 0x14
 496:	9d 8b       	std	Y+21, r25	; 0x15
 498:	ae 8b       	std	Y+22, r26	; 0x16
 49a:	bf 8b       	std	Y+23, r27	; 0x17
	if (__tmp < 1.0)
 49c:	11 e0       	ldi	r17, 0x01	; 1
 49e:	6c 89       	ldd	r22, Y+20	; 0x14
 4a0:	7d 89       	ldd	r23, Y+21	; 0x15
 4a2:	8e 89       	ldd	r24, Y+22	; 0x16
 4a4:	9f 89       	ldd	r25, Y+23	; 0x17
 4a6:	20 e0       	ldi	r18, 0x00	; 0
 4a8:	30 e0       	ldi	r19, 0x00	; 0
 4aa:	40 e8       	ldi	r20, 0x80	; 128
 4ac:	5f e3       	ldi	r21, 0x3F	; 63
 4ae:	0e 94 c0 06 	call	0xd80	; 0xd80 <__cmpsf2>
 4b2:	88 23       	and	r24, r24
 4b4:	0c f0       	brlt	.+2      	; 0x4b8 <__stack+0x59>
 4b6:	10 e0       	ldi	r17, 0x00	; 0
 4b8:	11 23       	and	r17, r17
 4ba:	29 f0       	breq	.+10     	; 0x4c6 <__stack+0x67>
		__ticks = 1;
 4bc:	81 e0       	ldi	r24, 0x01	; 1
 4be:	90 e0       	ldi	r25, 0x00	; 0
 4c0:	99 8f       	std	Y+25, r25	; 0x19
 4c2:	88 8f       	std	Y+24, r24	; 0x18
 4c4:	46 c0       	rjmp	.+140    	; 0x552 <__stack+0xf3>
	else if (__tmp > 65535)
 4c6:	11 e0       	ldi	r17, 0x01	; 1
 4c8:	6c 89       	ldd	r22, Y+20	; 0x14
 4ca:	7d 89       	ldd	r23, Y+21	; 0x15
 4cc:	8e 89       	ldd	r24, Y+22	; 0x16
 4ce:	9f 89       	ldd	r25, Y+23	; 0x17
 4d0:	20 e0       	ldi	r18, 0x00	; 0
 4d2:	3f ef       	ldi	r19, 0xFF	; 255
 4d4:	4f e7       	ldi	r20, 0x7F	; 127
 4d6:	57 e4       	ldi	r21, 0x47	; 71
 4d8:	0e 94 3d 07 	call	0xe7a	; 0xe7a <__gesf2>
 4dc:	18 16       	cp	r1, r24
 4de:	0c f0       	brlt	.+2      	; 0x4e2 <__stack+0x83>
 4e0:	10 e0       	ldi	r17, 0x00	; 0
 4e2:	11 23       	and	r17, r17
 4e4:	61 f1       	breq	.+88     	; 0x53e <__stack+0xdf>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 4e6:	68 89       	ldd	r22, Y+16	; 0x10
 4e8:	79 89       	ldd	r23, Y+17	; 0x11
 4ea:	8a 89       	ldd	r24, Y+18	; 0x12
 4ec:	9b 89       	ldd	r25, Y+19	; 0x13
 4ee:	20 e0       	ldi	r18, 0x00	; 0
 4f0:	30 e0       	ldi	r19, 0x00	; 0
 4f2:	40 e2       	ldi	r20, 0x20	; 32
 4f4:	51 e4       	ldi	r21, 0x41	; 65
 4f6:	0e 94 41 07 	call	0xe82	; 0xe82 <__mulsf3>
 4fa:	dc 01       	movw	r26, r24
 4fc:	cb 01       	movw	r24, r22
 4fe:	bc 01       	movw	r22, r24
 500:	cd 01       	movw	r24, r26
 502:	0e 94 c4 06 	call	0xd88	; 0xd88 <__fixunssfsi>
 506:	dc 01       	movw	r26, r24
 508:	cb 01       	movw	r24, r22
 50a:	99 8f       	std	Y+25, r25	; 0x19
 50c:	88 8f       	std	Y+24, r24	; 0x18
 50e:	12 c0       	rjmp	.+36     	; 0x534 <__stack+0xd5>
 510:	89 e1       	ldi	r24, 0x19	; 25
 512:	90 e0       	ldi	r25, 0x00	; 0
 514:	9b 8f       	std	Y+27, r25	; 0x1b
 516:	8a 8f       	std	Y+26, r24	; 0x1a
 518:	8a 8d       	ldd	r24, Y+26	; 0x1a
 51a:	9b 8d       	ldd	r25, Y+27	; 0x1b
 51c:	8c 01       	movw	r16, r24
 51e:	c8 01       	movw	r24, r16
 520:	01 97       	sbiw	r24, 0x01	; 1
 522:	f1 f7       	brne	.-4      	; 0x520 <__stack+0xc1>
 524:	8c 01       	movw	r16, r24
 526:	1b 8f       	std	Y+27, r17	; 0x1b
 528:	0a 8f       	std	Y+26, r16	; 0x1a
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 52a:	88 8d       	ldd	r24, Y+24	; 0x18
 52c:	99 8d       	ldd	r25, Y+25	; 0x19
 52e:	01 97       	sbiw	r24, 0x01	; 1
 530:	99 8f       	std	Y+25, r25	; 0x19
 532:	88 8f       	std	Y+24, r24	; 0x18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 534:	88 8d       	ldd	r24, Y+24	; 0x18
 536:	99 8d       	ldd	r25, Y+25	; 0x19
 538:	00 97       	sbiw	r24, 0x00	; 0
 53a:	51 f7       	brne	.-44     	; 0x510 <__stack+0xb1>
 53c:	17 c0       	rjmp	.+46     	; 0x56c <__stack+0x10d>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 53e:	6c 89       	ldd	r22, Y+20	; 0x14
 540:	7d 89       	ldd	r23, Y+21	; 0x15
 542:	8e 89       	ldd	r24, Y+22	; 0x16
 544:	9f 89       	ldd	r25, Y+23	; 0x17
 546:	0e 94 c4 06 	call	0xd88	; 0xd88 <__fixunssfsi>
 54a:	dc 01       	movw	r26, r24
 54c:	cb 01       	movw	r24, r22
 54e:	99 8f       	std	Y+25, r25	; 0x19
 550:	88 8f       	std	Y+24, r24	; 0x18
 552:	88 8d       	ldd	r24, Y+24	; 0x18
 554:	99 8d       	ldd	r25, Y+25	; 0x19
 556:	9d 8f       	std	Y+29, r25	; 0x1d
 558:	8c 8f       	std	Y+28, r24	; 0x1c
 55a:	8c 8d       	ldd	r24, Y+28	; 0x1c
 55c:	9d 8d       	ldd	r25, Y+29	; 0x1d
 55e:	8c 01       	movw	r16, r24
 560:	f8 01       	movw	r30, r16
 562:	31 97       	sbiw	r30, 0x01	; 1
 564:	f1 f7       	brne	.-4      	; 0x562 <__stack+0x103>
 566:	8f 01       	movw	r16, r30
 568:	1d 8f       	std	Y+29, r17	; 0x1d
 56a:	0c 8f       	std	Y+28, r16	; 0x1c
		_delay_ms(20);
		PORTD &= ~(1<<PD0);
 56c:	82 e3       	ldi	r24, 0x32	; 50
 56e:	90 e0       	ldi	r25, 0x00	; 0
 570:	22 e3       	ldi	r18, 0x32	; 50
 572:	30 e0       	ldi	r19, 0x00	; 0
 574:	f9 01       	movw	r30, r18
 576:	20 81       	ld	r18, Z
 578:	2e 7f       	andi	r18, 0xFE	; 254
 57a:	fc 01       	movw	r30, r24
 57c:	20 83       	st	Z, r18
        PORTD &= ~(1<<PD1);
 57e:	82 e3       	ldi	r24, 0x32	; 50
 580:	90 e0       	ldi	r25, 0x00	; 0
 582:	22 e3       	ldi	r18, 0x32	; 50
 584:	30 e0       	ldi	r19, 0x00	; 0
 586:	f9 01       	movw	r30, r18
 588:	20 81       	ld	r18, Z
 58a:	2d 7f       	andi	r18, 0xFD	; 253
 58c:	fc 01       	movw	r30, r24
 58e:	20 83       	st	Z, r18
		PORTD |= (1<<PD2);
 590:	82 e3       	ldi	r24, 0x32	; 50
 592:	90 e0       	ldi	r25, 0x00	; 0
 594:	22 e3       	ldi	r18, 0x32	; 50
 596:	30 e0       	ldi	r19, 0x00	; 0
 598:	f9 01       	movw	r30, r18
 59a:	20 81       	ld	r18, Z
 59c:	24 60       	ori	r18, 0x04	; 4
 59e:	fc 01       	movw	r30, r24
 5a0:	20 83       	st	Z, r18
        PORTD &= ~(1<<PD3);
 5a2:	82 e3       	ldi	r24, 0x32	; 50
 5a4:	90 e0       	ldi	r25, 0x00	; 0
 5a6:	22 e3       	ldi	r18, 0x32	; 50
 5a8:	30 e0       	ldi	r19, 0x00	; 0
 5aa:	f9 01       	movw	r30, r18
 5ac:	20 81       	ld	r18, Z
 5ae:	27 7f       	andi	r18, 0xF7	; 247
 5b0:	fc 01       	movw	r30, r24
 5b2:	20 83       	st	Z, r18
 5b4:	80 e0       	ldi	r24, 0x00	; 0
 5b6:	90 e0       	ldi	r25, 0x00	; 0
 5b8:	a0 ea       	ldi	r26, 0xA0	; 160
 5ba:	b1 e4       	ldi	r27, 0x41	; 65
 5bc:	8e 8f       	std	Y+30, r24	; 0x1e
 5be:	9f 8f       	std	Y+31, r25	; 0x1f
 5c0:	a8 a3       	lds	r26, 0x58
 5c2:	b9 a3       	lds	r27, 0x59
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
 5c4:	6e 8d       	ldd	r22, Y+30	; 0x1e
 5c6:	7f 8d       	ldd	r23, Y+31	; 0x1f
 5c8:	88 a1       	lds	r24, 0x48
 5ca:	99 a1       	lds	r25, 0x49
 5cc:	20 e0       	ldi	r18, 0x00	; 0
 5ce:	30 e0       	ldi	r19, 0x00	; 0
 5d0:	4a e7       	ldi	r20, 0x7A	; 122
 5d2:	53 e4       	ldi	r21, 0x43	; 67
 5d4:	0e 94 41 07 	call	0xe82	; 0xe82 <__mulsf3>
 5d8:	dc 01       	movw	r26, r24
 5da:	cb 01       	movw	r24, r22
 5dc:	8a a3       	lds	r24, 0x5a
 5de:	9b a3       	lds	r25, 0x5b
 5e0:	ac a3       	lds	r26, 0x5c
 5e2:	bd a3       	lds	r27, 0x5d
	if (__tmp < 1.0)
 5e4:	11 e0       	ldi	r17, 0x01	; 1
 5e6:	6a a1       	lds	r22, 0x4a
 5e8:	7b a1       	lds	r23, 0x4b
 5ea:	8c a1       	lds	r24, 0x4c
 5ec:	9d a1       	lds	r25, 0x4d
 5ee:	20 e0       	ldi	r18, 0x00	; 0
 5f0:	30 e0       	ldi	r19, 0x00	; 0
 5f2:	40 e8       	ldi	r20, 0x80	; 128
 5f4:	5f e3       	ldi	r21, 0x3F	; 63
 5f6:	0e 94 c0 06 	call	0xd80	; 0xd80 <__cmpsf2>
 5fa:	88 23       	and	r24, r24
 5fc:	0c f0       	brlt	.+2      	; 0x600 <__stack+0x1a1>
 5fe:	10 e0       	ldi	r17, 0x00	; 0
 600:	11 23       	and	r17, r17
 602:	29 f0       	breq	.+10     	; 0x60e <__stack+0x1af>
		__ticks = 1;
 604:	81 e0       	ldi	r24, 0x01	; 1
 606:	90 e0       	ldi	r25, 0x00	; 0
 608:	9f a3       	lds	r25, 0x5f
 60a:	8e a3       	lds	r24, 0x5e
 60c:	46 c0       	rjmp	.+140    	; 0x69a <__stack+0x23b>
	else if (__tmp > 65535)
 60e:	11 e0       	ldi	r17, 0x01	; 1
 610:	6a a1       	lds	r22, 0x4a
 612:	7b a1       	lds	r23, 0x4b
 614:	8c a1       	lds	r24, 0x4c
 616:	9d a1       	lds	r25, 0x4d
 618:	20 e0       	ldi	r18, 0x00	; 0
 61a:	3f ef       	ldi	r19, 0xFF	; 255
 61c:	4f e7       	ldi	r20, 0x7F	; 127
 61e:	57 e4       	ldi	r21, 0x47	; 71
 620:	0e 94 3d 07 	call	0xe7a	; 0xe7a <__gesf2>
 624:	18 16       	cp	r1, r24
 626:	0c f0       	brlt	.+2      	; 0x62a <__stack+0x1cb>
 628:	10 e0       	ldi	r17, 0x00	; 0
 62a:	11 23       	and	r17, r17
 62c:	61 f1       	breq	.+88     	; 0x686 <__stack+0x227>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 62e:	6e 8d       	ldd	r22, Y+30	; 0x1e
 630:	7f 8d       	ldd	r23, Y+31	; 0x1f
 632:	88 a1       	lds	r24, 0x48
 634:	99 a1       	lds	r25, 0x49
 636:	20 e0       	ldi	r18, 0x00	; 0
 638:	30 e0       	ldi	r19, 0x00	; 0
 63a:	40 e2       	ldi	r20, 0x20	; 32
 63c:	51 e4       	ldi	r21, 0x41	; 65
 63e:	0e 94 41 07 	call	0xe82	; 0xe82 <__mulsf3>
 642:	dc 01       	movw	r26, r24
 644:	cb 01       	movw	r24, r22
 646:	bc 01       	movw	r22, r24
 648:	cd 01       	movw	r24, r26
 64a:	0e 94 c4 06 	call	0xd88	; 0xd88 <__fixunssfsi>
 64e:	dc 01       	movw	r26, r24
 650:	cb 01       	movw	r24, r22
 652:	9f a3       	lds	r25, 0x5f
 654:	8e a3       	lds	r24, 0x5e
 656:	12 c0       	rjmp	.+36     	; 0x67c <__stack+0x21d>
 658:	89 e1       	ldi	r24, 0x19	; 25
 65a:	90 e0       	ldi	r25, 0x00	; 0
 65c:	99 a7       	lds	r25, 0x79
 65e:	88 a7       	lds	r24, 0x78
 660:	88 a5       	lds	r24, 0x68
 662:	99 a5       	lds	r25, 0x69
 664:	8c 01       	movw	r16, r24
 666:	c8 01       	movw	r24, r16
 668:	01 97       	sbiw	r24, 0x01	; 1
 66a:	f1 f7       	brne	.-4      	; 0x668 <__stack+0x209>
 66c:	8c 01       	movw	r16, r24
 66e:	19 a7       	lds	r17, 0x79
 670:	08 a7       	lds	r16, 0x78
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 672:	8e a1       	lds	r24, 0x4e
 674:	9f a1       	lds	r25, 0x4f
 676:	01 97       	sbiw	r24, 0x01	; 1
 678:	9f a3       	lds	r25, 0x5f
 67a:	8e a3       	lds	r24, 0x5e
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 67c:	8e a1       	lds	r24, 0x4e
 67e:	9f a1       	lds	r25, 0x4f
 680:	00 97       	sbiw	r24, 0x00	; 0
 682:	51 f7       	brne	.-44     	; 0x658 <__stack+0x1f9>
 684:	17 c0       	rjmp	.+46     	; 0x6b4 <__stack+0x255>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 686:	6a a1       	lds	r22, 0x4a
 688:	7b a1       	lds	r23, 0x4b
 68a:	8c a1       	lds	r24, 0x4c
 68c:	9d a1       	lds	r25, 0x4d
 68e:	0e 94 c4 06 	call	0xd88	; 0xd88 <__fixunssfsi>
 692:	dc 01       	movw	r26, r24
 694:	cb 01       	movw	r24, r22
 696:	9f a3       	lds	r25, 0x5f
 698:	8e a3       	lds	r24, 0x5e
 69a:	8e a1       	lds	r24, 0x4e
 69c:	9f a1       	lds	r25, 0x4f
 69e:	9b a7       	lds	r25, 0x7b
 6a0:	8a a7       	lds	r24, 0x7a
 6a2:	8a a5       	lds	r24, 0x6a
 6a4:	9b a5       	lds	r25, 0x6b
 6a6:	8c 01       	movw	r16, r24
 6a8:	f8 01       	movw	r30, r16
 6aa:	31 97       	sbiw	r30, 0x01	; 1
 6ac:	f1 f7       	brne	.-4      	; 0x6aa <__stack+0x24b>
 6ae:	8f 01       	movw	r16, r30
 6b0:	1b a7       	lds	r17, 0x7b
 6b2:	0a a7       	lds	r16, 0x7a
		_delay_ms(20);
		 PORTD &= ~(1<<PD0);
 6b4:	82 e3       	ldi	r24, 0x32	; 50
 6b6:	90 e0       	ldi	r25, 0x00	; 0
 6b8:	22 e3       	ldi	r18, 0x32	; 50
 6ba:	30 e0       	ldi	r19, 0x00	; 0
 6bc:	f9 01       	movw	r30, r18
 6be:	20 81       	ld	r18, Z
 6c0:	2e 7f       	andi	r18, 0xFE	; 254
 6c2:	fc 01       	movw	r30, r24
 6c4:	20 83       	st	Z, r18
		PORTD &= ~(1<<PD1);
 6c6:	82 e3       	ldi	r24, 0x32	; 50
 6c8:	90 e0       	ldi	r25, 0x00	; 0
 6ca:	22 e3       	ldi	r18, 0x32	; 50
 6cc:	30 e0       	ldi	r19, 0x00	; 0
 6ce:	f9 01       	movw	r30, r18
 6d0:	20 81       	ld	r18, Z
 6d2:	2d 7f       	andi	r18, 0xFD	; 253
 6d4:	fc 01       	movw	r30, r24
 6d6:	20 83       	st	Z, r18
		PORTD &= ~(1<<PD2);
 6d8:	82 e3       	ldi	r24, 0x32	; 50
 6da:	90 e0       	ldi	r25, 0x00	; 0
 6dc:	22 e3       	ldi	r18, 0x32	; 50
 6de:	30 e0       	ldi	r19, 0x00	; 0
 6e0:	f9 01       	movw	r30, r18
 6e2:	20 81       	ld	r18, Z
 6e4:	2b 7f       	andi	r18, 0xFB	; 251
 6e6:	fc 01       	movw	r30, r24
 6e8:	20 83       	st	Z, r18
       PORTD |= (1<<PD3);
 6ea:	82 e3       	ldi	r24, 0x32	; 50
 6ec:	90 e0       	ldi	r25, 0x00	; 0
 6ee:	22 e3       	ldi	r18, 0x32	; 50
 6f0:	30 e0       	ldi	r19, 0x00	; 0
 6f2:	f9 01       	movw	r30, r18
 6f4:	20 81       	ld	r18, Z
 6f6:	28 60       	ori	r18, 0x08	; 8
 6f8:	fc 01       	movw	r30, r24
 6fa:	20 83       	st	Z, r18
 6fc:	80 e0       	ldi	r24, 0x00	; 0
 6fe:	90 e0       	ldi	r25, 0x00	; 0
 700:	a0 ea       	ldi	r26, 0xA0	; 160
 702:	b1 e4       	ldi	r27, 0x41	; 65
 704:	8c a7       	lds	r24, 0x7c
 706:	9d a7       	lds	r25, 0x7d
 708:	ae a7       	lds	r26, 0x7e
 70a:	bf a7       	lds	r27, 0x7f
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
 70c:	6c a5       	lds	r22, 0x6c
 70e:	7d a5       	lds	r23, 0x6d
 710:	8e a5       	lds	r24, 0x6e
 712:	9f a5       	lds	r25, 0x6f
 714:	20 e0       	ldi	r18, 0x00	; 0
 716:	30 e0       	ldi	r19, 0x00	; 0
 718:	4a e7       	ldi	r20, 0x7A	; 122
 71a:	53 e4       	ldi	r21, 0x43	; 67
 71c:	0e 94 41 07 	call	0xe82	; 0xe82 <__mulsf3>
 720:	dc 01       	movw	r26, r24
 722:	cb 01       	movw	r24, r22
 724:	88 ab       	sts	0x58, r24
 726:	99 ab       	sts	0x59, r25
 728:	aa ab       	sts	0x5a, r26
 72a:	bb ab       	sts	0x5b, r27
	if (__tmp < 1.0)
 72c:	11 e0       	ldi	r17, 0x01	; 1
 72e:	68 a9       	sts	0x48, r22
 730:	79 a9       	sts	0x49, r23
 732:	8a a9       	sts	0x4a, r24
 734:	9b a9       	sts	0x4b, r25
 736:	20 e0       	ldi	r18, 0x00	; 0
 738:	30 e0       	ldi	r19, 0x00	; 0
 73a:	40 e8       	ldi	r20, 0x80	; 128
 73c:	5f e3       	ldi	r21, 0x3F	; 63
 73e:	0e 94 c0 06 	call	0xd80	; 0xd80 <__cmpsf2>
 742:	88 23       	and	r24, r24
 744:	0c f0       	brlt	.+2      	; 0x748 <__stack+0x2e9>
 746:	10 e0       	ldi	r17, 0x00	; 0
 748:	11 23       	and	r17, r17
 74a:	29 f0       	breq	.+10     	; 0x756 <__stack+0x2f7>
		__ticks = 1;
 74c:	81 e0       	ldi	r24, 0x01	; 1
 74e:	90 e0       	ldi	r25, 0x00	; 0
 750:	9d ab       	sts	0x5d, r25
 752:	8c ab       	sts	0x5c, r24
 754:	46 c0       	rjmp	.+140    	; 0x7e2 <__stack+0x383>
	else if (__tmp > 65535)
 756:	11 e0       	ldi	r17, 0x01	; 1
 758:	68 a9       	sts	0x48, r22
 75a:	79 a9       	sts	0x49, r23
 75c:	8a a9       	sts	0x4a, r24
 75e:	9b a9       	sts	0x4b, r25
 760:	20 e0       	ldi	r18, 0x00	; 0
 762:	3f ef       	ldi	r19, 0xFF	; 255
 764:	4f e7       	ldi	r20, 0x7F	; 127
 766:	57 e4       	ldi	r21, 0x47	; 71
 768:	0e 94 3d 07 	call	0xe7a	; 0xe7a <__gesf2>
 76c:	18 16       	cp	r1, r24
 76e:	0c f0       	brlt	.+2      	; 0x772 <__stack+0x313>
 770:	10 e0       	ldi	r17, 0x00	; 0
 772:	11 23       	and	r17, r17
 774:	61 f1       	breq	.+88     	; 0x7ce <__stack+0x36f>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 776:	6c a5       	lds	r22, 0x6c
 778:	7d a5       	lds	r23, 0x6d
 77a:	8e a5       	lds	r24, 0x6e
 77c:	9f a5       	lds	r25, 0x6f
 77e:	20 e0       	ldi	r18, 0x00	; 0
 780:	30 e0       	ldi	r19, 0x00	; 0
 782:	40 e2       	ldi	r20, 0x20	; 32
 784:	51 e4       	ldi	r21, 0x41	; 65
 786:	0e 94 41 07 	call	0xe82	; 0xe82 <__mulsf3>
 78a:	dc 01       	movw	r26, r24
 78c:	cb 01       	movw	r24, r22
 78e:	bc 01       	movw	r22, r24
 790:	cd 01       	movw	r24, r26
 792:	0e 94 c4 06 	call	0xd88	; 0xd88 <__fixunssfsi>
 796:	dc 01       	movw	r26, r24
 798:	cb 01       	movw	r24, r22
 79a:	9d ab       	sts	0x5d, r25
 79c:	8c ab       	sts	0x5c, r24
 79e:	12 c0       	rjmp	.+36     	; 0x7c4 <__stack+0x365>
 7a0:	89 e1       	ldi	r24, 0x19	; 25
 7a2:	90 e0       	ldi	r25, 0x00	; 0
 7a4:	9f ab       	sts	0x5f, r25
 7a6:	8e ab       	sts	0x5e, r24
 7a8:	8e a9       	sts	0x4e, r24
 7aa:	9f a9       	sts	0x4f, r25
 7ac:	8c 01       	movw	r16, r24
 7ae:	c8 01       	movw	r24, r16
 7b0:	01 97       	sbiw	r24, 0x01	; 1
 7b2:	f1 f7       	brne	.-4      	; 0x7b0 <__stack+0x351>
 7b4:	8c 01       	movw	r16, r24
 7b6:	1f ab       	sts	0x5f, r17
 7b8:	0e ab       	sts	0x5e, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 7ba:	8c a9       	sts	0x4c, r24
 7bc:	9d a9       	sts	0x4d, r25
 7be:	01 97       	sbiw	r24, 0x01	; 1
 7c0:	9d ab       	sts	0x5d, r25
 7c2:	8c ab       	sts	0x5c, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 7c4:	8c a9       	sts	0x4c, r24
 7c6:	9d a9       	sts	0x4d, r25
 7c8:	00 97       	sbiw	r24, 0x00	; 0
 7ca:	51 f7       	brne	.-44     	; 0x7a0 <__stack+0x341>
 7cc:	17 c0       	rjmp	.+46     	; 0x7fc <__stack+0x39d>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 7ce:	68 a9       	sts	0x48, r22
 7d0:	79 a9       	sts	0x49, r23
 7d2:	8a a9       	sts	0x4a, r24
 7d4:	9b a9       	sts	0x4b, r25
 7d6:	0e 94 c4 06 	call	0xd88	; 0xd88 <__fixunssfsi>
 7da:	dc 01       	movw	r26, r24
 7dc:	cb 01       	movw	r24, r22
 7de:	9d ab       	sts	0x5d, r25
 7e0:	8c ab       	sts	0x5c, r24
 7e2:	8c a9       	sts	0x4c, r24
 7e4:	9d a9       	sts	0x4d, r25
 7e6:	99 af       	sts	0x79, r25
 7e8:	88 af       	sts	0x78, r24
 7ea:	88 ad       	sts	0x68, r24
 7ec:	99 ad       	sts	0x69, r25
 7ee:	8c 01       	movw	r16, r24
 7f0:	f8 01       	movw	r30, r16
 7f2:	31 97       	sbiw	r30, 0x01	; 1
 7f4:	f1 f7       	brne	.-4      	; 0x7f2 <__stack+0x393>
 7f6:	8f 01       	movw	r16, r30
 7f8:	19 af       	sts	0x79, r17
 7fa:	08 af       	sts	0x78, r16
	}
}
void stepperf(void)
	   {
		unsigned char i;
		for(i=0;i<20;i++)
 7fc:	89 81       	ldd	r24, Y+1	; 0x01
 7fe:	8f 5f       	subi	r24, 0xFF	; 255
 800:	89 83       	std	Y+1, r24	; 0x01
 802:	89 81       	ldd	r24, Y+1	; 0x01
 804:	84 31       	cpi	r24, 0x14	; 20
 806:	08 f4       	brcc	.+2      	; 0x80a <__stack+0x3ab>
 808:	69 cd       	rjmp	.-1326   	; 0x2dc <stepperf+0x1c>
		PORTD &= ~(1<<PD1);
		PORTD &= ~(1<<PD2);
       PORTD |= (1<<PD3);
		_delay_ms(20);
	}
}
 80a:	e9 96       	adiw	r28, 0x39	; 57
 80c:	0f b6       	in	r0, 0x3f	; 63
 80e:	f8 94       	cli
 810:	de bf       	out	0x3e, r29	; 62
 812:	0f be       	out	0x3f, r0	; 63
 814:	cd bf       	out	0x3d, r28	; 61
 816:	df 91       	pop	r29
 818:	cf 91       	pop	r28
 81a:	1f 91       	pop	r17
 81c:	0f 91       	pop	r16
 81e:	08 95       	ret

00000820 <stepperb>:
void stepperb(void)
	   {
 820:	0f 93       	push	r16
 822:	1f 93       	push	r17
 824:	cf 93       	push	r28
 826:	df 93       	push	r29
 828:	cd b7       	in	r28, 0x3d	; 61
 82a:	de b7       	in	r29, 0x3e	; 62
 82c:	e9 97       	sbiw	r28, 0x39	; 57
 82e:	0f b6       	in	r0, 0x3f	; 63
 830:	f8 94       	cli
 832:	de bf       	out	0x3e, r29	; 62
 834:	0f be       	out	0x3f, r0	; 63
 836:	cd bf       	out	0x3d, r28	; 61
		unsigned char i;
		for(i=0;i<20;i++)
 838:	19 82       	std	Y+1, r1	; 0x01
 83a:	93 c2       	rjmp	.+1318   	; 0xd62 <stepperb+0x542>
		{ 
		PORTD &= ~(1<<PD0);	
 83c:	82 e3       	ldi	r24, 0x32	; 50
 83e:	90 e0       	ldi	r25, 0x00	; 0
 840:	22 e3       	ldi	r18, 0x32	; 50
 842:	30 e0       	ldi	r19, 0x00	; 0
 844:	f9 01       	movw	r30, r18
 846:	20 81       	ld	r18, Z
 848:	2e 7f       	andi	r18, 0xFE	; 254
 84a:	fc 01       	movw	r30, r24
 84c:	20 83       	st	Z, r18
		PORTD &= ~(1<<PD1);
 84e:	82 e3       	ldi	r24, 0x32	; 50
 850:	90 e0       	ldi	r25, 0x00	; 0
 852:	22 e3       	ldi	r18, 0x32	; 50
 854:	30 e0       	ldi	r19, 0x00	; 0
 856:	f9 01       	movw	r30, r18
 858:	20 81       	ld	r18, Z
 85a:	2d 7f       	andi	r18, 0xFD	; 253
 85c:	fc 01       	movw	r30, r24
 85e:	20 83       	st	Z, r18
		PORTD &= ~(1<<PD2);
 860:	82 e3       	ldi	r24, 0x32	; 50
 862:	90 e0       	ldi	r25, 0x00	; 0
 864:	22 e3       	ldi	r18, 0x32	; 50
 866:	30 e0       	ldi	r19, 0x00	; 0
 868:	f9 01       	movw	r30, r18
 86a:	20 81       	ld	r18, Z
 86c:	2b 7f       	andi	r18, 0xFB	; 251
 86e:	fc 01       	movw	r30, r24
 870:	20 83       	st	Z, r18
		PORTD |= (1<<PD3);
 872:	82 e3       	ldi	r24, 0x32	; 50
 874:	90 e0       	ldi	r25, 0x00	; 0
 876:	22 e3       	ldi	r18, 0x32	; 50
 878:	30 e0       	ldi	r19, 0x00	; 0
 87a:	f9 01       	movw	r30, r18
 87c:	20 81       	ld	r18, Z
 87e:	28 60       	ori	r18, 0x08	; 8
 880:	fc 01       	movw	r30, r24
 882:	20 83       	st	Z, r18
 884:	80 e0       	ldi	r24, 0x00	; 0
 886:	90 e0       	ldi	r25, 0x00	; 0
 888:	a0 ea       	ldi	r26, 0xA0	; 160
 88a:	b1 e4       	ldi	r27, 0x41	; 65
 88c:	8a 83       	std	Y+2, r24	; 0x02
 88e:	9b 83       	std	Y+3, r25	; 0x03
 890:	ac 83       	std	Y+4, r26	; 0x04
 892:	bd 83       	std	Y+5, r27	; 0x05
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
 894:	6a 81       	ldd	r22, Y+2	; 0x02
 896:	7b 81       	ldd	r23, Y+3	; 0x03
 898:	8c 81       	ldd	r24, Y+4	; 0x04
 89a:	9d 81       	ldd	r25, Y+5	; 0x05
 89c:	20 e0       	ldi	r18, 0x00	; 0
 89e:	30 e0       	ldi	r19, 0x00	; 0
 8a0:	4a e7       	ldi	r20, 0x7A	; 122
 8a2:	53 e4       	ldi	r21, 0x43	; 67
 8a4:	0e 94 41 07 	call	0xe82	; 0xe82 <__mulsf3>
 8a8:	dc 01       	movw	r26, r24
 8aa:	cb 01       	movw	r24, r22
 8ac:	8e 83       	std	Y+6, r24	; 0x06
 8ae:	9f 83       	std	Y+7, r25	; 0x07
 8b0:	a8 87       	std	Y+8, r26	; 0x08
 8b2:	b9 87       	std	Y+9, r27	; 0x09
	if (__tmp < 1.0)
 8b4:	11 e0       	ldi	r17, 0x01	; 1
 8b6:	6e 81       	ldd	r22, Y+6	; 0x06
 8b8:	7f 81       	ldd	r23, Y+7	; 0x07
 8ba:	88 85       	ldd	r24, Y+8	; 0x08
 8bc:	99 85       	ldd	r25, Y+9	; 0x09
 8be:	20 e0       	ldi	r18, 0x00	; 0
 8c0:	30 e0       	ldi	r19, 0x00	; 0
 8c2:	40 e8       	ldi	r20, 0x80	; 128
 8c4:	5f e3       	ldi	r21, 0x3F	; 63
 8c6:	0e 94 c0 06 	call	0xd80	; 0xd80 <__cmpsf2>
 8ca:	88 23       	and	r24, r24
 8cc:	0c f0       	brlt	.+2      	; 0x8d0 <stepperb+0xb0>
 8ce:	10 e0       	ldi	r17, 0x00	; 0
 8d0:	11 23       	and	r17, r17
 8d2:	29 f0       	breq	.+10     	; 0x8de <stepperb+0xbe>
		__ticks = 1;
 8d4:	81 e0       	ldi	r24, 0x01	; 1
 8d6:	90 e0       	ldi	r25, 0x00	; 0
 8d8:	9b 87       	std	Y+11, r25	; 0x0b
 8da:	8a 87       	std	Y+10, r24	; 0x0a
 8dc:	46 c0       	rjmp	.+140    	; 0x96a <stepperb+0x14a>
	else if (__tmp > 65535)
 8de:	11 e0       	ldi	r17, 0x01	; 1
 8e0:	6e 81       	ldd	r22, Y+6	; 0x06
 8e2:	7f 81       	ldd	r23, Y+7	; 0x07
 8e4:	88 85       	ldd	r24, Y+8	; 0x08
 8e6:	99 85       	ldd	r25, Y+9	; 0x09
 8e8:	20 e0       	ldi	r18, 0x00	; 0
 8ea:	3f ef       	ldi	r19, 0xFF	; 255
 8ec:	4f e7       	ldi	r20, 0x7F	; 127
 8ee:	57 e4       	ldi	r21, 0x47	; 71
 8f0:	0e 94 3d 07 	call	0xe7a	; 0xe7a <__gesf2>
 8f4:	18 16       	cp	r1, r24
 8f6:	0c f0       	brlt	.+2      	; 0x8fa <stepperb+0xda>
 8f8:	10 e0       	ldi	r17, 0x00	; 0
 8fa:	11 23       	and	r17, r17
 8fc:	61 f1       	breq	.+88     	; 0x956 <stepperb+0x136>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 8fe:	6a 81       	ldd	r22, Y+2	; 0x02
 900:	7b 81       	ldd	r23, Y+3	; 0x03
 902:	8c 81       	ldd	r24, Y+4	; 0x04
 904:	9d 81       	ldd	r25, Y+5	; 0x05
 906:	20 e0       	ldi	r18, 0x00	; 0
 908:	30 e0       	ldi	r19, 0x00	; 0
 90a:	40 e2       	ldi	r20, 0x20	; 32
 90c:	51 e4       	ldi	r21, 0x41	; 65
 90e:	0e 94 41 07 	call	0xe82	; 0xe82 <__mulsf3>
 912:	dc 01       	movw	r26, r24
 914:	cb 01       	movw	r24, r22
 916:	bc 01       	movw	r22, r24
 918:	cd 01       	movw	r24, r26
 91a:	0e 94 c4 06 	call	0xd88	; 0xd88 <__fixunssfsi>
 91e:	dc 01       	movw	r26, r24
 920:	cb 01       	movw	r24, r22
 922:	9b 87       	std	Y+11, r25	; 0x0b
 924:	8a 87       	std	Y+10, r24	; 0x0a
 926:	12 c0       	rjmp	.+36     	; 0x94c <stepperb+0x12c>
 928:	89 e1       	ldi	r24, 0x19	; 25
 92a:	90 e0       	ldi	r25, 0x00	; 0
 92c:	9d 87       	std	Y+13, r25	; 0x0d
 92e:	8c 87       	std	Y+12, r24	; 0x0c
 930:	8c 85       	ldd	r24, Y+12	; 0x0c
 932:	9d 85       	ldd	r25, Y+13	; 0x0d
 934:	8c 01       	movw	r16, r24
 936:	c8 01       	movw	r24, r16
 938:	01 97       	sbiw	r24, 0x01	; 1
 93a:	f1 f7       	brne	.-4      	; 0x938 <stepperb+0x118>
 93c:	8c 01       	movw	r16, r24
 93e:	1d 87       	std	Y+13, r17	; 0x0d
 940:	0c 87       	std	Y+12, r16	; 0x0c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 942:	8a 85       	ldd	r24, Y+10	; 0x0a
 944:	9b 85       	ldd	r25, Y+11	; 0x0b
 946:	01 97       	sbiw	r24, 0x01	; 1
 948:	9b 87       	std	Y+11, r25	; 0x0b
 94a:	8a 87       	std	Y+10, r24	; 0x0a
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 94c:	8a 85       	ldd	r24, Y+10	; 0x0a
 94e:	9b 85       	ldd	r25, Y+11	; 0x0b
 950:	00 97       	sbiw	r24, 0x00	; 0
 952:	51 f7       	brne	.-44     	; 0x928 <stepperb+0x108>
 954:	17 c0       	rjmp	.+46     	; 0x984 <stepperb+0x164>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 956:	6e 81       	ldd	r22, Y+6	; 0x06
 958:	7f 81       	ldd	r23, Y+7	; 0x07
 95a:	88 85       	ldd	r24, Y+8	; 0x08
 95c:	99 85       	ldd	r25, Y+9	; 0x09
 95e:	0e 94 c4 06 	call	0xd88	; 0xd88 <__fixunssfsi>
 962:	dc 01       	movw	r26, r24
 964:	cb 01       	movw	r24, r22
 966:	9b 87       	std	Y+11, r25	; 0x0b
 968:	8a 87       	std	Y+10, r24	; 0x0a
 96a:	8a 85       	ldd	r24, Y+10	; 0x0a
 96c:	9b 85       	ldd	r25, Y+11	; 0x0b
 96e:	9f 87       	std	Y+15, r25	; 0x0f
 970:	8e 87       	std	Y+14, r24	; 0x0e
 972:	8e 85       	ldd	r24, Y+14	; 0x0e
 974:	9f 85       	ldd	r25, Y+15	; 0x0f
 976:	8c 01       	movw	r16, r24
 978:	f8 01       	movw	r30, r16
 97a:	31 97       	sbiw	r30, 0x01	; 1
 97c:	f1 f7       	brne	.-4      	; 0x97a <stepperb+0x15a>
 97e:	8f 01       	movw	r16, r30
 980:	1f 87       	std	Y+15, r17	; 0x0f
 982:	0e 87       	std	Y+14, r16	; 0x0e
		_delay_ms(20);
		
        PORTD &= ~(1<<PD0);
 984:	82 e3       	ldi	r24, 0x32	; 50
 986:	90 e0       	ldi	r25, 0x00	; 0
 988:	22 e3       	ldi	r18, 0x32	; 50
 98a:	30 e0       	ldi	r19, 0x00	; 0
 98c:	f9 01       	movw	r30, r18
 98e:	20 81       	ld	r18, Z
 990:	2e 7f       	andi	r18, 0xFE	; 254
 992:	fc 01       	movw	r30, r24
 994:	20 83       	st	Z, r18
		PORTD &= ~(1<<PD1);
 996:	82 e3       	ldi	r24, 0x32	; 50
 998:	90 e0       	ldi	r25, 0x00	; 0
 99a:	22 e3       	ldi	r18, 0x32	; 50
 99c:	30 e0       	ldi	r19, 0x00	; 0
 99e:	f9 01       	movw	r30, r18
 9a0:	20 81       	ld	r18, Z
 9a2:	2d 7f       	andi	r18, 0xFD	; 253
 9a4:	fc 01       	movw	r30, r24
 9a6:	20 83       	st	Z, r18
		PORTD |= (1<<PD2);
 9a8:	82 e3       	ldi	r24, 0x32	; 50
 9aa:	90 e0       	ldi	r25, 0x00	; 0
 9ac:	22 e3       	ldi	r18, 0x32	; 50
 9ae:	30 e0       	ldi	r19, 0x00	; 0
 9b0:	f9 01       	movw	r30, r18
 9b2:	20 81       	ld	r18, Z
 9b4:	24 60       	ori	r18, 0x04	; 4
 9b6:	fc 01       	movw	r30, r24
 9b8:	20 83       	st	Z, r18
        PORTD &= ~(1<<PD3);
 9ba:	82 e3       	ldi	r24, 0x32	; 50
 9bc:	90 e0       	ldi	r25, 0x00	; 0
 9be:	22 e3       	ldi	r18, 0x32	; 50
 9c0:	30 e0       	ldi	r19, 0x00	; 0
 9c2:	f9 01       	movw	r30, r18
 9c4:	20 81       	ld	r18, Z
 9c6:	27 7f       	andi	r18, 0xF7	; 247
 9c8:	fc 01       	movw	r30, r24
 9ca:	20 83       	st	Z, r18
 9cc:	80 e0       	ldi	r24, 0x00	; 0
 9ce:	90 e0       	ldi	r25, 0x00	; 0
 9d0:	a0 ea       	ldi	r26, 0xA0	; 160
 9d2:	b1 e4       	ldi	r27, 0x41	; 65
 9d4:	88 8b       	std	Y+16, r24	; 0x10
 9d6:	99 8b       	std	Y+17, r25	; 0x11
 9d8:	aa 8b       	std	Y+18, r26	; 0x12
 9da:	bb 8b       	std	Y+19, r27	; 0x13
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
 9dc:	68 89       	ldd	r22, Y+16	; 0x10
 9de:	79 89       	ldd	r23, Y+17	; 0x11
 9e0:	8a 89       	ldd	r24, Y+18	; 0x12
 9e2:	9b 89       	ldd	r25, Y+19	; 0x13
 9e4:	20 e0       	ldi	r18, 0x00	; 0
 9e6:	30 e0       	ldi	r19, 0x00	; 0
 9e8:	4a e7       	ldi	r20, 0x7A	; 122
 9ea:	53 e4       	ldi	r21, 0x43	; 67
 9ec:	0e 94 41 07 	call	0xe82	; 0xe82 <__mulsf3>
 9f0:	dc 01       	movw	r26, r24
 9f2:	cb 01       	movw	r24, r22
 9f4:	8c 8b       	std	Y+20, r24	; 0x14
 9f6:	9d 8b       	std	Y+21, r25	; 0x15
 9f8:	ae 8b       	std	Y+22, r26	; 0x16
 9fa:	bf 8b       	std	Y+23, r27	; 0x17
	if (__tmp < 1.0)
 9fc:	11 e0       	ldi	r17, 0x01	; 1
 9fe:	6c 89       	ldd	r22, Y+20	; 0x14
 a00:	7d 89       	ldd	r23, Y+21	; 0x15
 a02:	8e 89       	ldd	r24, Y+22	; 0x16
 a04:	9f 89       	ldd	r25, Y+23	; 0x17
 a06:	20 e0       	ldi	r18, 0x00	; 0
 a08:	30 e0       	ldi	r19, 0x00	; 0
 a0a:	40 e8       	ldi	r20, 0x80	; 128
 a0c:	5f e3       	ldi	r21, 0x3F	; 63
 a0e:	0e 94 c0 06 	call	0xd80	; 0xd80 <__cmpsf2>
 a12:	88 23       	and	r24, r24
 a14:	0c f0       	brlt	.+2      	; 0xa18 <stepperb+0x1f8>
 a16:	10 e0       	ldi	r17, 0x00	; 0
 a18:	11 23       	and	r17, r17
 a1a:	29 f0       	breq	.+10     	; 0xa26 <stepperb+0x206>
		__ticks = 1;
 a1c:	81 e0       	ldi	r24, 0x01	; 1
 a1e:	90 e0       	ldi	r25, 0x00	; 0
 a20:	99 8f       	std	Y+25, r25	; 0x19
 a22:	88 8f       	std	Y+24, r24	; 0x18
 a24:	46 c0       	rjmp	.+140    	; 0xab2 <stepperb+0x292>
	else if (__tmp > 65535)
 a26:	11 e0       	ldi	r17, 0x01	; 1
 a28:	6c 89       	ldd	r22, Y+20	; 0x14
 a2a:	7d 89       	ldd	r23, Y+21	; 0x15
 a2c:	8e 89       	ldd	r24, Y+22	; 0x16
 a2e:	9f 89       	ldd	r25, Y+23	; 0x17
 a30:	20 e0       	ldi	r18, 0x00	; 0
 a32:	3f ef       	ldi	r19, 0xFF	; 255
 a34:	4f e7       	ldi	r20, 0x7F	; 127
 a36:	57 e4       	ldi	r21, 0x47	; 71
 a38:	0e 94 3d 07 	call	0xe7a	; 0xe7a <__gesf2>
 a3c:	18 16       	cp	r1, r24
 a3e:	0c f0       	brlt	.+2      	; 0xa42 <stepperb+0x222>
 a40:	10 e0       	ldi	r17, 0x00	; 0
 a42:	11 23       	and	r17, r17
 a44:	61 f1       	breq	.+88     	; 0xa9e <stepperb+0x27e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 a46:	68 89       	ldd	r22, Y+16	; 0x10
 a48:	79 89       	ldd	r23, Y+17	; 0x11
 a4a:	8a 89       	ldd	r24, Y+18	; 0x12
 a4c:	9b 89       	ldd	r25, Y+19	; 0x13
 a4e:	20 e0       	ldi	r18, 0x00	; 0
 a50:	30 e0       	ldi	r19, 0x00	; 0
 a52:	40 e2       	ldi	r20, 0x20	; 32
 a54:	51 e4       	ldi	r21, 0x41	; 65
 a56:	0e 94 41 07 	call	0xe82	; 0xe82 <__mulsf3>
 a5a:	dc 01       	movw	r26, r24
 a5c:	cb 01       	movw	r24, r22
 a5e:	bc 01       	movw	r22, r24
 a60:	cd 01       	movw	r24, r26
 a62:	0e 94 c4 06 	call	0xd88	; 0xd88 <__fixunssfsi>
 a66:	dc 01       	movw	r26, r24
 a68:	cb 01       	movw	r24, r22
 a6a:	99 8f       	std	Y+25, r25	; 0x19
 a6c:	88 8f       	std	Y+24, r24	; 0x18
 a6e:	12 c0       	rjmp	.+36     	; 0xa94 <stepperb+0x274>
 a70:	89 e1       	ldi	r24, 0x19	; 25
 a72:	90 e0       	ldi	r25, 0x00	; 0
 a74:	9b 8f       	std	Y+27, r25	; 0x1b
 a76:	8a 8f       	std	Y+26, r24	; 0x1a
 a78:	8a 8d       	ldd	r24, Y+26	; 0x1a
 a7a:	9b 8d       	ldd	r25, Y+27	; 0x1b
 a7c:	8c 01       	movw	r16, r24
 a7e:	c8 01       	movw	r24, r16
 a80:	01 97       	sbiw	r24, 0x01	; 1
 a82:	f1 f7       	brne	.-4      	; 0xa80 <stepperb+0x260>
 a84:	8c 01       	movw	r16, r24
 a86:	1b 8f       	std	Y+27, r17	; 0x1b
 a88:	0a 8f       	std	Y+26, r16	; 0x1a
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 a8a:	88 8d       	ldd	r24, Y+24	; 0x18
 a8c:	99 8d       	ldd	r25, Y+25	; 0x19
 a8e:	01 97       	sbiw	r24, 0x01	; 1
 a90:	99 8f       	std	Y+25, r25	; 0x19
 a92:	88 8f       	std	Y+24, r24	; 0x18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 a94:	88 8d       	ldd	r24, Y+24	; 0x18
 a96:	99 8d       	ldd	r25, Y+25	; 0x19
 a98:	00 97       	sbiw	r24, 0x00	; 0
 a9a:	51 f7       	brne	.-44     	; 0xa70 <stepperb+0x250>
 a9c:	17 c0       	rjmp	.+46     	; 0xacc <stepperb+0x2ac>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 a9e:	6c 89       	ldd	r22, Y+20	; 0x14
 aa0:	7d 89       	ldd	r23, Y+21	; 0x15
 aa2:	8e 89       	ldd	r24, Y+22	; 0x16
 aa4:	9f 89       	ldd	r25, Y+23	; 0x17
 aa6:	0e 94 c4 06 	call	0xd88	; 0xd88 <__fixunssfsi>
 aaa:	dc 01       	movw	r26, r24
 aac:	cb 01       	movw	r24, r22
 aae:	99 8f       	std	Y+25, r25	; 0x19
 ab0:	88 8f       	std	Y+24, r24	; 0x18
 ab2:	88 8d       	ldd	r24, Y+24	; 0x18
 ab4:	99 8d       	ldd	r25, Y+25	; 0x19
 ab6:	9d 8f       	std	Y+29, r25	; 0x1d
 ab8:	8c 8f       	std	Y+28, r24	; 0x1c
 aba:	8c 8d       	ldd	r24, Y+28	; 0x1c
 abc:	9d 8d       	ldd	r25, Y+29	; 0x1d
 abe:	8c 01       	movw	r16, r24
 ac0:	f8 01       	movw	r30, r16
 ac2:	31 97       	sbiw	r30, 0x01	; 1
 ac4:	f1 f7       	brne	.-4      	; 0xac2 <stepperb+0x2a2>
 ac6:	8f 01       	movw	r16, r30
 ac8:	1d 8f       	std	Y+29, r17	; 0x1d
 aca:	0c 8f       	std	Y+28, r16	; 0x1c
		_delay_ms(20);
		PORTD &= ~(1<<PD0);
 acc:	82 e3       	ldi	r24, 0x32	; 50
 ace:	90 e0       	ldi	r25, 0x00	; 0
 ad0:	22 e3       	ldi	r18, 0x32	; 50
 ad2:	30 e0       	ldi	r19, 0x00	; 0
 ad4:	f9 01       	movw	r30, r18
 ad6:	20 81       	ld	r18, Z
 ad8:	2e 7f       	andi	r18, 0xFE	; 254
 ada:	fc 01       	movw	r30, r24
 adc:	20 83       	st	Z, r18
		PORTD |= (1<<PD1);
 ade:	82 e3       	ldi	r24, 0x32	; 50
 ae0:	90 e0       	ldi	r25, 0x00	; 0
 ae2:	22 e3       	ldi	r18, 0x32	; 50
 ae4:	30 e0       	ldi	r19, 0x00	; 0
 ae6:	f9 01       	movw	r30, r18
 ae8:	20 81       	ld	r18, Z
 aea:	22 60       	ori	r18, 0x02	; 2
 aec:	fc 01       	movw	r30, r24
 aee:	20 83       	st	Z, r18
        PORTD &= ~(1<<PD2);
 af0:	82 e3       	ldi	r24, 0x32	; 50
 af2:	90 e0       	ldi	r25, 0x00	; 0
 af4:	22 e3       	ldi	r18, 0x32	; 50
 af6:	30 e0       	ldi	r19, 0x00	; 0
 af8:	f9 01       	movw	r30, r18
 afa:	20 81       	ld	r18, Z
 afc:	2b 7f       	andi	r18, 0xFB	; 251
 afe:	fc 01       	movw	r30, r24
 b00:	20 83       	st	Z, r18
        PORTD &= ~(1<<PD3);
 b02:	82 e3       	ldi	r24, 0x32	; 50
 b04:	90 e0       	ldi	r25, 0x00	; 0
 b06:	22 e3       	ldi	r18, 0x32	; 50
 b08:	30 e0       	ldi	r19, 0x00	; 0
 b0a:	f9 01       	movw	r30, r18
 b0c:	20 81       	ld	r18, Z
 b0e:	27 7f       	andi	r18, 0xF7	; 247
 b10:	fc 01       	movw	r30, r24
 b12:	20 83       	st	Z, r18
 b14:	80 e0       	ldi	r24, 0x00	; 0
 b16:	90 e0       	ldi	r25, 0x00	; 0
 b18:	a0 ea       	ldi	r26, 0xA0	; 160
 b1a:	b1 e4       	ldi	r27, 0x41	; 65
 b1c:	8e 8f       	std	Y+30, r24	; 0x1e
 b1e:	9f 8f       	std	Y+31, r25	; 0x1f
 b20:	a8 a3       	lds	r26, 0x58
 b22:	b9 a3       	lds	r27, 0x59
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
 b24:	6e 8d       	ldd	r22, Y+30	; 0x1e
 b26:	7f 8d       	ldd	r23, Y+31	; 0x1f
 b28:	88 a1       	lds	r24, 0x48
 b2a:	99 a1       	lds	r25, 0x49
 b2c:	20 e0       	ldi	r18, 0x00	; 0
 b2e:	30 e0       	ldi	r19, 0x00	; 0
 b30:	4a e7       	ldi	r20, 0x7A	; 122
 b32:	53 e4       	ldi	r21, 0x43	; 67
 b34:	0e 94 41 07 	call	0xe82	; 0xe82 <__mulsf3>
 b38:	dc 01       	movw	r26, r24
 b3a:	cb 01       	movw	r24, r22
 b3c:	8a a3       	lds	r24, 0x5a
 b3e:	9b a3       	lds	r25, 0x5b
 b40:	ac a3       	lds	r26, 0x5c
 b42:	bd a3       	lds	r27, 0x5d
	if (__tmp < 1.0)
 b44:	11 e0       	ldi	r17, 0x01	; 1
 b46:	6a a1       	lds	r22, 0x4a
 b48:	7b a1       	lds	r23, 0x4b
 b4a:	8c a1       	lds	r24, 0x4c
 b4c:	9d a1       	lds	r25, 0x4d
 b4e:	20 e0       	ldi	r18, 0x00	; 0
 b50:	30 e0       	ldi	r19, 0x00	; 0
 b52:	40 e8       	ldi	r20, 0x80	; 128
 b54:	5f e3       	ldi	r21, 0x3F	; 63
 b56:	0e 94 c0 06 	call	0xd80	; 0xd80 <__cmpsf2>
 b5a:	88 23       	and	r24, r24
 b5c:	0c f0       	brlt	.+2      	; 0xb60 <stepperb+0x340>
 b5e:	10 e0       	ldi	r17, 0x00	; 0
 b60:	11 23       	and	r17, r17
 b62:	29 f0       	breq	.+10     	; 0xb6e <stepperb+0x34e>
		__ticks = 1;
 b64:	81 e0       	ldi	r24, 0x01	; 1
 b66:	90 e0       	ldi	r25, 0x00	; 0
 b68:	9f a3       	lds	r25, 0x5f
 b6a:	8e a3       	lds	r24, 0x5e
 b6c:	46 c0       	rjmp	.+140    	; 0xbfa <stepperb+0x3da>
	else if (__tmp > 65535)
 b6e:	11 e0       	ldi	r17, 0x01	; 1
 b70:	6a a1       	lds	r22, 0x4a
 b72:	7b a1       	lds	r23, 0x4b
 b74:	8c a1       	lds	r24, 0x4c
 b76:	9d a1       	lds	r25, 0x4d
 b78:	20 e0       	ldi	r18, 0x00	; 0
 b7a:	3f ef       	ldi	r19, 0xFF	; 255
 b7c:	4f e7       	ldi	r20, 0x7F	; 127
 b7e:	57 e4       	ldi	r21, 0x47	; 71
 b80:	0e 94 3d 07 	call	0xe7a	; 0xe7a <__gesf2>
 b84:	18 16       	cp	r1, r24
 b86:	0c f0       	brlt	.+2      	; 0xb8a <stepperb+0x36a>
 b88:	10 e0       	ldi	r17, 0x00	; 0
 b8a:	11 23       	and	r17, r17
 b8c:	61 f1       	breq	.+88     	; 0xbe6 <stepperb+0x3c6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 b8e:	6e 8d       	ldd	r22, Y+30	; 0x1e
 b90:	7f 8d       	ldd	r23, Y+31	; 0x1f
 b92:	88 a1       	lds	r24, 0x48
 b94:	99 a1       	lds	r25, 0x49
 b96:	20 e0       	ldi	r18, 0x00	; 0
 b98:	30 e0       	ldi	r19, 0x00	; 0
 b9a:	40 e2       	ldi	r20, 0x20	; 32
 b9c:	51 e4       	ldi	r21, 0x41	; 65
 b9e:	0e 94 41 07 	call	0xe82	; 0xe82 <__mulsf3>
 ba2:	dc 01       	movw	r26, r24
 ba4:	cb 01       	movw	r24, r22
 ba6:	bc 01       	movw	r22, r24
 ba8:	cd 01       	movw	r24, r26
 baa:	0e 94 c4 06 	call	0xd88	; 0xd88 <__fixunssfsi>
 bae:	dc 01       	movw	r26, r24
 bb0:	cb 01       	movw	r24, r22
 bb2:	9f a3       	lds	r25, 0x5f
 bb4:	8e a3       	lds	r24, 0x5e
 bb6:	12 c0       	rjmp	.+36     	; 0xbdc <stepperb+0x3bc>
 bb8:	89 e1       	ldi	r24, 0x19	; 25
 bba:	90 e0       	ldi	r25, 0x00	; 0
 bbc:	99 a7       	lds	r25, 0x79
 bbe:	88 a7       	lds	r24, 0x78
 bc0:	88 a5       	lds	r24, 0x68
 bc2:	99 a5       	lds	r25, 0x69
 bc4:	8c 01       	movw	r16, r24
 bc6:	c8 01       	movw	r24, r16
 bc8:	01 97       	sbiw	r24, 0x01	; 1
 bca:	f1 f7       	brne	.-4      	; 0xbc8 <stepperb+0x3a8>
 bcc:	8c 01       	movw	r16, r24
 bce:	19 a7       	lds	r17, 0x79
 bd0:	08 a7       	lds	r16, 0x78
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 bd2:	8e a1       	lds	r24, 0x4e
 bd4:	9f a1       	lds	r25, 0x4f
 bd6:	01 97       	sbiw	r24, 0x01	; 1
 bd8:	9f a3       	lds	r25, 0x5f
 bda:	8e a3       	lds	r24, 0x5e
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 bdc:	8e a1       	lds	r24, 0x4e
 bde:	9f a1       	lds	r25, 0x4f
 be0:	00 97       	sbiw	r24, 0x00	; 0
 be2:	51 f7       	brne	.-44     	; 0xbb8 <stepperb+0x398>
 be4:	17 c0       	rjmp	.+46     	; 0xc14 <stepperb+0x3f4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 be6:	6a a1       	lds	r22, 0x4a
 be8:	7b a1       	lds	r23, 0x4b
 bea:	8c a1       	lds	r24, 0x4c
 bec:	9d a1       	lds	r25, 0x4d
 bee:	0e 94 c4 06 	call	0xd88	; 0xd88 <__fixunssfsi>
 bf2:	dc 01       	movw	r26, r24
 bf4:	cb 01       	movw	r24, r22
 bf6:	9f a3       	lds	r25, 0x5f
 bf8:	8e a3       	lds	r24, 0x5e
 bfa:	8e a1       	lds	r24, 0x4e
 bfc:	9f a1       	lds	r25, 0x4f
 bfe:	9b a7       	lds	r25, 0x7b
 c00:	8a a7       	lds	r24, 0x7a
 c02:	8a a5       	lds	r24, 0x6a
 c04:	9b a5       	lds	r25, 0x6b
 c06:	8c 01       	movw	r16, r24
 c08:	f8 01       	movw	r30, r16
 c0a:	31 97       	sbiw	r30, 0x01	; 1
 c0c:	f1 f7       	brne	.-4      	; 0xc0a <stepperb+0x3ea>
 c0e:	8f 01       	movw	r16, r30
 c10:	1b a7       	lds	r17, 0x7b
 c12:	0a a7       	lds	r16, 0x7a
		_delay_ms(20);
		PORTD |= (1<<PD0);
 c14:	82 e3       	ldi	r24, 0x32	; 50
 c16:	90 e0       	ldi	r25, 0x00	; 0
 c18:	22 e3       	ldi	r18, 0x32	; 50
 c1a:	30 e0       	ldi	r19, 0x00	; 0
 c1c:	f9 01       	movw	r30, r18
 c1e:	20 81       	ld	r18, Z
 c20:	21 60       	ori	r18, 0x01	; 1
 c22:	fc 01       	movw	r30, r24
 c24:	20 83       	st	Z, r18
        PORTD &= ~(1<<PD1);
 c26:	82 e3       	ldi	r24, 0x32	; 50
 c28:	90 e0       	ldi	r25, 0x00	; 0
 c2a:	22 e3       	ldi	r18, 0x32	; 50
 c2c:	30 e0       	ldi	r19, 0x00	; 0
 c2e:	f9 01       	movw	r30, r18
 c30:	20 81       	ld	r18, Z
 c32:	2d 7f       	andi	r18, 0xFD	; 253
 c34:	fc 01       	movw	r30, r24
 c36:	20 83       	st	Z, r18
		PORTD &= ~(1<<PD2);
 c38:	82 e3       	ldi	r24, 0x32	; 50
 c3a:	90 e0       	ldi	r25, 0x00	; 0
 c3c:	22 e3       	ldi	r18, 0x32	; 50
 c3e:	30 e0       	ldi	r19, 0x00	; 0
 c40:	f9 01       	movw	r30, r18
 c42:	20 81       	ld	r18, Z
 c44:	2b 7f       	andi	r18, 0xFB	; 251
 c46:	fc 01       	movw	r30, r24
 c48:	20 83       	st	Z, r18
        PORTD &= ~(1<<PD3);
 c4a:	82 e3       	ldi	r24, 0x32	; 50
 c4c:	90 e0       	ldi	r25, 0x00	; 0
 c4e:	22 e3       	ldi	r18, 0x32	; 50
 c50:	30 e0       	ldi	r19, 0x00	; 0
 c52:	f9 01       	movw	r30, r18
 c54:	20 81       	ld	r18, Z
 c56:	27 7f       	andi	r18, 0xF7	; 247
 c58:	fc 01       	movw	r30, r24
 c5a:	20 83       	st	Z, r18
 c5c:	80 e0       	ldi	r24, 0x00	; 0
 c5e:	90 e0       	ldi	r25, 0x00	; 0
 c60:	a0 ea       	ldi	r26, 0xA0	; 160
 c62:	b1 e4       	ldi	r27, 0x41	; 65
 c64:	8c a7       	lds	r24, 0x7c
 c66:	9d a7       	lds	r25, 0x7d
 c68:	ae a7       	lds	r26, 0x7e
 c6a:	bf a7       	lds	r27, 0x7f
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
 c6c:	6c a5       	lds	r22, 0x6c
 c6e:	7d a5       	lds	r23, 0x6d
 c70:	8e a5       	lds	r24, 0x6e
 c72:	9f a5       	lds	r25, 0x6f
 c74:	20 e0       	ldi	r18, 0x00	; 0
 c76:	30 e0       	ldi	r19, 0x00	; 0
 c78:	4a e7       	ldi	r20, 0x7A	; 122
 c7a:	53 e4       	ldi	r21, 0x43	; 67
 c7c:	0e 94 41 07 	call	0xe82	; 0xe82 <__mulsf3>
 c80:	dc 01       	movw	r26, r24
 c82:	cb 01       	movw	r24, r22
 c84:	88 ab       	sts	0x58, r24
 c86:	99 ab       	sts	0x59, r25
 c88:	aa ab       	sts	0x5a, r26
 c8a:	bb ab       	sts	0x5b, r27
	if (__tmp < 1.0)
 c8c:	11 e0       	ldi	r17, 0x01	; 1
 c8e:	68 a9       	sts	0x48, r22
 c90:	79 a9       	sts	0x49, r23
 c92:	8a a9       	sts	0x4a, r24
 c94:	9b a9       	sts	0x4b, r25
 c96:	20 e0       	ldi	r18, 0x00	; 0
 c98:	30 e0       	ldi	r19, 0x00	; 0
 c9a:	40 e8       	ldi	r20, 0x80	; 128
 c9c:	5f e3       	ldi	r21, 0x3F	; 63
 c9e:	0e 94 c0 06 	call	0xd80	; 0xd80 <__cmpsf2>
 ca2:	88 23       	and	r24, r24
 ca4:	0c f0       	brlt	.+2      	; 0xca8 <stepperb+0x488>
 ca6:	10 e0       	ldi	r17, 0x00	; 0
 ca8:	11 23       	and	r17, r17
 caa:	29 f0       	breq	.+10     	; 0xcb6 <stepperb+0x496>
		__ticks = 1;
 cac:	81 e0       	ldi	r24, 0x01	; 1
 cae:	90 e0       	ldi	r25, 0x00	; 0
 cb0:	9d ab       	sts	0x5d, r25
 cb2:	8c ab       	sts	0x5c, r24
 cb4:	46 c0       	rjmp	.+140    	; 0xd42 <stepperb+0x522>
	else if (__tmp > 65535)
 cb6:	11 e0       	ldi	r17, 0x01	; 1
 cb8:	68 a9       	sts	0x48, r22
 cba:	79 a9       	sts	0x49, r23
 cbc:	8a a9       	sts	0x4a, r24
 cbe:	9b a9       	sts	0x4b, r25
 cc0:	20 e0       	ldi	r18, 0x00	; 0
 cc2:	3f ef       	ldi	r19, 0xFF	; 255
 cc4:	4f e7       	ldi	r20, 0x7F	; 127
 cc6:	57 e4       	ldi	r21, 0x47	; 71
 cc8:	0e 94 3d 07 	call	0xe7a	; 0xe7a <__gesf2>
 ccc:	18 16       	cp	r1, r24
 cce:	0c f0       	brlt	.+2      	; 0xcd2 <stepperb+0x4b2>
 cd0:	10 e0       	ldi	r17, 0x00	; 0
 cd2:	11 23       	and	r17, r17
 cd4:	61 f1       	breq	.+88     	; 0xd2e <stepperb+0x50e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 cd6:	6c a5       	lds	r22, 0x6c
 cd8:	7d a5       	lds	r23, 0x6d
 cda:	8e a5       	lds	r24, 0x6e
 cdc:	9f a5       	lds	r25, 0x6f
 cde:	20 e0       	ldi	r18, 0x00	; 0
 ce0:	30 e0       	ldi	r19, 0x00	; 0
 ce2:	40 e2       	ldi	r20, 0x20	; 32
 ce4:	51 e4       	ldi	r21, 0x41	; 65
 ce6:	0e 94 41 07 	call	0xe82	; 0xe82 <__mulsf3>
 cea:	dc 01       	movw	r26, r24
 cec:	cb 01       	movw	r24, r22
 cee:	bc 01       	movw	r22, r24
 cf0:	cd 01       	movw	r24, r26
 cf2:	0e 94 c4 06 	call	0xd88	; 0xd88 <__fixunssfsi>
 cf6:	dc 01       	movw	r26, r24
 cf8:	cb 01       	movw	r24, r22
 cfa:	9d ab       	sts	0x5d, r25
 cfc:	8c ab       	sts	0x5c, r24
 cfe:	12 c0       	rjmp	.+36     	; 0xd24 <stepperb+0x504>
 d00:	89 e1       	ldi	r24, 0x19	; 25
 d02:	90 e0       	ldi	r25, 0x00	; 0
 d04:	9f ab       	sts	0x5f, r25
 d06:	8e ab       	sts	0x5e, r24
 d08:	8e a9       	sts	0x4e, r24
 d0a:	9f a9       	sts	0x4f, r25
 d0c:	8c 01       	movw	r16, r24
 d0e:	c8 01       	movw	r24, r16
 d10:	01 97       	sbiw	r24, 0x01	; 1
 d12:	f1 f7       	brne	.-4      	; 0xd10 <stepperb+0x4f0>
 d14:	8c 01       	movw	r16, r24
 d16:	1f ab       	sts	0x5f, r17
 d18:	0e ab       	sts	0x5e, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 d1a:	8c a9       	sts	0x4c, r24
 d1c:	9d a9       	sts	0x4d, r25
 d1e:	01 97       	sbiw	r24, 0x01	; 1
 d20:	9d ab       	sts	0x5d, r25
 d22:	8c ab       	sts	0x5c, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 d24:	8c a9       	sts	0x4c, r24
 d26:	9d a9       	sts	0x4d, r25
 d28:	00 97       	sbiw	r24, 0x00	; 0
 d2a:	51 f7       	brne	.-44     	; 0xd00 <stepperb+0x4e0>
 d2c:	17 c0       	rjmp	.+46     	; 0xd5c <stepperb+0x53c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 d2e:	68 a9       	sts	0x48, r22
 d30:	79 a9       	sts	0x49, r23
 d32:	8a a9       	sts	0x4a, r24
 d34:	9b a9       	sts	0x4b, r25
 d36:	0e 94 c4 06 	call	0xd88	; 0xd88 <__fixunssfsi>
 d3a:	dc 01       	movw	r26, r24
 d3c:	cb 01       	movw	r24, r22
 d3e:	9d ab       	sts	0x5d, r25
 d40:	8c ab       	sts	0x5c, r24
 d42:	8c a9       	sts	0x4c, r24
 d44:	9d a9       	sts	0x4d, r25
 d46:	99 af       	sts	0x79, r25
 d48:	88 af       	sts	0x78, r24
 d4a:	88 ad       	sts	0x68, r24
 d4c:	99 ad       	sts	0x69, r25
 d4e:	8c 01       	movw	r16, r24
 d50:	f8 01       	movw	r30, r16
 d52:	31 97       	sbiw	r30, 0x01	; 1
 d54:	f1 f7       	brne	.-4      	; 0xd52 <stepperb+0x532>
 d56:	8f 01       	movw	r16, r30
 d58:	19 af       	sts	0x79, r17
 d5a:	08 af       	sts	0x78, r16
	}
}
void stepperb(void)
	   {
		unsigned char i;
		for(i=0;i<20;i++)
 d5c:	89 81       	ldd	r24, Y+1	; 0x01
 d5e:	8f 5f       	subi	r24, 0xFF	; 255
 d60:	89 83       	std	Y+1, r24	; 0x01
 d62:	89 81       	ldd	r24, Y+1	; 0x01
 d64:	84 31       	cpi	r24, 0x14	; 20
 d66:	08 f4       	brcc	.+2      	; 0xd6a <stepperb+0x54a>
 d68:	69 cd       	rjmp	.-1326   	; 0x83c <stepperb+0x1c>
        PORTD &= ~(1<<PD1);
		PORTD &= ~(1<<PD2);
        PORTD &= ~(1<<PD3);
		_delay_ms(20);
	}
 d6a:	e9 96       	adiw	r28, 0x39	; 57
 d6c:	0f b6       	in	r0, 0x3f	; 63
 d6e:	f8 94       	cli
 d70:	de bf       	out	0x3e, r29	; 62
 d72:	0f be       	out	0x3f, r0	; 63
 d74:	cd bf       	out	0x3d, r28	; 61
 d76:	df 91       	pop	r29
 d78:	cf 91       	pop	r28
 d7a:	1f 91       	pop	r17
 d7c:	0f 91       	pop	r16
 d7e:	08 95       	ret

00000d80 <__cmpsf2>:
 d80:	2f d0       	rcall	.+94     	; 0xde0 <__fp_cmp>
 d82:	08 f4       	brcc	.+2      	; 0xd86 <__cmpsf2+0x6>
 d84:	81 e0       	ldi	r24, 0x01	; 1
 d86:	08 95       	ret

00000d88 <__fixunssfsi>:
 d88:	57 d0       	rcall	.+174    	; 0xe38 <__fp_splitA>
 d8a:	88 f0       	brcs	.+34     	; 0xdae <__fixunssfsi+0x26>
 d8c:	9f 57       	subi	r25, 0x7F	; 127
 d8e:	90 f0       	brcs	.+36     	; 0xdb4 <__fixunssfsi+0x2c>
 d90:	b9 2f       	mov	r27, r25
 d92:	99 27       	eor	r25, r25
 d94:	b7 51       	subi	r27, 0x17	; 23
 d96:	a0 f0       	brcs	.+40     	; 0xdc0 <__fixunssfsi+0x38>
 d98:	d1 f0       	breq	.+52     	; 0xdce <__fixunssfsi+0x46>
 d9a:	66 0f       	add	r22, r22
 d9c:	77 1f       	adc	r23, r23
 d9e:	88 1f       	adc	r24, r24
 da0:	99 1f       	adc	r25, r25
 da2:	1a f0       	brmi	.+6      	; 0xdaa <__fixunssfsi+0x22>
 da4:	ba 95       	dec	r27
 da6:	c9 f7       	brne	.-14     	; 0xd9a <__fixunssfsi+0x12>
 da8:	12 c0       	rjmp	.+36     	; 0xdce <__fixunssfsi+0x46>
 daa:	b1 30       	cpi	r27, 0x01	; 1
 dac:	81 f0       	breq	.+32     	; 0xdce <__fixunssfsi+0x46>
 dae:	5e d0       	rcall	.+188    	; 0xe6c <__fp_zero>
 db0:	b1 e0       	ldi	r27, 0x01	; 1
 db2:	08 95       	ret
 db4:	5b c0       	rjmp	.+182    	; 0xe6c <__fp_zero>
 db6:	67 2f       	mov	r22, r23
 db8:	78 2f       	mov	r23, r24
 dba:	88 27       	eor	r24, r24
 dbc:	b8 5f       	subi	r27, 0xF8	; 248
 dbe:	39 f0       	breq	.+14     	; 0xdce <__fixunssfsi+0x46>
 dc0:	b9 3f       	cpi	r27, 0xF9	; 249
 dc2:	cc f3       	brlt	.-14     	; 0xdb6 <__fixunssfsi+0x2e>
 dc4:	86 95       	lsr	r24
 dc6:	77 95       	ror	r23
 dc8:	67 95       	ror	r22
 dca:	b3 95       	inc	r27
 dcc:	d9 f7       	brne	.-10     	; 0xdc4 <__fixunssfsi+0x3c>
 dce:	3e f4       	brtc	.+14     	; 0xdde <__fixunssfsi+0x56>
 dd0:	90 95       	com	r25
 dd2:	80 95       	com	r24
 dd4:	70 95       	com	r23
 dd6:	61 95       	neg	r22
 dd8:	7f 4f       	sbci	r23, 0xFF	; 255
 dda:	8f 4f       	sbci	r24, 0xFF	; 255
 ddc:	9f 4f       	sbci	r25, 0xFF	; 255
 dde:	08 95       	ret

00000de0 <__fp_cmp>:
 de0:	99 0f       	add	r25, r25
 de2:	00 08       	sbc	r0, r0
 de4:	55 0f       	add	r21, r21
 de6:	aa 0b       	sbc	r26, r26
 de8:	e0 e8       	ldi	r30, 0x80	; 128
 dea:	fe ef       	ldi	r31, 0xFE	; 254
 dec:	16 16       	cp	r1, r22
 dee:	17 06       	cpc	r1, r23
 df0:	e8 07       	cpc	r30, r24
 df2:	f9 07       	cpc	r31, r25
 df4:	c0 f0       	brcs	.+48     	; 0xe26 <__fp_cmp+0x46>
 df6:	12 16       	cp	r1, r18
 df8:	13 06       	cpc	r1, r19
 dfa:	e4 07       	cpc	r30, r20
 dfc:	f5 07       	cpc	r31, r21
 dfe:	98 f0       	brcs	.+38     	; 0xe26 <__fp_cmp+0x46>
 e00:	62 1b       	sub	r22, r18
 e02:	73 0b       	sbc	r23, r19
 e04:	84 0b       	sbc	r24, r20
 e06:	95 0b       	sbc	r25, r21
 e08:	39 f4       	brne	.+14     	; 0xe18 <__fp_cmp+0x38>
 e0a:	0a 26       	eor	r0, r26
 e0c:	61 f0       	breq	.+24     	; 0xe26 <__fp_cmp+0x46>
 e0e:	23 2b       	or	r18, r19
 e10:	24 2b       	or	r18, r20
 e12:	25 2b       	or	r18, r21
 e14:	21 f4       	brne	.+8      	; 0xe1e <__fp_cmp+0x3e>
 e16:	08 95       	ret
 e18:	0a 26       	eor	r0, r26
 e1a:	09 f4       	brne	.+2      	; 0xe1e <__fp_cmp+0x3e>
 e1c:	a1 40       	sbci	r26, 0x01	; 1
 e1e:	a6 95       	lsr	r26
 e20:	8f ef       	ldi	r24, 0xFF	; 255
 e22:	81 1d       	adc	r24, r1
 e24:	81 1d       	adc	r24, r1
 e26:	08 95       	ret

00000e28 <__fp_split3>:
 e28:	57 fd       	sbrc	r21, 7
 e2a:	90 58       	subi	r25, 0x80	; 128
 e2c:	44 0f       	add	r20, r20
 e2e:	55 1f       	adc	r21, r21
 e30:	59 f0       	breq	.+22     	; 0xe48 <__fp_splitA+0x10>
 e32:	5f 3f       	cpi	r21, 0xFF	; 255
 e34:	71 f0       	breq	.+28     	; 0xe52 <__fp_splitA+0x1a>
 e36:	47 95       	ror	r20

00000e38 <__fp_splitA>:
 e38:	88 0f       	add	r24, r24
 e3a:	97 fb       	bst	r25, 7
 e3c:	99 1f       	adc	r25, r25
 e3e:	61 f0       	breq	.+24     	; 0xe58 <__fp_splitA+0x20>
 e40:	9f 3f       	cpi	r25, 0xFF	; 255
 e42:	79 f0       	breq	.+30     	; 0xe62 <__fp_splitA+0x2a>
 e44:	87 95       	ror	r24
 e46:	08 95       	ret
 e48:	12 16       	cp	r1, r18
 e4a:	13 06       	cpc	r1, r19
 e4c:	14 06       	cpc	r1, r20
 e4e:	55 1f       	adc	r21, r21
 e50:	f2 cf       	rjmp	.-28     	; 0xe36 <__fp_split3+0xe>
 e52:	46 95       	lsr	r20
 e54:	f1 df       	rcall	.-30     	; 0xe38 <__fp_splitA>
 e56:	08 c0       	rjmp	.+16     	; 0xe68 <__fp_splitA+0x30>
 e58:	16 16       	cp	r1, r22
 e5a:	17 06       	cpc	r1, r23
 e5c:	18 06       	cpc	r1, r24
 e5e:	99 1f       	adc	r25, r25
 e60:	f1 cf       	rjmp	.-30     	; 0xe44 <__fp_splitA+0xc>
 e62:	86 95       	lsr	r24
 e64:	71 05       	cpc	r23, r1
 e66:	61 05       	cpc	r22, r1
 e68:	08 94       	sec
 e6a:	08 95       	ret

00000e6c <__fp_zero>:
 e6c:	e8 94       	clt

00000e6e <__fp_szero>:
 e6e:	bb 27       	eor	r27, r27
 e70:	66 27       	eor	r22, r22
 e72:	77 27       	eor	r23, r23
 e74:	cb 01       	movw	r24, r22
 e76:	97 f9       	bld	r25, 7
 e78:	08 95       	ret

00000e7a <__gesf2>:
 e7a:	b2 df       	rcall	.-156    	; 0xde0 <__fp_cmp>
 e7c:	08 f4       	brcc	.+2      	; 0xe80 <__gesf2+0x6>
 e7e:	8f ef       	ldi	r24, 0xFF	; 255
 e80:	08 95       	ret

00000e82 <__mulsf3>:
 e82:	0b d0       	rcall	.+22     	; 0xe9a <__mulsf3x>
 e84:	78 c0       	rjmp	.+240    	; 0xf76 <__fp_round>
 e86:	69 d0       	rcall	.+210    	; 0xf5a <__fp_pscA>
 e88:	28 f0       	brcs	.+10     	; 0xe94 <__mulsf3+0x12>
 e8a:	6e d0       	rcall	.+220    	; 0xf68 <__fp_pscB>
 e8c:	18 f0       	brcs	.+6      	; 0xe94 <__mulsf3+0x12>
 e8e:	95 23       	and	r25, r21
 e90:	09 f0       	breq	.+2      	; 0xe94 <__mulsf3+0x12>
 e92:	5a c0       	rjmp	.+180    	; 0xf48 <__fp_inf>
 e94:	5f c0       	rjmp	.+190    	; 0xf54 <__fp_nan>
 e96:	11 24       	eor	r1, r1
 e98:	ea cf       	rjmp	.-44     	; 0xe6e <__fp_szero>

00000e9a <__mulsf3x>:
 e9a:	c6 df       	rcall	.-116    	; 0xe28 <__fp_split3>
 e9c:	a0 f3       	brcs	.-24     	; 0xe86 <__mulsf3+0x4>

00000e9e <__mulsf3_pse>:
 e9e:	95 9f       	mul	r25, r21
 ea0:	d1 f3       	breq	.-12     	; 0xe96 <__mulsf3+0x14>
 ea2:	95 0f       	add	r25, r21
 ea4:	50 e0       	ldi	r21, 0x00	; 0
 ea6:	55 1f       	adc	r21, r21
 ea8:	62 9f       	mul	r22, r18
 eaa:	f0 01       	movw	r30, r0
 eac:	72 9f       	mul	r23, r18
 eae:	bb 27       	eor	r27, r27
 eb0:	f0 0d       	add	r31, r0
 eb2:	b1 1d       	adc	r27, r1
 eb4:	63 9f       	mul	r22, r19
 eb6:	aa 27       	eor	r26, r26
 eb8:	f0 0d       	add	r31, r0
 eba:	b1 1d       	adc	r27, r1
 ebc:	aa 1f       	adc	r26, r26
 ebe:	64 9f       	mul	r22, r20
 ec0:	66 27       	eor	r22, r22
 ec2:	b0 0d       	add	r27, r0
 ec4:	a1 1d       	adc	r26, r1
 ec6:	66 1f       	adc	r22, r22
 ec8:	82 9f       	mul	r24, r18
 eca:	22 27       	eor	r18, r18
 ecc:	b0 0d       	add	r27, r0
 ece:	a1 1d       	adc	r26, r1
 ed0:	62 1f       	adc	r22, r18
 ed2:	73 9f       	mul	r23, r19
 ed4:	b0 0d       	add	r27, r0
 ed6:	a1 1d       	adc	r26, r1
 ed8:	62 1f       	adc	r22, r18
 eda:	83 9f       	mul	r24, r19
 edc:	a0 0d       	add	r26, r0
 ede:	61 1d       	adc	r22, r1
 ee0:	22 1f       	adc	r18, r18
 ee2:	74 9f       	mul	r23, r20
 ee4:	33 27       	eor	r19, r19
 ee6:	a0 0d       	add	r26, r0
 ee8:	61 1d       	adc	r22, r1
 eea:	23 1f       	adc	r18, r19
 eec:	84 9f       	mul	r24, r20
 eee:	60 0d       	add	r22, r0
 ef0:	21 1d       	adc	r18, r1
 ef2:	82 2f       	mov	r24, r18
 ef4:	76 2f       	mov	r23, r22
 ef6:	6a 2f       	mov	r22, r26
 ef8:	11 24       	eor	r1, r1
 efa:	9f 57       	subi	r25, 0x7F	; 127
 efc:	50 40       	sbci	r21, 0x00	; 0
 efe:	8a f0       	brmi	.+34     	; 0xf22 <__mulsf3_pse+0x84>
 f00:	e1 f0       	breq	.+56     	; 0xf3a <__mulsf3_pse+0x9c>
 f02:	88 23       	and	r24, r24
 f04:	4a f0       	brmi	.+18     	; 0xf18 <__mulsf3_pse+0x7a>
 f06:	ee 0f       	add	r30, r30
 f08:	ff 1f       	adc	r31, r31
 f0a:	bb 1f       	adc	r27, r27
 f0c:	66 1f       	adc	r22, r22
 f0e:	77 1f       	adc	r23, r23
 f10:	88 1f       	adc	r24, r24
 f12:	91 50       	subi	r25, 0x01	; 1
 f14:	50 40       	sbci	r21, 0x00	; 0
 f16:	a9 f7       	brne	.-22     	; 0xf02 <__mulsf3_pse+0x64>
 f18:	9e 3f       	cpi	r25, 0xFE	; 254
 f1a:	51 05       	cpc	r21, r1
 f1c:	70 f0       	brcs	.+28     	; 0xf3a <__mulsf3_pse+0x9c>
 f1e:	14 c0       	rjmp	.+40     	; 0xf48 <__fp_inf>
 f20:	a6 cf       	rjmp	.-180    	; 0xe6e <__fp_szero>
 f22:	5f 3f       	cpi	r21, 0xFF	; 255
 f24:	ec f3       	brlt	.-6      	; 0xf20 <__mulsf3_pse+0x82>
 f26:	98 3e       	cpi	r25, 0xE8	; 232
 f28:	dc f3       	brlt	.-10     	; 0xf20 <__mulsf3_pse+0x82>
 f2a:	86 95       	lsr	r24
 f2c:	77 95       	ror	r23
 f2e:	67 95       	ror	r22
 f30:	b7 95       	ror	r27
 f32:	f7 95       	ror	r31
 f34:	e7 95       	ror	r30
 f36:	9f 5f       	subi	r25, 0xFF	; 255
 f38:	c1 f7       	brne	.-16     	; 0xf2a <__mulsf3_pse+0x8c>
 f3a:	fe 2b       	or	r31, r30
 f3c:	88 0f       	add	r24, r24
 f3e:	91 1d       	adc	r25, r1
 f40:	96 95       	lsr	r25
 f42:	87 95       	ror	r24
 f44:	97 f9       	bld	r25, 7
 f46:	08 95       	ret

00000f48 <__fp_inf>:
 f48:	97 f9       	bld	r25, 7
 f4a:	9f 67       	ori	r25, 0x7F	; 127
 f4c:	80 e8       	ldi	r24, 0x80	; 128
 f4e:	70 e0       	ldi	r23, 0x00	; 0
 f50:	60 e0       	ldi	r22, 0x00	; 0
 f52:	08 95       	ret

00000f54 <__fp_nan>:
 f54:	9f ef       	ldi	r25, 0xFF	; 255
 f56:	80 ec       	ldi	r24, 0xC0	; 192
 f58:	08 95       	ret

00000f5a <__fp_pscA>:
 f5a:	00 24       	eor	r0, r0
 f5c:	0a 94       	dec	r0
 f5e:	16 16       	cp	r1, r22
 f60:	17 06       	cpc	r1, r23
 f62:	18 06       	cpc	r1, r24
 f64:	09 06       	cpc	r0, r25
 f66:	08 95       	ret

00000f68 <__fp_pscB>:
 f68:	00 24       	eor	r0, r0
 f6a:	0a 94       	dec	r0
 f6c:	12 16       	cp	r1, r18
 f6e:	13 06       	cpc	r1, r19
 f70:	14 06       	cpc	r1, r20
 f72:	05 06       	cpc	r0, r21
 f74:	08 95       	ret

00000f76 <__fp_round>:
 f76:	09 2e       	mov	r0, r25
 f78:	03 94       	inc	r0
 f7a:	00 0c       	add	r0, r0
 f7c:	11 f4       	brne	.+4      	; 0xf82 <__fp_round+0xc>
 f7e:	88 23       	and	r24, r24
 f80:	52 f0       	brmi	.+20     	; 0xf96 <__fp_round+0x20>
 f82:	bb 0f       	add	r27, r27
 f84:	40 f4       	brcc	.+16     	; 0xf96 <__fp_round+0x20>
 f86:	bf 2b       	or	r27, r31
 f88:	11 f4       	brne	.+4      	; 0xf8e <__fp_round+0x18>
 f8a:	60 ff       	sbrs	r22, 0
 f8c:	04 c0       	rjmp	.+8      	; 0xf96 <__fp_round+0x20>
 f8e:	6f 5f       	subi	r22, 0xFF	; 255
 f90:	7f 4f       	sbci	r23, 0xFF	; 255
 f92:	8f 4f       	sbci	r24, 0xFF	; 255
 f94:	9f 4f       	sbci	r25, 0xFF	; 255
 f96:	08 95       	ret

00000f98 <_exit>:
 f98:	f8 94       	cli

00000f9a <__stop_program>:
 f9a:	ff cf       	rjmp	.-2      	; 0xf9a <__stop_program>
