
keypad.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002954  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000062  00800060  00002954  000029c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000016bc  00000000  00000000  00002a2c  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000685  00000000  00000000  000040e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000020  00000000  00000000  0000476d  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000058  00000000  00000000  0000478d  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c10  00000000  00000000  000047e5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000169  00000000  00000000  000053f5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e55  00000000  00000000  0000555e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000070  00000000  00000000  000063b4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000000e3  00000000  00000000  00006424  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_pubtypes 0000002b  00000000  00000000  00006507  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  00006532  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d4 e0       	ldi	r29, 0x04	; 4
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e4 e5       	ldi	r30, 0x54	; 84
      68:	f9 e2       	ldi	r31, 0x29	; 41
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	a2 3c       	cpi	r26, 0xC2	; 194
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
      76:	0e 94 b5 04 	call	0x96a	; 0x96a <main>
      7a:	0c 94 a8 14 	jmp	0x2950	; 0x2950 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <keysense>:
void writedata(unsigned char);
void writestr(unsigned char *s);
unsigned char keysense(void);

unsigned char keysense(void)
{ 
      82:	0f 93       	push	r16
      84:	1f 93       	push	r17
      86:	df 93       	push	r29
      88:	cf 93       	push	r28
      8a:	cd b7       	in	r28, 0x3d	; 61
      8c:	de b7       	in	r29, 0x3e	; 62
      8e:	aa 97       	sbiw	r28, 0x2a	; 42
      90:	0f b6       	in	r0, 0x3f	; 63
      92:	f8 94       	cli
      94:	de bf       	out	0x3e, r29	; 62
      96:	0f be       	out	0x3f, r0	; 63
      98:	cd bf       	out	0x3d, r28	; 61
	while(1)
	{
		PORTA&=~(1<<col1);
      9a:	8b e3       	ldi	r24, 0x3B	; 59
      9c:	90 e0       	ldi	r25, 0x00	; 0
      9e:	2b e3       	ldi	r18, 0x3B	; 59
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	f9 01       	movw	r30, r18
      a4:	20 81       	ld	r18, Z
      a6:	2f 7e       	andi	r18, 0xEF	; 239
      a8:	fc 01       	movw	r30, r24
      aa:	20 83       	st	Z, r18
		//PORTA=0b11101111;
		PORTA|=(1<<col2)|(1<<col3);
      ac:	8b e3       	ldi	r24, 0x3B	; 59
      ae:	90 e0       	ldi	r25, 0x00	; 0
      b0:	2b e3       	ldi	r18, 0x3B	; 59
      b2:	30 e0       	ldi	r19, 0x00	; 0
      b4:	f9 01       	movw	r30, r18
      b6:	20 81       	ld	r18, Z
      b8:	20 66       	ori	r18, 0x60	; 96
      ba:	fc 01       	movw	r30, r24
      bc:	20 83       	st	Z, r18
		if(bit_is_clear(PINA,row1))	
      be:	89 e3       	ldi	r24, 0x39	; 57
      c0:	90 e0       	ldi	r25, 0x00	; 0
      c2:	fc 01       	movw	r30, r24
      c4:	80 81       	ld	r24, Z
      c6:	88 2f       	mov	r24, r24
      c8:	90 e0       	ldi	r25, 0x00	; 0
      ca:	81 70       	andi	r24, 0x01	; 1
      cc:	90 70       	andi	r25, 0x00	; 0
      ce:	00 97       	sbiw	r24, 0x00	; 0
      d0:	11 f4       	brne	.+4      	; 0xd6 <keysense+0x54>
			//writestr("KEY 1");
			return(1);
      d2:	81 e0       	ldi	r24, 0x01	; 1
      d4:	29 c2       	rjmp	.+1106   	; 0x528 <__stack+0xc9>
		else if(bit_is_clear(PINA,row2))
      d6:	89 e3       	ldi	r24, 0x39	; 57
      d8:	90 e0       	ldi	r25, 0x00	; 0
      da:	fc 01       	movw	r30, r24
      dc:	80 81       	ld	r24, Z
      de:	88 2f       	mov	r24, r24
      e0:	90 e0       	ldi	r25, 0x00	; 0
      e2:	82 70       	andi	r24, 0x02	; 2
      e4:	90 70       	andi	r25, 0x00	; 0
      e6:	00 97       	sbiw	r24, 0x00	; 0
      e8:	11 f4       	brne	.+4      	; 0xee <keysense+0x6c>
			//writestr("KEY 4");
			return(4);
      ea:	84 e0       	ldi	r24, 0x04	; 4
      ec:	1d c2       	rjmp	.+1082   	; 0x528 <__stack+0xc9>
		else if(bit_is_clear(PINA,row3))
      ee:	89 e3       	ldi	r24, 0x39	; 57
      f0:	90 e0       	ldi	r25, 0x00	; 0
      f2:	fc 01       	movw	r30, r24
      f4:	80 81       	ld	r24, Z
      f6:	88 2f       	mov	r24, r24
      f8:	90 e0       	ldi	r25, 0x00	; 0
      fa:	84 70       	andi	r24, 0x04	; 4
      fc:	90 70       	andi	r25, 0x00	; 0
      fe:	00 97       	sbiw	r24, 0x00	; 0
     100:	11 f4       	brne	.+4      	; 0x106 <keysense+0x84>
			//writestr("KEY 7");
			return(7);
     102:	87 e0       	ldi	r24, 0x07	; 7
     104:	11 c2       	rjmp	.+1058   	; 0x528 <__stack+0xc9>
		else if(bit_is_clear(PINA,row4))
     106:	89 e3       	ldi	r24, 0x39	; 57
     108:	90 e0       	ldi	r25, 0x00	; 0
     10a:	fc 01       	movw	r30, r24
     10c:	80 81       	ld	r24, Z
     10e:	88 2f       	mov	r24, r24
     110:	90 e0       	ldi	r25, 0x00	; 0
     112:	88 70       	andi	r24, 0x08	; 8
     114:	90 70       	andi	r25, 0x00	; 0
     116:	00 97       	sbiw	r24, 0x00	; 0
     118:	11 f4       	brne	.+4      	; 0x11e <keysense+0x9c>
			//writestr("KEY *");
			return('*');
     11a:	8a e2       	ldi	r24, 0x2A	; 42
     11c:	05 c2       	rjmp	.+1034   	; 0x528 <__stack+0xc9>
     11e:	80 e0       	ldi	r24, 0x00	; 0
     120:	90 e0       	ldi	r25, 0x00	; 0
     122:	a8 e4       	ldi	r26, 0x48	; 72
     124:	b2 e4       	ldi	r27, 0x42	; 66
     126:	89 83       	std	Y+1, r24	; 0x01
     128:	9a 83       	std	Y+2, r25	; 0x02
     12a:	ab 83       	std	Y+3, r26	; 0x03
     12c:	bc 83       	std	Y+4, r27	; 0x04
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     12e:	69 81       	ldd	r22, Y+1	; 0x01
     130:	7a 81       	ldd	r23, Y+2	; 0x02
     132:	8b 81       	ldd	r24, Y+3	; 0x03
     134:	9c 81       	ldd	r25, Y+4	; 0x04
     136:	20 e0       	ldi	r18, 0x00	; 0
     138:	30 e0       	ldi	r19, 0x00	; 0
     13a:	4a e7       	ldi	r20, 0x7A	; 122
     13c:	53 e4       	ldi	r21, 0x43	; 67
     13e:	0e 94 14 14 	call	0x2828	; 0x2828 <__mulsf3>
     142:	dc 01       	movw	r26, r24
     144:	cb 01       	movw	r24, r22
     146:	8d 83       	std	Y+5, r24	; 0x05
     148:	9e 83       	std	Y+6, r25	; 0x06
     14a:	af 83       	std	Y+7, r26	; 0x07
     14c:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     14e:	11 e0       	ldi	r17, 0x01	; 1
     150:	6d 81       	ldd	r22, Y+5	; 0x05
     152:	7e 81       	ldd	r23, Y+6	; 0x06
     154:	8f 81       	ldd	r24, Y+7	; 0x07
     156:	98 85       	ldd	r25, Y+8	; 0x08
     158:	20 e0       	ldi	r18, 0x00	; 0
     15a:	30 e0       	ldi	r19, 0x00	; 0
     15c:	40 e8       	ldi	r20, 0x80	; 128
     15e:	5f e3       	ldi	r21, 0x3F	; 63
     160:	0e 94 93 13 	call	0x2726	; 0x2726 <__cmpsf2>
     164:	88 23       	and	r24, r24
     166:	0c f0       	brlt	.+2      	; 0x16a <keysense+0xe8>
     168:	10 e0       	ldi	r17, 0x00	; 0
     16a:	11 23       	and	r17, r17
     16c:	29 f0       	breq	.+10     	; 0x178 <keysense+0xf6>
		__ticks = 1;
     16e:	81 e0       	ldi	r24, 0x01	; 1
     170:	90 e0       	ldi	r25, 0x00	; 0
     172:	9a 87       	std	Y+10, r25	; 0x0a
     174:	89 87       	std	Y+9, r24	; 0x09
     176:	46 c0       	rjmp	.+140    	; 0x204 <keysense+0x182>
	else if (__tmp > 65535)
     178:	11 e0       	ldi	r17, 0x01	; 1
     17a:	6d 81       	ldd	r22, Y+5	; 0x05
     17c:	7e 81       	ldd	r23, Y+6	; 0x06
     17e:	8f 81       	ldd	r24, Y+7	; 0x07
     180:	98 85       	ldd	r25, Y+8	; 0x08
     182:	20 e0       	ldi	r18, 0x00	; 0
     184:	3f ef       	ldi	r19, 0xFF	; 255
     186:	4f e7       	ldi	r20, 0x7F	; 127
     188:	57 e4       	ldi	r21, 0x47	; 71
     18a:	0e 94 10 14 	call	0x2820	; 0x2820 <__gesf2>
     18e:	18 16       	cp	r1, r24
     190:	0c f0       	brlt	.+2      	; 0x194 <keysense+0x112>
     192:	10 e0       	ldi	r17, 0x00	; 0
     194:	11 23       	and	r17, r17
     196:	61 f1       	breq	.+88     	; 0x1f0 <keysense+0x16e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     198:	69 81       	ldd	r22, Y+1	; 0x01
     19a:	7a 81       	ldd	r23, Y+2	; 0x02
     19c:	8b 81       	ldd	r24, Y+3	; 0x03
     19e:	9c 81       	ldd	r25, Y+4	; 0x04
     1a0:	20 e0       	ldi	r18, 0x00	; 0
     1a2:	30 e0       	ldi	r19, 0x00	; 0
     1a4:	40 e2       	ldi	r20, 0x20	; 32
     1a6:	51 e4       	ldi	r21, 0x41	; 65
     1a8:	0e 94 14 14 	call	0x2828	; 0x2828 <__mulsf3>
     1ac:	dc 01       	movw	r26, r24
     1ae:	cb 01       	movw	r24, r22
     1b0:	bc 01       	movw	r22, r24
     1b2:	cd 01       	movw	r24, r26
     1b4:	0e 94 97 13 	call	0x272e	; 0x272e <__fixunssfsi>
     1b8:	dc 01       	movw	r26, r24
     1ba:	cb 01       	movw	r24, r22
     1bc:	9a 87       	std	Y+10, r25	; 0x0a
     1be:	89 87       	std	Y+9, r24	; 0x09
     1c0:	12 c0       	rjmp	.+36     	; 0x1e6 <keysense+0x164>
     1c2:	89 e1       	ldi	r24, 0x19	; 25
     1c4:	90 e0       	ldi	r25, 0x00	; 0
     1c6:	9c 87       	std	Y+12, r25	; 0x0c
     1c8:	8b 87       	std	Y+11, r24	; 0x0b
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     1ca:	8b 85       	ldd	r24, Y+11	; 0x0b
     1cc:	9c 85       	ldd	r25, Y+12	; 0x0c
     1ce:	8c 01       	movw	r16, r24
     1d0:	c8 01       	movw	r24, r16
     1d2:	01 97       	sbiw	r24, 0x01	; 1
     1d4:	f1 f7       	brne	.-4      	; 0x1d2 <keysense+0x150>
     1d6:	8c 01       	movw	r16, r24
     1d8:	1c 87       	std	Y+12, r17	; 0x0c
     1da:	0b 87       	std	Y+11, r16	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     1dc:	89 85       	ldd	r24, Y+9	; 0x09
     1de:	9a 85       	ldd	r25, Y+10	; 0x0a
     1e0:	01 97       	sbiw	r24, 0x01	; 1
     1e2:	9a 87       	std	Y+10, r25	; 0x0a
     1e4:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     1e6:	89 85       	ldd	r24, Y+9	; 0x09
     1e8:	9a 85       	ldd	r25, Y+10	; 0x0a
     1ea:	00 97       	sbiw	r24, 0x00	; 0
     1ec:	51 f7       	brne	.-44     	; 0x1c2 <keysense+0x140>
     1ee:	17 c0       	rjmp	.+46     	; 0x21e <keysense+0x19c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     1f0:	6d 81       	ldd	r22, Y+5	; 0x05
     1f2:	7e 81       	ldd	r23, Y+6	; 0x06
     1f4:	8f 81       	ldd	r24, Y+7	; 0x07
     1f6:	98 85       	ldd	r25, Y+8	; 0x08
     1f8:	0e 94 97 13 	call	0x272e	; 0x272e <__fixunssfsi>
     1fc:	dc 01       	movw	r26, r24
     1fe:	cb 01       	movw	r24, r22
     200:	9a 87       	std	Y+10, r25	; 0x0a
     202:	89 87       	std	Y+9, r24	; 0x09
     204:	89 85       	ldd	r24, Y+9	; 0x09
     206:	9a 85       	ldd	r25, Y+10	; 0x0a
     208:	9e 87       	std	Y+14, r25	; 0x0e
     20a:	8d 87       	std	Y+13, r24	; 0x0d
     20c:	8d 85       	ldd	r24, Y+13	; 0x0d
     20e:	9e 85       	ldd	r25, Y+14	; 0x0e
     210:	8c 01       	movw	r16, r24
     212:	f8 01       	movw	r30, r16
     214:	31 97       	sbiw	r30, 0x01	; 1
     216:	f1 f7       	brne	.-4      	; 0x214 <keysense+0x192>
     218:	8f 01       	movw	r16, r30
     21a:	1e 87       	std	Y+14, r17	; 0x0e
     21c:	0d 87       	std	Y+13, r16	; 0x0d
			_delay_ms(50);
		PORTA&=~(1<<col2);
     21e:	8b e3       	ldi	r24, 0x3B	; 59
     220:	90 e0       	ldi	r25, 0x00	; 0
     222:	2b e3       	ldi	r18, 0x3B	; 59
     224:	30 e0       	ldi	r19, 0x00	; 0
     226:	f9 01       	movw	r30, r18
     228:	20 81       	ld	r18, Z
     22a:	2f 7d       	andi	r18, 0xDF	; 223
     22c:	fc 01       	movw	r30, r24
     22e:	20 83       	st	Z, r18
		PORTA|=(1<<col1)|(1<<col3);
     230:	8b e3       	ldi	r24, 0x3B	; 59
     232:	90 e0       	ldi	r25, 0x00	; 0
     234:	2b e3       	ldi	r18, 0x3B	; 59
     236:	30 e0       	ldi	r19, 0x00	; 0
     238:	f9 01       	movw	r30, r18
     23a:	20 81       	ld	r18, Z
     23c:	20 65       	ori	r18, 0x50	; 80
     23e:	fc 01       	movw	r30, r24
     240:	20 83       	st	Z, r18
		//PORTA=0b11011111;
		if(bit_is_clear(PINA,row1))
     242:	89 e3       	ldi	r24, 0x39	; 57
     244:	90 e0       	ldi	r25, 0x00	; 0
     246:	fc 01       	movw	r30, r24
     248:	80 81       	ld	r24, Z
     24a:	88 2f       	mov	r24, r24
     24c:	90 e0       	ldi	r25, 0x00	; 0
     24e:	81 70       	andi	r24, 0x01	; 1
     250:	90 70       	andi	r25, 0x00	; 0
     252:	00 97       	sbiw	r24, 0x00	; 0
     254:	11 f4       	brne	.+4      	; 0x25a <keysense+0x1d8>
			return(2);
     256:	82 e0       	ldi	r24, 0x02	; 2
     258:	67 c1       	rjmp	.+718    	; 0x528 <__stack+0xc9>
		else if(bit_is_clear(PINA,row2))
     25a:	89 e3       	ldi	r24, 0x39	; 57
     25c:	90 e0       	ldi	r25, 0x00	; 0
     25e:	fc 01       	movw	r30, r24
     260:	80 81       	ld	r24, Z
     262:	88 2f       	mov	r24, r24
     264:	90 e0       	ldi	r25, 0x00	; 0
     266:	82 70       	andi	r24, 0x02	; 2
     268:	90 70       	andi	r25, 0x00	; 0
     26a:	00 97       	sbiw	r24, 0x00	; 0
     26c:	11 f4       	brne	.+4      	; 0x272 <keysense+0x1f0>
			return(5);
     26e:	85 e0       	ldi	r24, 0x05	; 5
     270:	5b c1       	rjmp	.+694    	; 0x528 <__stack+0xc9>
		else if(bit_is_clear(PINA,row3))
     272:	89 e3       	ldi	r24, 0x39	; 57
     274:	90 e0       	ldi	r25, 0x00	; 0
     276:	fc 01       	movw	r30, r24
     278:	80 81       	ld	r24, Z
     27a:	88 2f       	mov	r24, r24
     27c:	90 e0       	ldi	r25, 0x00	; 0
     27e:	84 70       	andi	r24, 0x04	; 4
     280:	90 70       	andi	r25, 0x00	; 0
     282:	00 97       	sbiw	r24, 0x00	; 0
     284:	11 f4       	brne	.+4      	; 0x28a <keysense+0x208>
			return(8);
     286:	88 e0       	ldi	r24, 0x08	; 8
     288:	4f c1       	rjmp	.+670    	; 0x528 <__stack+0xc9>
		else if(bit_is_clear(PINA,row4))
     28a:	89 e3       	ldi	r24, 0x39	; 57
     28c:	90 e0       	ldi	r25, 0x00	; 0
     28e:	fc 01       	movw	r30, r24
     290:	80 81       	ld	r24, Z
     292:	88 2f       	mov	r24, r24
     294:	90 e0       	ldi	r25, 0x00	; 0
     296:	88 70       	andi	r24, 0x08	; 8
     298:	90 70       	andi	r25, 0x00	; 0
     29a:	00 97       	sbiw	r24, 0x00	; 0
     29c:	11 f4       	brne	.+4      	; 0x2a2 <keysense+0x220>
			return(0);		
     29e:	80 e0       	ldi	r24, 0x00	; 0
     2a0:	43 c1       	rjmp	.+646    	; 0x528 <__stack+0xc9>
     2a2:	80 e0       	ldi	r24, 0x00	; 0
     2a4:	90 e0       	ldi	r25, 0x00	; 0
     2a6:	a8 e4       	ldi	r26, 0x48	; 72
     2a8:	b2 e4       	ldi	r27, 0x42	; 66
     2aa:	8f 87       	std	Y+15, r24	; 0x0f
     2ac:	98 8b       	std	Y+16, r25	; 0x10
     2ae:	a9 8b       	std	Y+17, r26	; 0x11
     2b0:	ba 8b       	std	Y+18, r27	; 0x12
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     2b2:	6f 85       	ldd	r22, Y+15	; 0x0f
     2b4:	78 89       	ldd	r23, Y+16	; 0x10
     2b6:	89 89       	ldd	r24, Y+17	; 0x11
     2b8:	9a 89       	ldd	r25, Y+18	; 0x12
     2ba:	20 e0       	ldi	r18, 0x00	; 0
     2bc:	30 e0       	ldi	r19, 0x00	; 0
     2be:	4a e7       	ldi	r20, 0x7A	; 122
     2c0:	53 e4       	ldi	r21, 0x43	; 67
     2c2:	0e 94 14 14 	call	0x2828	; 0x2828 <__mulsf3>
     2c6:	dc 01       	movw	r26, r24
     2c8:	cb 01       	movw	r24, r22
     2ca:	8b 8b       	std	Y+19, r24	; 0x13
     2cc:	9c 8b       	std	Y+20, r25	; 0x14
     2ce:	ad 8b       	std	Y+21, r26	; 0x15
     2d0:	be 8b       	std	Y+22, r27	; 0x16
	if (__tmp < 1.0)
     2d2:	11 e0       	ldi	r17, 0x01	; 1
     2d4:	6b 89       	ldd	r22, Y+19	; 0x13
     2d6:	7c 89       	ldd	r23, Y+20	; 0x14
     2d8:	8d 89       	ldd	r24, Y+21	; 0x15
     2da:	9e 89       	ldd	r25, Y+22	; 0x16
     2dc:	20 e0       	ldi	r18, 0x00	; 0
     2de:	30 e0       	ldi	r19, 0x00	; 0
     2e0:	40 e8       	ldi	r20, 0x80	; 128
     2e2:	5f e3       	ldi	r21, 0x3F	; 63
     2e4:	0e 94 93 13 	call	0x2726	; 0x2726 <__cmpsf2>
     2e8:	88 23       	and	r24, r24
     2ea:	0c f0       	brlt	.+2      	; 0x2ee <keysense+0x26c>
     2ec:	10 e0       	ldi	r17, 0x00	; 0
     2ee:	11 23       	and	r17, r17
     2f0:	29 f0       	breq	.+10     	; 0x2fc <keysense+0x27a>
		__ticks = 1;
     2f2:	81 e0       	ldi	r24, 0x01	; 1
     2f4:	90 e0       	ldi	r25, 0x00	; 0
     2f6:	98 8f       	std	Y+24, r25	; 0x18
     2f8:	8f 8b       	std	Y+23, r24	; 0x17
     2fa:	46 c0       	rjmp	.+140    	; 0x388 <keysense+0x306>
	else if (__tmp > 65535)
     2fc:	11 e0       	ldi	r17, 0x01	; 1
     2fe:	6b 89       	ldd	r22, Y+19	; 0x13
     300:	7c 89       	ldd	r23, Y+20	; 0x14
     302:	8d 89       	ldd	r24, Y+21	; 0x15
     304:	9e 89       	ldd	r25, Y+22	; 0x16
     306:	20 e0       	ldi	r18, 0x00	; 0
     308:	3f ef       	ldi	r19, 0xFF	; 255
     30a:	4f e7       	ldi	r20, 0x7F	; 127
     30c:	57 e4       	ldi	r21, 0x47	; 71
     30e:	0e 94 10 14 	call	0x2820	; 0x2820 <__gesf2>
     312:	18 16       	cp	r1, r24
     314:	0c f0       	brlt	.+2      	; 0x318 <keysense+0x296>
     316:	10 e0       	ldi	r17, 0x00	; 0
     318:	11 23       	and	r17, r17
     31a:	61 f1       	breq	.+88     	; 0x374 <keysense+0x2f2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     31c:	6f 85       	ldd	r22, Y+15	; 0x0f
     31e:	78 89       	ldd	r23, Y+16	; 0x10
     320:	89 89       	ldd	r24, Y+17	; 0x11
     322:	9a 89       	ldd	r25, Y+18	; 0x12
     324:	20 e0       	ldi	r18, 0x00	; 0
     326:	30 e0       	ldi	r19, 0x00	; 0
     328:	40 e2       	ldi	r20, 0x20	; 32
     32a:	51 e4       	ldi	r21, 0x41	; 65
     32c:	0e 94 14 14 	call	0x2828	; 0x2828 <__mulsf3>
     330:	dc 01       	movw	r26, r24
     332:	cb 01       	movw	r24, r22
     334:	bc 01       	movw	r22, r24
     336:	cd 01       	movw	r24, r26
     338:	0e 94 97 13 	call	0x272e	; 0x272e <__fixunssfsi>
     33c:	dc 01       	movw	r26, r24
     33e:	cb 01       	movw	r24, r22
     340:	98 8f       	std	Y+24, r25	; 0x18
     342:	8f 8b       	std	Y+23, r24	; 0x17
     344:	12 c0       	rjmp	.+36     	; 0x36a <keysense+0x2e8>
     346:	89 e1       	ldi	r24, 0x19	; 25
     348:	90 e0       	ldi	r25, 0x00	; 0
     34a:	9a 8f       	std	Y+26, r25	; 0x1a
     34c:	89 8f       	std	Y+25, r24	; 0x19
     34e:	89 8d       	ldd	r24, Y+25	; 0x19
     350:	9a 8d       	ldd	r25, Y+26	; 0x1a
     352:	8c 01       	movw	r16, r24
     354:	c8 01       	movw	r24, r16
     356:	01 97       	sbiw	r24, 0x01	; 1
     358:	f1 f7       	brne	.-4      	; 0x356 <keysense+0x2d4>
     35a:	8c 01       	movw	r16, r24
     35c:	1a 8f       	std	Y+26, r17	; 0x1a
     35e:	09 8f       	std	Y+25, r16	; 0x19
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     360:	8f 89       	ldd	r24, Y+23	; 0x17
     362:	98 8d       	ldd	r25, Y+24	; 0x18
     364:	01 97       	sbiw	r24, 0x01	; 1
     366:	98 8f       	std	Y+24, r25	; 0x18
     368:	8f 8b       	std	Y+23, r24	; 0x17
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     36a:	8f 89       	ldd	r24, Y+23	; 0x17
     36c:	98 8d       	ldd	r25, Y+24	; 0x18
     36e:	00 97       	sbiw	r24, 0x00	; 0
     370:	51 f7       	brne	.-44     	; 0x346 <keysense+0x2c4>
     372:	17 c0       	rjmp	.+46     	; 0x3a2 <keysense+0x320>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     374:	6b 89       	ldd	r22, Y+19	; 0x13
     376:	7c 89       	ldd	r23, Y+20	; 0x14
     378:	8d 89       	ldd	r24, Y+21	; 0x15
     37a:	9e 89       	ldd	r25, Y+22	; 0x16
     37c:	0e 94 97 13 	call	0x272e	; 0x272e <__fixunssfsi>
     380:	dc 01       	movw	r26, r24
     382:	cb 01       	movw	r24, r22
     384:	98 8f       	std	Y+24, r25	; 0x18
     386:	8f 8b       	std	Y+23, r24	; 0x17
     388:	8f 89       	ldd	r24, Y+23	; 0x17
     38a:	98 8d       	ldd	r25, Y+24	; 0x18
     38c:	9c 8f       	std	Y+28, r25	; 0x1c
     38e:	8b 8f       	std	Y+27, r24	; 0x1b
     390:	8b 8d       	ldd	r24, Y+27	; 0x1b
     392:	9c 8d       	ldd	r25, Y+28	; 0x1c
     394:	8c 01       	movw	r16, r24
     396:	f8 01       	movw	r30, r16
     398:	31 97       	sbiw	r30, 0x01	; 1
     39a:	f1 f7       	brne	.-4      	; 0x398 <keysense+0x316>
     39c:	8f 01       	movw	r16, r30
     39e:	1c 8f       	std	Y+28, r17	; 0x1c
     3a0:	0b 8f       	std	Y+27, r16	; 0x1b
			_delay_ms(50);
		PORTA&=~(1<<col3);
     3a2:	8b e3       	ldi	r24, 0x3B	; 59
     3a4:	90 e0       	ldi	r25, 0x00	; 0
     3a6:	2b e3       	ldi	r18, 0x3B	; 59
     3a8:	30 e0       	ldi	r19, 0x00	; 0
     3aa:	f9 01       	movw	r30, r18
     3ac:	20 81       	ld	r18, Z
     3ae:	2f 7b       	andi	r18, 0xBF	; 191
     3b0:	fc 01       	movw	r30, r24
     3b2:	20 83       	st	Z, r18
		PORTA|=(1<<col2)|(1<<col1);
     3b4:	8b e3       	ldi	r24, 0x3B	; 59
     3b6:	90 e0       	ldi	r25, 0x00	; 0
     3b8:	2b e3       	ldi	r18, 0x3B	; 59
     3ba:	30 e0       	ldi	r19, 0x00	; 0
     3bc:	f9 01       	movw	r30, r18
     3be:	20 81       	ld	r18, Z
     3c0:	20 63       	ori	r18, 0x30	; 48
     3c2:	fc 01       	movw	r30, r24
     3c4:	20 83       	st	Z, r18
		//PORTA=0b10111111;
		if(bit_is_clear(PINA,row1))
     3c6:	89 e3       	ldi	r24, 0x39	; 57
     3c8:	90 e0       	ldi	r25, 0x00	; 0
     3ca:	fc 01       	movw	r30, r24
     3cc:	80 81       	ld	r24, Z
     3ce:	88 2f       	mov	r24, r24
     3d0:	90 e0       	ldi	r25, 0x00	; 0
     3d2:	81 70       	andi	r24, 0x01	; 1
     3d4:	90 70       	andi	r25, 0x00	; 0
     3d6:	00 97       	sbiw	r24, 0x00	; 0
     3d8:	11 f4       	brne	.+4      	; 0x3de <keysense+0x35c>
			return(3);
     3da:	83 e0       	ldi	r24, 0x03	; 3
     3dc:	a5 c0       	rjmp	.+330    	; 0x528 <__stack+0xc9>
		else if(bit_is_clear(PINA,row2))
     3de:	89 e3       	ldi	r24, 0x39	; 57
     3e0:	90 e0       	ldi	r25, 0x00	; 0
     3e2:	fc 01       	movw	r30, r24
     3e4:	80 81       	ld	r24, Z
     3e6:	88 2f       	mov	r24, r24
     3e8:	90 e0       	ldi	r25, 0x00	; 0
     3ea:	82 70       	andi	r24, 0x02	; 2
     3ec:	90 70       	andi	r25, 0x00	; 0
     3ee:	00 97       	sbiw	r24, 0x00	; 0
     3f0:	11 f4       	brne	.+4      	; 0x3f6 <keysense+0x374>
			return(6);
     3f2:	86 e0       	ldi	r24, 0x06	; 6
     3f4:	99 c0       	rjmp	.+306    	; 0x528 <__stack+0xc9>
		else if(bit_is_clear(PINA,row3))
     3f6:	89 e3       	ldi	r24, 0x39	; 57
     3f8:	90 e0       	ldi	r25, 0x00	; 0
     3fa:	fc 01       	movw	r30, r24
     3fc:	80 81       	ld	r24, Z
     3fe:	88 2f       	mov	r24, r24
     400:	90 e0       	ldi	r25, 0x00	; 0
     402:	84 70       	andi	r24, 0x04	; 4
     404:	90 70       	andi	r25, 0x00	; 0
     406:	00 97       	sbiw	r24, 0x00	; 0
     408:	11 f4       	brne	.+4      	; 0x40e <keysense+0x38c>
			return(9);
     40a:	89 e0       	ldi	r24, 0x09	; 9
     40c:	8d c0       	rjmp	.+282    	; 0x528 <__stack+0xc9>
		else if(bit_is_clear(PINA,row4))
     40e:	89 e3       	ldi	r24, 0x39	; 57
     410:	90 e0       	ldi	r25, 0x00	; 0
     412:	fc 01       	movw	r30, r24
     414:	80 81       	ld	r24, Z
     416:	88 2f       	mov	r24, r24
     418:	90 e0       	ldi	r25, 0x00	; 0
     41a:	88 70       	andi	r24, 0x08	; 8
     41c:	90 70       	andi	r25, 0x00	; 0
     41e:	00 97       	sbiw	r24, 0x00	; 0
     420:	11 f4       	brne	.+4      	; 0x426 <keysense+0x3a4>
			return('#');
     422:	83 e2       	ldi	r24, 0x23	; 35
     424:	81 c0       	rjmp	.+258    	; 0x528 <__stack+0xc9>
     426:	80 e0       	ldi	r24, 0x00	; 0
     428:	90 e0       	ldi	r25, 0x00	; 0
     42a:	a8 e4       	ldi	r26, 0x48	; 72
     42c:	b2 e4       	ldi	r27, 0x42	; 66
     42e:	8d 8f       	std	Y+29, r24	; 0x1d
     430:	9e 8f       	std	Y+30, r25	; 0x1e
     432:	af 8f       	std	Y+31, r26	; 0x1f
     434:	b8 a3       	std	Y+32, r27	; 0x20
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     436:	6d 8d       	ldd	r22, Y+29	; 0x1d
     438:	7e 8d       	ldd	r23, Y+30	; 0x1e
     43a:	8f 8d       	ldd	r24, Y+31	; 0x1f
     43c:	98 a1       	ldd	r25, Y+32	; 0x20
     43e:	20 e0       	ldi	r18, 0x00	; 0
     440:	30 e0       	ldi	r19, 0x00	; 0
     442:	4a e7       	ldi	r20, 0x7A	; 122
     444:	53 e4       	ldi	r21, 0x43	; 67
     446:	0e 94 14 14 	call	0x2828	; 0x2828 <__mulsf3>
     44a:	dc 01       	movw	r26, r24
     44c:	cb 01       	movw	r24, r22
     44e:	89 a3       	std	Y+33, r24	; 0x21
     450:	9a a3       	std	Y+34, r25	; 0x22
     452:	ab a3       	std	Y+35, r26	; 0x23
     454:	bc a3       	std	Y+36, r27	; 0x24
	if (__tmp < 1.0)
     456:	11 e0       	ldi	r17, 0x01	; 1
     458:	69 a1       	ldd	r22, Y+33	; 0x21
     45a:	7a a1       	ldd	r23, Y+34	; 0x22
     45c:	8b a1       	ldd	r24, Y+35	; 0x23
     45e:	9c a1       	ldd	r25, Y+36	; 0x24
     460:	20 e0       	ldi	r18, 0x00	; 0
     462:	30 e0       	ldi	r19, 0x00	; 0
     464:	40 e8       	ldi	r20, 0x80	; 128
     466:	5f e3       	ldi	r21, 0x3F	; 63
     468:	0e 94 93 13 	call	0x2726	; 0x2726 <__cmpsf2>
     46c:	88 23       	and	r24, r24
     46e:	0c f0       	brlt	.+2      	; 0x472 <__stack+0x13>
     470:	10 e0       	ldi	r17, 0x00	; 0
     472:	11 23       	and	r17, r17
     474:	29 f0       	breq	.+10     	; 0x480 <__stack+0x21>
		__ticks = 1;
     476:	81 e0       	ldi	r24, 0x01	; 1
     478:	90 e0       	ldi	r25, 0x00	; 0
     47a:	9e a3       	std	Y+38, r25	; 0x26
     47c:	8d a3       	std	Y+37, r24	; 0x25
     47e:	46 c0       	rjmp	.+140    	; 0x50c <__stack+0xad>
	else if (__tmp > 65535)
     480:	11 e0       	ldi	r17, 0x01	; 1
     482:	69 a1       	ldd	r22, Y+33	; 0x21
     484:	7a a1       	ldd	r23, Y+34	; 0x22
     486:	8b a1       	ldd	r24, Y+35	; 0x23
     488:	9c a1       	ldd	r25, Y+36	; 0x24
     48a:	20 e0       	ldi	r18, 0x00	; 0
     48c:	3f ef       	ldi	r19, 0xFF	; 255
     48e:	4f e7       	ldi	r20, 0x7F	; 127
     490:	57 e4       	ldi	r21, 0x47	; 71
     492:	0e 94 10 14 	call	0x2820	; 0x2820 <__gesf2>
     496:	18 16       	cp	r1, r24
     498:	0c f0       	brlt	.+2      	; 0x49c <__stack+0x3d>
     49a:	10 e0       	ldi	r17, 0x00	; 0
     49c:	11 23       	and	r17, r17
     49e:	61 f1       	breq	.+88     	; 0x4f8 <__stack+0x99>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     4a0:	6d 8d       	ldd	r22, Y+29	; 0x1d
     4a2:	7e 8d       	ldd	r23, Y+30	; 0x1e
     4a4:	8f 8d       	ldd	r24, Y+31	; 0x1f
     4a6:	98 a1       	ldd	r25, Y+32	; 0x20
     4a8:	20 e0       	ldi	r18, 0x00	; 0
     4aa:	30 e0       	ldi	r19, 0x00	; 0
     4ac:	40 e2       	ldi	r20, 0x20	; 32
     4ae:	51 e4       	ldi	r21, 0x41	; 65
     4b0:	0e 94 14 14 	call	0x2828	; 0x2828 <__mulsf3>
     4b4:	dc 01       	movw	r26, r24
     4b6:	cb 01       	movw	r24, r22
     4b8:	bc 01       	movw	r22, r24
     4ba:	cd 01       	movw	r24, r26
     4bc:	0e 94 97 13 	call	0x272e	; 0x272e <__fixunssfsi>
     4c0:	dc 01       	movw	r26, r24
     4c2:	cb 01       	movw	r24, r22
     4c4:	9e a3       	std	Y+38, r25	; 0x26
     4c6:	8d a3       	std	Y+37, r24	; 0x25
     4c8:	12 c0       	rjmp	.+36     	; 0x4ee <__stack+0x8f>
     4ca:	89 e1       	ldi	r24, 0x19	; 25
     4cc:	90 e0       	ldi	r25, 0x00	; 0
     4ce:	98 a7       	std	Y+40, r25	; 0x28
     4d0:	8f a3       	std	Y+39, r24	; 0x27
     4d2:	8f a1       	ldd	r24, Y+39	; 0x27
     4d4:	98 a5       	ldd	r25, Y+40	; 0x28
     4d6:	8c 01       	movw	r16, r24
     4d8:	c8 01       	movw	r24, r16
     4da:	01 97       	sbiw	r24, 0x01	; 1
     4dc:	f1 f7       	brne	.-4      	; 0x4da <__stack+0x7b>
     4de:	8c 01       	movw	r16, r24
     4e0:	18 a7       	std	Y+40, r17	; 0x28
     4e2:	0f a3       	std	Y+39, r16	; 0x27
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     4e4:	8d a1       	ldd	r24, Y+37	; 0x25
     4e6:	9e a1       	ldd	r25, Y+38	; 0x26
     4e8:	01 97       	sbiw	r24, 0x01	; 1
     4ea:	9e a3       	std	Y+38, r25	; 0x26
     4ec:	8d a3       	std	Y+37, r24	; 0x25
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     4ee:	8d a1       	ldd	r24, Y+37	; 0x25
     4f0:	9e a1       	ldd	r25, Y+38	; 0x26
     4f2:	00 97       	sbiw	r24, 0x00	; 0
     4f4:	51 f7       	brne	.-44     	; 0x4ca <__stack+0x6b>
		_delay_ms(50);
	};
     4f6:	d1 cd       	rjmp	.-1118   	; 0x9a <keysense+0x18>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     4f8:	69 a1       	ldd	r22, Y+33	; 0x21
     4fa:	7a a1       	ldd	r23, Y+34	; 0x22
     4fc:	8b a1       	ldd	r24, Y+35	; 0x23
     4fe:	9c a1       	ldd	r25, Y+36	; 0x24
     500:	0e 94 97 13 	call	0x272e	; 0x272e <__fixunssfsi>
     504:	dc 01       	movw	r26, r24
     506:	cb 01       	movw	r24, r22
     508:	9e a3       	std	Y+38, r25	; 0x26
     50a:	8d a3       	std	Y+37, r24	; 0x25
     50c:	8d a1       	ldd	r24, Y+37	; 0x25
     50e:	9e a1       	ldd	r25, Y+38	; 0x26
     510:	9a a7       	std	Y+42, r25	; 0x2a
     512:	89 a7       	std	Y+41, r24	; 0x29
     514:	89 a5       	ldd	r24, Y+41	; 0x29
     516:	9a a5       	ldd	r25, Y+42	; 0x2a
     518:	8c 01       	movw	r16, r24
     51a:	f8 01       	movw	r30, r16
     51c:	31 97       	sbiw	r30, 0x01	; 1
     51e:	f1 f7       	brne	.-4      	; 0x51c <__stack+0xbd>
     520:	8f 01       	movw	r16, r30
     522:	1a a7       	std	Y+42, r17	; 0x2a
     524:	09 a7       	std	Y+41, r16	; 0x29
     526:	b9 cd       	rjmp	.-1166   	; 0x9a <keysense+0x18>
}	 
     528:	aa 96       	adiw	r28, 0x2a	; 42
     52a:	0f b6       	in	r0, 0x3f	; 63
     52c:	f8 94       	cli
     52e:	de bf       	out	0x3e, r29	; 62
     530:	0f be       	out	0x3f, r0	; 63
     532:	cd bf       	out	0x3d, r28	; 61
     534:	cf 91       	pop	r28
     536:	df 91       	pop	r29
     538:	1f 91       	pop	r17
     53a:	0f 91       	pop	r16
     53c:	08 95       	ret

0000053e <writestr>:

void writestr(unsigned char *s)
{	
     53e:	0f 93       	push	r16
     540:	1f 93       	push	r17
     542:	df 93       	push	r29
     544:	cf 93       	push	r28
     546:	cd b7       	in	r28, 0x3d	; 61
     548:	de b7       	in	r29, 0x3e	; 62
     54a:	62 97       	sbiw	r28, 0x12	; 18
     54c:	0f b6       	in	r0, 0x3f	; 63
     54e:	f8 94       	cli
     550:	de bf       	out	0x3e, r29	; 62
     552:	0f be       	out	0x3f, r0	; 63
     554:	cd bf       	out	0x3d, r28	; 61
     556:	9a 8b       	std	Y+18, r25	; 0x12
     558:	89 8b       	std	Y+17, r24	; 0x11
	unsigned char l,i;
	l=strlen(s);
     55a:	89 89       	ldd	r24, Y+17	; 0x11
     55c:	9a 89       	ldd	r25, Y+18	; 0x12
     55e:	0e 94 9f 14 	call	0x293e	; 0x293e <strlen>
     562:	8a 83       	std	Y+2, r24	; 0x02
	for(i=0;i<l;i++)
     564:	19 82       	std	Y+1, r1	; 0x01
     566:	8e c0       	rjmp	.+284    	; 0x684 <writestr+0x146>
	{
		writedata(*s);
     568:	89 89       	ldd	r24, Y+17	; 0x11
     56a:	9a 89       	ldd	r25, Y+18	; 0x12
     56c:	fc 01       	movw	r30, r24
     56e:	80 81       	ld	r24, Z
     570:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <writedata>
		s++;
     574:	89 89       	ldd	r24, Y+17	; 0x11
     576:	9a 89       	ldd	r25, Y+18	; 0x12
     578:	01 96       	adiw	r24, 0x01	; 1
     57a:	9a 8b       	std	Y+18, r25	; 0x12
     57c:	89 8b       	std	Y+17, r24	; 0x11
     57e:	80 e0       	ldi	r24, 0x00	; 0
     580:	90 e0       	ldi	r25, 0x00	; 0
     582:	a8 e4       	ldi	r26, 0x48	; 72
     584:	b2 e4       	ldi	r27, 0x42	; 66
     586:	8b 83       	std	Y+3, r24	; 0x03
     588:	9c 83       	std	Y+4, r25	; 0x04
     58a:	ad 83       	std	Y+5, r26	; 0x05
     58c:	be 83       	std	Y+6, r27	; 0x06
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     58e:	6b 81       	ldd	r22, Y+3	; 0x03
     590:	7c 81       	ldd	r23, Y+4	; 0x04
     592:	8d 81       	ldd	r24, Y+5	; 0x05
     594:	9e 81       	ldd	r25, Y+6	; 0x06
     596:	20 e0       	ldi	r18, 0x00	; 0
     598:	30 e0       	ldi	r19, 0x00	; 0
     59a:	4a e7       	ldi	r20, 0x7A	; 122
     59c:	53 e4       	ldi	r21, 0x43	; 67
     59e:	0e 94 14 14 	call	0x2828	; 0x2828 <__mulsf3>
     5a2:	dc 01       	movw	r26, r24
     5a4:	cb 01       	movw	r24, r22
     5a6:	8f 83       	std	Y+7, r24	; 0x07
     5a8:	98 87       	std	Y+8, r25	; 0x08
     5aa:	a9 87       	std	Y+9, r26	; 0x09
     5ac:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     5ae:	11 e0       	ldi	r17, 0x01	; 1
     5b0:	6f 81       	ldd	r22, Y+7	; 0x07
     5b2:	78 85       	ldd	r23, Y+8	; 0x08
     5b4:	89 85       	ldd	r24, Y+9	; 0x09
     5b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     5b8:	20 e0       	ldi	r18, 0x00	; 0
     5ba:	30 e0       	ldi	r19, 0x00	; 0
     5bc:	40 e8       	ldi	r20, 0x80	; 128
     5be:	5f e3       	ldi	r21, 0x3F	; 63
     5c0:	0e 94 93 13 	call	0x2726	; 0x2726 <__cmpsf2>
     5c4:	88 23       	and	r24, r24
     5c6:	0c f0       	brlt	.+2      	; 0x5ca <writestr+0x8c>
     5c8:	10 e0       	ldi	r17, 0x00	; 0
     5ca:	11 23       	and	r17, r17
     5cc:	29 f0       	breq	.+10     	; 0x5d8 <writestr+0x9a>
		__ticks = 1;
     5ce:	81 e0       	ldi	r24, 0x01	; 1
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	9c 87       	std	Y+12, r25	; 0x0c
     5d4:	8b 87       	std	Y+11, r24	; 0x0b
     5d6:	46 c0       	rjmp	.+140    	; 0x664 <writestr+0x126>
	else if (__tmp > 65535)
     5d8:	11 e0       	ldi	r17, 0x01	; 1
     5da:	6f 81       	ldd	r22, Y+7	; 0x07
     5dc:	78 85       	ldd	r23, Y+8	; 0x08
     5de:	89 85       	ldd	r24, Y+9	; 0x09
     5e0:	9a 85       	ldd	r25, Y+10	; 0x0a
     5e2:	20 e0       	ldi	r18, 0x00	; 0
     5e4:	3f ef       	ldi	r19, 0xFF	; 255
     5e6:	4f e7       	ldi	r20, 0x7F	; 127
     5e8:	57 e4       	ldi	r21, 0x47	; 71
     5ea:	0e 94 10 14 	call	0x2820	; 0x2820 <__gesf2>
     5ee:	18 16       	cp	r1, r24
     5f0:	0c f0       	brlt	.+2      	; 0x5f4 <writestr+0xb6>
     5f2:	10 e0       	ldi	r17, 0x00	; 0
     5f4:	11 23       	and	r17, r17
     5f6:	61 f1       	breq	.+88     	; 0x650 <writestr+0x112>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     5f8:	6b 81       	ldd	r22, Y+3	; 0x03
     5fa:	7c 81       	ldd	r23, Y+4	; 0x04
     5fc:	8d 81       	ldd	r24, Y+5	; 0x05
     5fe:	9e 81       	ldd	r25, Y+6	; 0x06
     600:	20 e0       	ldi	r18, 0x00	; 0
     602:	30 e0       	ldi	r19, 0x00	; 0
     604:	40 e2       	ldi	r20, 0x20	; 32
     606:	51 e4       	ldi	r21, 0x41	; 65
     608:	0e 94 14 14 	call	0x2828	; 0x2828 <__mulsf3>
     60c:	dc 01       	movw	r26, r24
     60e:	cb 01       	movw	r24, r22
     610:	bc 01       	movw	r22, r24
     612:	cd 01       	movw	r24, r26
     614:	0e 94 97 13 	call	0x272e	; 0x272e <__fixunssfsi>
     618:	dc 01       	movw	r26, r24
     61a:	cb 01       	movw	r24, r22
     61c:	9c 87       	std	Y+12, r25	; 0x0c
     61e:	8b 87       	std	Y+11, r24	; 0x0b
     620:	12 c0       	rjmp	.+36     	; 0x646 <writestr+0x108>
     622:	89 e1       	ldi	r24, 0x19	; 25
     624:	90 e0       	ldi	r25, 0x00	; 0
     626:	9e 87       	std	Y+14, r25	; 0x0e
     628:	8d 87       	std	Y+13, r24	; 0x0d
     62a:	8d 85       	ldd	r24, Y+13	; 0x0d
     62c:	9e 85       	ldd	r25, Y+14	; 0x0e
     62e:	8c 01       	movw	r16, r24
     630:	c8 01       	movw	r24, r16
     632:	01 97       	sbiw	r24, 0x01	; 1
     634:	f1 f7       	brne	.-4      	; 0x632 <writestr+0xf4>
     636:	8c 01       	movw	r16, r24
     638:	1e 87       	std	Y+14, r17	; 0x0e
     63a:	0d 87       	std	Y+13, r16	; 0x0d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     63c:	8b 85       	ldd	r24, Y+11	; 0x0b
     63e:	9c 85       	ldd	r25, Y+12	; 0x0c
     640:	01 97       	sbiw	r24, 0x01	; 1
     642:	9c 87       	std	Y+12, r25	; 0x0c
     644:	8b 87       	std	Y+11, r24	; 0x0b
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     646:	8b 85       	ldd	r24, Y+11	; 0x0b
     648:	9c 85       	ldd	r25, Y+12	; 0x0c
     64a:	00 97       	sbiw	r24, 0x00	; 0
     64c:	51 f7       	brne	.-44     	; 0x622 <writestr+0xe4>
     64e:	17 c0       	rjmp	.+46     	; 0x67e <writestr+0x140>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     650:	6f 81       	ldd	r22, Y+7	; 0x07
     652:	78 85       	ldd	r23, Y+8	; 0x08
     654:	89 85       	ldd	r24, Y+9	; 0x09
     656:	9a 85       	ldd	r25, Y+10	; 0x0a
     658:	0e 94 97 13 	call	0x272e	; 0x272e <__fixunssfsi>
     65c:	dc 01       	movw	r26, r24
     65e:	cb 01       	movw	r24, r22
     660:	9c 87       	std	Y+12, r25	; 0x0c
     662:	8b 87       	std	Y+11, r24	; 0x0b
     664:	8b 85       	ldd	r24, Y+11	; 0x0b
     666:	9c 85       	ldd	r25, Y+12	; 0x0c
     668:	98 8b       	std	Y+16, r25	; 0x10
     66a:	8f 87       	std	Y+15, r24	; 0x0f
     66c:	8f 85       	ldd	r24, Y+15	; 0x0f
     66e:	98 89       	ldd	r25, Y+16	; 0x10
     670:	8c 01       	movw	r16, r24
     672:	f8 01       	movw	r30, r16
     674:	31 97       	sbiw	r30, 0x01	; 1
     676:	f1 f7       	brne	.-4      	; 0x674 <writestr+0x136>
     678:	8f 01       	movw	r16, r30
     67a:	18 8b       	std	Y+16, r17	; 0x10
     67c:	0f 87       	std	Y+15, r16	; 0x0f

void writestr(unsigned char *s)
{	
	unsigned char l,i;
	l=strlen(s);
	for(i=0;i<l;i++)
     67e:	89 81       	ldd	r24, Y+1	; 0x01
     680:	8f 5f       	subi	r24, 0xFF	; 255
     682:	89 83       	std	Y+1, r24	; 0x01
     684:	99 81       	ldd	r25, Y+1	; 0x01
     686:	8a 81       	ldd	r24, Y+2	; 0x02
     688:	98 17       	cp	r25, r24
     68a:	08 f4       	brcc	.+2      	; 0x68e <writestr+0x150>
     68c:	6d cf       	rjmp	.-294    	; 0x568 <writestr+0x2a>
	{
		writedata(*s);
		s++;
		_delay_ms(50);
	}
}
     68e:	62 96       	adiw	r28, 0x12	; 18
     690:	0f b6       	in	r0, 0x3f	; 63
     692:	f8 94       	cli
     694:	de bf       	out	0x3e, r29	; 62
     696:	0f be       	out	0x3f, r0	; 63
     698:	cd bf       	out	0x3d, r28	; 61
     69a:	cf 91       	pop	r28
     69c:	df 91       	pop	r29
     69e:	1f 91       	pop	r17
     6a0:	0f 91       	pop	r16
     6a2:	08 95       	ret

000006a4 <writecmd>:

void writecmd(unsigned char a)
{
     6a4:	0f 93       	push	r16
     6a6:	1f 93       	push	r17
     6a8:	df 93       	push	r29
     6aa:	cf 93       	push	r28
     6ac:	cd b7       	in	r28, 0x3d	; 61
     6ae:	de b7       	in	r29, 0x3e	; 62
     6b0:	2f 97       	sbiw	r28, 0x0f	; 15
     6b2:	0f b6       	in	r0, 0x3f	; 63
     6b4:	f8 94       	cli
     6b6:	de bf       	out	0x3e, r29	; 62
     6b8:	0f be       	out	0x3f, r0	; 63
     6ba:	cd bf       	out	0x3d, r28	; 61
     6bc:	8f 87       	std	Y+15, r24	; 0x0f
	PORTB=(0<<RS)|(0<<RW)|(1<<EN);
     6be:	88 e3       	ldi	r24, 0x38	; 56
     6c0:	90 e0       	ldi	r25, 0x00	; 0
     6c2:	20 e8       	ldi	r18, 0x80	; 128
     6c4:	fc 01       	movw	r30, r24
     6c6:	20 83       	st	Z, r18
	PORTC=a;
     6c8:	85 e3       	ldi	r24, 0x35	; 53
     6ca:	90 e0       	ldi	r25, 0x00	; 0
     6cc:	2f 85       	ldd	r18, Y+15	; 0x0f
     6ce:	fc 01       	movw	r30, r24
     6d0:	20 83       	st	Z, r18
     6d2:	80 e0       	ldi	r24, 0x00	; 0
     6d4:	90 e0       	ldi	r25, 0x00	; 0
     6d6:	a0 ea       	ldi	r26, 0xA0	; 160
     6d8:	b0 e4       	ldi	r27, 0x40	; 64
     6da:	89 83       	std	Y+1, r24	; 0x01
     6dc:	9a 83       	std	Y+2, r25	; 0x02
     6de:	ab 83       	std	Y+3, r26	; 0x03
     6e0:	bc 83       	std	Y+4, r27	; 0x04
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     6e2:	69 81       	ldd	r22, Y+1	; 0x01
     6e4:	7a 81       	ldd	r23, Y+2	; 0x02
     6e6:	8b 81       	ldd	r24, Y+3	; 0x03
     6e8:	9c 81       	ldd	r25, Y+4	; 0x04
     6ea:	20 e0       	ldi	r18, 0x00	; 0
     6ec:	30 e0       	ldi	r19, 0x00	; 0
     6ee:	4a e7       	ldi	r20, 0x7A	; 122
     6f0:	53 e4       	ldi	r21, 0x43	; 67
     6f2:	0e 94 14 14 	call	0x2828	; 0x2828 <__mulsf3>
     6f6:	dc 01       	movw	r26, r24
     6f8:	cb 01       	movw	r24, r22
     6fa:	8d 83       	std	Y+5, r24	; 0x05
     6fc:	9e 83       	std	Y+6, r25	; 0x06
     6fe:	af 83       	std	Y+7, r26	; 0x07
     700:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     702:	11 e0       	ldi	r17, 0x01	; 1
     704:	6d 81       	ldd	r22, Y+5	; 0x05
     706:	7e 81       	ldd	r23, Y+6	; 0x06
     708:	8f 81       	ldd	r24, Y+7	; 0x07
     70a:	98 85       	ldd	r25, Y+8	; 0x08
     70c:	20 e0       	ldi	r18, 0x00	; 0
     70e:	30 e0       	ldi	r19, 0x00	; 0
     710:	40 e8       	ldi	r20, 0x80	; 128
     712:	5f e3       	ldi	r21, 0x3F	; 63
     714:	0e 94 93 13 	call	0x2726	; 0x2726 <__cmpsf2>
     718:	88 23       	and	r24, r24
     71a:	0c f0       	brlt	.+2      	; 0x71e <writecmd+0x7a>
     71c:	10 e0       	ldi	r17, 0x00	; 0
     71e:	11 23       	and	r17, r17
     720:	29 f0       	breq	.+10     	; 0x72c <writecmd+0x88>
		__ticks = 1;
     722:	81 e0       	ldi	r24, 0x01	; 1
     724:	90 e0       	ldi	r25, 0x00	; 0
     726:	9a 87       	std	Y+10, r25	; 0x0a
     728:	89 87       	std	Y+9, r24	; 0x09
     72a:	46 c0       	rjmp	.+140    	; 0x7b8 <writecmd+0x114>
	else if (__tmp > 65535)
     72c:	11 e0       	ldi	r17, 0x01	; 1
     72e:	6d 81       	ldd	r22, Y+5	; 0x05
     730:	7e 81       	ldd	r23, Y+6	; 0x06
     732:	8f 81       	ldd	r24, Y+7	; 0x07
     734:	98 85       	ldd	r25, Y+8	; 0x08
     736:	20 e0       	ldi	r18, 0x00	; 0
     738:	3f ef       	ldi	r19, 0xFF	; 255
     73a:	4f e7       	ldi	r20, 0x7F	; 127
     73c:	57 e4       	ldi	r21, 0x47	; 71
     73e:	0e 94 10 14 	call	0x2820	; 0x2820 <__gesf2>
     742:	18 16       	cp	r1, r24
     744:	0c f0       	brlt	.+2      	; 0x748 <writecmd+0xa4>
     746:	10 e0       	ldi	r17, 0x00	; 0
     748:	11 23       	and	r17, r17
     74a:	61 f1       	breq	.+88     	; 0x7a4 <writecmd+0x100>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     74c:	69 81       	ldd	r22, Y+1	; 0x01
     74e:	7a 81       	ldd	r23, Y+2	; 0x02
     750:	8b 81       	ldd	r24, Y+3	; 0x03
     752:	9c 81       	ldd	r25, Y+4	; 0x04
     754:	20 e0       	ldi	r18, 0x00	; 0
     756:	30 e0       	ldi	r19, 0x00	; 0
     758:	40 e2       	ldi	r20, 0x20	; 32
     75a:	51 e4       	ldi	r21, 0x41	; 65
     75c:	0e 94 14 14 	call	0x2828	; 0x2828 <__mulsf3>
     760:	dc 01       	movw	r26, r24
     762:	cb 01       	movw	r24, r22
     764:	bc 01       	movw	r22, r24
     766:	cd 01       	movw	r24, r26
     768:	0e 94 97 13 	call	0x272e	; 0x272e <__fixunssfsi>
     76c:	dc 01       	movw	r26, r24
     76e:	cb 01       	movw	r24, r22
     770:	9a 87       	std	Y+10, r25	; 0x0a
     772:	89 87       	std	Y+9, r24	; 0x09
     774:	12 c0       	rjmp	.+36     	; 0x79a <writecmd+0xf6>
     776:	89 e1       	ldi	r24, 0x19	; 25
     778:	90 e0       	ldi	r25, 0x00	; 0
     77a:	9c 87       	std	Y+12, r25	; 0x0c
     77c:	8b 87       	std	Y+11, r24	; 0x0b
     77e:	8b 85       	ldd	r24, Y+11	; 0x0b
     780:	9c 85       	ldd	r25, Y+12	; 0x0c
     782:	8c 01       	movw	r16, r24
     784:	c8 01       	movw	r24, r16
     786:	01 97       	sbiw	r24, 0x01	; 1
     788:	f1 f7       	brne	.-4      	; 0x786 <writecmd+0xe2>
     78a:	8c 01       	movw	r16, r24
     78c:	1c 87       	std	Y+12, r17	; 0x0c
     78e:	0b 87       	std	Y+11, r16	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     790:	89 85       	ldd	r24, Y+9	; 0x09
     792:	9a 85       	ldd	r25, Y+10	; 0x0a
     794:	01 97       	sbiw	r24, 0x01	; 1
     796:	9a 87       	std	Y+10, r25	; 0x0a
     798:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     79a:	89 85       	ldd	r24, Y+9	; 0x09
     79c:	9a 85       	ldd	r25, Y+10	; 0x0a
     79e:	00 97       	sbiw	r24, 0x00	; 0
     7a0:	51 f7       	brne	.-44     	; 0x776 <writecmd+0xd2>
     7a2:	17 c0       	rjmp	.+46     	; 0x7d2 <writecmd+0x12e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     7a4:	6d 81       	ldd	r22, Y+5	; 0x05
     7a6:	7e 81       	ldd	r23, Y+6	; 0x06
     7a8:	8f 81       	ldd	r24, Y+7	; 0x07
     7aa:	98 85       	ldd	r25, Y+8	; 0x08
     7ac:	0e 94 97 13 	call	0x272e	; 0x272e <__fixunssfsi>
     7b0:	dc 01       	movw	r26, r24
     7b2:	cb 01       	movw	r24, r22
     7b4:	9a 87       	std	Y+10, r25	; 0x0a
     7b6:	89 87       	std	Y+9, r24	; 0x09
     7b8:	89 85       	ldd	r24, Y+9	; 0x09
     7ba:	9a 85       	ldd	r25, Y+10	; 0x0a
     7bc:	9e 87       	std	Y+14, r25	; 0x0e
     7be:	8d 87       	std	Y+13, r24	; 0x0d
     7c0:	8d 85       	ldd	r24, Y+13	; 0x0d
     7c2:	9e 85       	ldd	r25, Y+14	; 0x0e
     7c4:	8c 01       	movw	r16, r24
     7c6:	f8 01       	movw	r30, r16
     7c8:	31 97       	sbiw	r30, 0x01	; 1
     7ca:	f1 f7       	brne	.-4      	; 0x7c8 <writecmd+0x124>
     7cc:	8f 01       	movw	r16, r30
     7ce:	1e 87       	std	Y+14, r17	; 0x0e
     7d0:	0d 87       	std	Y+13, r16	; 0x0d
	_delay_ms(5);
	PORTB=(0<<RS)|(0<<RW)|(0<<EN);
     7d2:	88 e3       	ldi	r24, 0x38	; 56
     7d4:	90 e0       	ldi	r25, 0x00	; 0
     7d6:	fc 01       	movw	r30, r24
     7d8:	10 82       	st	Z, r1
	return;
}
     7da:	2f 96       	adiw	r28, 0x0f	; 15
     7dc:	0f b6       	in	r0, 0x3f	; 63
     7de:	f8 94       	cli
     7e0:	de bf       	out	0x3e, r29	; 62
     7e2:	0f be       	out	0x3f, r0	; 63
     7e4:	cd bf       	out	0x3d, r28	; 61
     7e6:	cf 91       	pop	r28
     7e8:	df 91       	pop	r29
     7ea:	1f 91       	pop	r17
     7ec:	0f 91       	pop	r16
     7ee:	08 95       	ret

000007f0 <writedata>:

void writedata(unsigned char b)
{
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	df 93       	push	r29
     7f6:	cf 93       	push	r28
     7f8:	cd b7       	in	r28, 0x3d	; 61
     7fa:	de b7       	in	r29, 0x3e	; 62
     7fc:	2f 97       	sbiw	r28, 0x0f	; 15
     7fe:	0f b6       	in	r0, 0x3f	; 63
     800:	f8 94       	cli
     802:	de bf       	out	0x3e, r29	; 62
     804:	0f be       	out	0x3f, r0	; 63
     806:	cd bf       	out	0x3d, r28	; 61
     808:	8f 87       	std	Y+15, r24	; 0x0f
	PORTB=(1<<RS)|(0<<RW)|(1<<EN);
     80a:	88 e3       	ldi	r24, 0x38	; 56
     80c:	90 e0       	ldi	r25, 0x00	; 0
     80e:	20 ea       	ldi	r18, 0xA0	; 160
     810:	fc 01       	movw	r30, r24
     812:	20 83       	st	Z, r18
	PORTC=b;
     814:	85 e3       	ldi	r24, 0x35	; 53
     816:	90 e0       	ldi	r25, 0x00	; 0
     818:	2f 85       	ldd	r18, Y+15	; 0x0f
     81a:	fc 01       	movw	r30, r24
     81c:	20 83       	st	Z, r18
     81e:	80 e0       	ldi	r24, 0x00	; 0
     820:	90 e0       	ldi	r25, 0x00	; 0
     822:	a0 ea       	ldi	r26, 0xA0	; 160
     824:	b0 e4       	ldi	r27, 0x40	; 64
     826:	89 83       	std	Y+1, r24	; 0x01
     828:	9a 83       	std	Y+2, r25	; 0x02
     82a:	ab 83       	std	Y+3, r26	; 0x03
     82c:	bc 83       	std	Y+4, r27	; 0x04
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     82e:	69 81       	ldd	r22, Y+1	; 0x01
     830:	7a 81       	ldd	r23, Y+2	; 0x02
     832:	8b 81       	ldd	r24, Y+3	; 0x03
     834:	9c 81       	ldd	r25, Y+4	; 0x04
     836:	20 e0       	ldi	r18, 0x00	; 0
     838:	30 e0       	ldi	r19, 0x00	; 0
     83a:	4a e7       	ldi	r20, 0x7A	; 122
     83c:	53 e4       	ldi	r21, 0x43	; 67
     83e:	0e 94 14 14 	call	0x2828	; 0x2828 <__mulsf3>
     842:	dc 01       	movw	r26, r24
     844:	cb 01       	movw	r24, r22
     846:	8d 83       	std	Y+5, r24	; 0x05
     848:	9e 83       	std	Y+6, r25	; 0x06
     84a:	af 83       	std	Y+7, r26	; 0x07
     84c:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     84e:	11 e0       	ldi	r17, 0x01	; 1
     850:	6d 81       	ldd	r22, Y+5	; 0x05
     852:	7e 81       	ldd	r23, Y+6	; 0x06
     854:	8f 81       	ldd	r24, Y+7	; 0x07
     856:	98 85       	ldd	r25, Y+8	; 0x08
     858:	20 e0       	ldi	r18, 0x00	; 0
     85a:	30 e0       	ldi	r19, 0x00	; 0
     85c:	40 e8       	ldi	r20, 0x80	; 128
     85e:	5f e3       	ldi	r21, 0x3F	; 63
     860:	0e 94 93 13 	call	0x2726	; 0x2726 <__cmpsf2>
     864:	88 23       	and	r24, r24
     866:	0c f0       	brlt	.+2      	; 0x86a <writedata+0x7a>
     868:	10 e0       	ldi	r17, 0x00	; 0
     86a:	11 23       	and	r17, r17
     86c:	29 f0       	breq	.+10     	; 0x878 <writedata+0x88>
		__ticks = 1;
     86e:	81 e0       	ldi	r24, 0x01	; 1
     870:	90 e0       	ldi	r25, 0x00	; 0
     872:	9a 87       	std	Y+10, r25	; 0x0a
     874:	89 87       	std	Y+9, r24	; 0x09
     876:	46 c0       	rjmp	.+140    	; 0x904 <writedata+0x114>
	else if (__tmp > 65535)
     878:	11 e0       	ldi	r17, 0x01	; 1
     87a:	6d 81       	ldd	r22, Y+5	; 0x05
     87c:	7e 81       	ldd	r23, Y+6	; 0x06
     87e:	8f 81       	ldd	r24, Y+7	; 0x07
     880:	98 85       	ldd	r25, Y+8	; 0x08
     882:	20 e0       	ldi	r18, 0x00	; 0
     884:	3f ef       	ldi	r19, 0xFF	; 255
     886:	4f e7       	ldi	r20, 0x7F	; 127
     888:	57 e4       	ldi	r21, 0x47	; 71
     88a:	0e 94 10 14 	call	0x2820	; 0x2820 <__gesf2>
     88e:	18 16       	cp	r1, r24
     890:	0c f0       	brlt	.+2      	; 0x894 <writedata+0xa4>
     892:	10 e0       	ldi	r17, 0x00	; 0
     894:	11 23       	and	r17, r17
     896:	61 f1       	breq	.+88     	; 0x8f0 <writedata+0x100>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     898:	69 81       	ldd	r22, Y+1	; 0x01
     89a:	7a 81       	ldd	r23, Y+2	; 0x02
     89c:	8b 81       	ldd	r24, Y+3	; 0x03
     89e:	9c 81       	ldd	r25, Y+4	; 0x04
     8a0:	20 e0       	ldi	r18, 0x00	; 0
     8a2:	30 e0       	ldi	r19, 0x00	; 0
     8a4:	40 e2       	ldi	r20, 0x20	; 32
     8a6:	51 e4       	ldi	r21, 0x41	; 65
     8a8:	0e 94 14 14 	call	0x2828	; 0x2828 <__mulsf3>
     8ac:	dc 01       	movw	r26, r24
     8ae:	cb 01       	movw	r24, r22
     8b0:	bc 01       	movw	r22, r24
     8b2:	cd 01       	movw	r24, r26
     8b4:	0e 94 97 13 	call	0x272e	; 0x272e <__fixunssfsi>
     8b8:	dc 01       	movw	r26, r24
     8ba:	cb 01       	movw	r24, r22
     8bc:	9a 87       	std	Y+10, r25	; 0x0a
     8be:	89 87       	std	Y+9, r24	; 0x09
     8c0:	12 c0       	rjmp	.+36     	; 0x8e6 <writedata+0xf6>
     8c2:	89 e1       	ldi	r24, 0x19	; 25
     8c4:	90 e0       	ldi	r25, 0x00	; 0
     8c6:	9c 87       	std	Y+12, r25	; 0x0c
     8c8:	8b 87       	std	Y+11, r24	; 0x0b
     8ca:	8b 85       	ldd	r24, Y+11	; 0x0b
     8cc:	9c 85       	ldd	r25, Y+12	; 0x0c
     8ce:	8c 01       	movw	r16, r24
     8d0:	c8 01       	movw	r24, r16
     8d2:	01 97       	sbiw	r24, 0x01	; 1
     8d4:	f1 f7       	brne	.-4      	; 0x8d2 <writedata+0xe2>
     8d6:	8c 01       	movw	r16, r24
     8d8:	1c 87       	std	Y+12, r17	; 0x0c
     8da:	0b 87       	std	Y+11, r16	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     8dc:	89 85       	ldd	r24, Y+9	; 0x09
     8de:	9a 85       	ldd	r25, Y+10	; 0x0a
     8e0:	01 97       	sbiw	r24, 0x01	; 1
     8e2:	9a 87       	std	Y+10, r25	; 0x0a
     8e4:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     8e6:	89 85       	ldd	r24, Y+9	; 0x09
     8e8:	9a 85       	ldd	r25, Y+10	; 0x0a
     8ea:	00 97       	sbiw	r24, 0x00	; 0
     8ec:	51 f7       	brne	.-44     	; 0x8c2 <writedata+0xd2>
     8ee:	17 c0       	rjmp	.+46     	; 0x91e <writedata+0x12e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     8f0:	6d 81       	ldd	r22, Y+5	; 0x05
     8f2:	7e 81       	ldd	r23, Y+6	; 0x06
     8f4:	8f 81       	ldd	r24, Y+7	; 0x07
     8f6:	98 85       	ldd	r25, Y+8	; 0x08
     8f8:	0e 94 97 13 	call	0x272e	; 0x272e <__fixunssfsi>
     8fc:	dc 01       	movw	r26, r24
     8fe:	cb 01       	movw	r24, r22
     900:	9a 87       	std	Y+10, r25	; 0x0a
     902:	89 87       	std	Y+9, r24	; 0x09
     904:	89 85       	ldd	r24, Y+9	; 0x09
     906:	9a 85       	ldd	r25, Y+10	; 0x0a
     908:	9e 87       	std	Y+14, r25	; 0x0e
     90a:	8d 87       	std	Y+13, r24	; 0x0d
     90c:	8d 85       	ldd	r24, Y+13	; 0x0d
     90e:	9e 85       	ldd	r25, Y+14	; 0x0e
     910:	8c 01       	movw	r16, r24
     912:	f8 01       	movw	r30, r16
     914:	31 97       	sbiw	r30, 0x01	; 1
     916:	f1 f7       	brne	.-4      	; 0x914 <writedata+0x124>
     918:	8f 01       	movw	r16, r30
     91a:	1e 87       	std	Y+14, r17	; 0x0e
     91c:	0d 87       	std	Y+13, r16	; 0x0d
	_delay_ms(5);
	PORTB=(1<<RS)|(0<<RW)|(0<<EN);
     91e:	88 e3       	ldi	r24, 0x38	; 56
     920:	90 e0       	ldi	r25, 0x00	; 0
     922:	20 e2       	ldi	r18, 0x20	; 32
     924:	fc 01       	movw	r30, r24
     926:	20 83       	st	Z, r18
	return;
}
     928:	2f 96       	adiw	r28, 0x0f	; 15
     92a:	0f b6       	in	r0, 0x3f	; 63
     92c:	f8 94       	cli
     92e:	de bf       	out	0x3e, r29	; 62
     930:	0f be       	out	0x3f, r0	; 63
     932:	cd bf       	out	0x3d, r28	; 61
     934:	cf 91       	pop	r28
     936:	df 91       	pop	r29
     938:	1f 91       	pop	r17
     93a:	0f 91       	pop	r16
     93c:	08 95       	ret

0000093e <lcd>:
void lcd(void)
{
     93e:	df 93       	push	r29
     940:	cf 93       	push	r28
     942:	cd b7       	in	r28, 0x3d	; 61
     944:	de b7       	in	r29, 0x3e	; 62
	writecmd(0x38);
     946:	88 e3       	ldi	r24, 0x38	; 56
     948:	0e 94 52 03 	call	0x6a4	; 0x6a4 <writecmd>
	writecmd(0x0e);
     94c:	8e e0       	ldi	r24, 0x0E	; 14
     94e:	0e 94 52 03 	call	0x6a4	; 0x6a4 <writecmd>
	writecmd(0x01);
     952:	81 e0       	ldi	r24, 0x01	; 1
     954:	0e 94 52 03 	call	0x6a4	; 0x6a4 <writecmd>
	writecmd(0x06);
     958:	86 e0       	ldi	r24, 0x06	; 6
     95a:	0e 94 52 03 	call	0x6a4	; 0x6a4 <writecmd>
	writecmd(0x80);
     95e:	80 e8       	ldi	r24, 0x80	; 128
     960:	0e 94 52 03 	call	0x6a4	; 0x6a4 <writecmd>
}
     964:	cf 91       	pop	r28
     966:	df 91       	pop	r29
     968:	08 95       	ret

0000096a <main>:

int main()
{
     96a:	0f 93       	push	r16
     96c:	1f 93       	push	r17
     96e:	df 93       	push	r29
     970:	cf 93       	push	r28
     972:	cd b7       	in	r28, 0x3d	; 61
     974:	de b7       	in	r29, 0x3e	; 62
     976:	c7 50       	subi	r28, 0x07	; 7
     978:	d1 40       	sbci	r29, 0x01	; 1
     97a:	0f b6       	in	r0, 0x3f	; 63
     97c:	f8 94       	cli
     97e:	de bf       	out	0x3e, r29	; 62
     980:	0f be       	out	0x3f, r0	; 63
     982:	cd bf       	out	0x3d, r28	; 61
	unsigned char a;
	char arr[]={0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8,0x80,0x90};
     984:	ce 01       	movw	r24, r28
     986:	82 50       	subi	r24, 0x02	; 2
     988:	9f 4f       	sbci	r25, 0xFF	; 255
     98a:	28 eb       	ldi	r18, 0xB8	; 184
     98c:	30 e0       	ldi	r19, 0x00	; 0
     98e:	4a e0       	ldi	r20, 0x0A	; 10
     990:	f9 01       	movw	r30, r18
     992:	00 80       	ld	r0, Z
     994:	2f 5f       	subi	r18, 0xFF	; 255
     996:	3f 4f       	sbci	r19, 0xFF	; 255
     998:	fc 01       	movw	r30, r24
     99a:	00 82       	st	Z, r0
     99c:	01 96       	adiw	r24, 0x01	; 1
     99e:	41 50       	subi	r20, 0x01	; 1
     9a0:	44 23       	and	r20, r20
     9a2:	b1 f7       	brne	.-20     	; 0x990 <main+0x26>
	DDRA=0xf0;
     9a4:	8a e3       	ldi	r24, 0x3A	; 58
     9a6:	90 e0       	ldi	r25, 0x00	; 0
     9a8:	20 ef       	ldi	r18, 0xF0	; 240
     9aa:	fc 01       	movw	r30, r24
     9ac:	20 83       	st	Z, r18
	PORTA=0x0f;
     9ae:	8b e3       	ldi	r24, 0x3B	; 59
     9b0:	90 e0       	ldi	r25, 0x00	; 0
     9b2:	2f e0       	ldi	r18, 0x0F	; 15
     9b4:	fc 01       	movw	r30, r24
     9b6:	20 83       	st	Z, r18
	DDRC=0XFF;
     9b8:	84 e3       	ldi	r24, 0x34	; 52
     9ba:	90 e0       	ldi	r25, 0x00	; 0
     9bc:	2f ef       	ldi	r18, 0xFF	; 255
     9be:	fc 01       	movw	r30, r24
     9c0:	20 83       	st	Z, r18
	DDRD=0XFF;
     9c2:	81 e3       	ldi	r24, 0x31	; 49
     9c4:	90 e0       	ldi	r25, 0x00	; 0
     9c6:	2f ef       	ldi	r18, 0xFF	; 255
     9c8:	fc 01       	movw	r30, r24
     9ca:	20 83       	st	Z, r18
	DDRB=0XE0;
     9cc:	87 e3       	ldi	r24, 0x37	; 55
     9ce:	90 e0       	ldi	r25, 0x00	; 0
     9d0:	20 ee       	ldi	r18, 0xE0	; 224
     9d2:	fc 01       	movw	r30, r24
     9d4:	20 83       	st	Z, r18
	lcd();
     9d6:	0e 94 9f 04 	call	0x93e	; 0x93e <lcd>
	writestr("WELCOME");
     9da:	80 e6       	ldi	r24, 0x60	; 96
     9dc:	90 e0       	ldi	r25, 0x00	; 0
     9de:	0e 94 9f 02 	call	0x53e	; 0x53e <writestr>
	writecmd(0xc5);
     9e2:	85 ec       	ldi	r24, 0xC5	; 197
     9e4:	0e 94 52 03 	call	0x6a4	; 0x6a4 <writecmd>
	writestr("	  CETPA");
     9e8:	88 e6       	ldi	r24, 0x68	; 104
     9ea:	90 e0       	ldi	r25, 0x00	; 0
     9ec:	0e 94 9f 02 	call	0x53e	; 0x53e <writestr>
	writecmd(0x01);
     9f0:	81 e0       	ldi	r24, 0x01	; 1
     9f2:	0e 94 52 03 	call	0x6a4	; 0x6a4 <writecmd>
	writedata('A');
	keysense();		 */
 
	while(1)
	{
	 writecmd(0x80);
     9f6:	80 e8       	ldi	r24, 0x80	; 128
     9f8:	0e 94 52 03 	call	0x6a4	; 0x6a4 <writecmd>
	writestr("KEY SENSED");	
     9fc:	81 e7       	ldi	r24, 0x71	; 113
     9fe:	90 e0       	ldi	r25, 0x00	; 0
     a00:	0e 94 9f 02 	call	0x53e	; 0x53e <writestr>
	//value=PINA;
	//if(PINA!=0x0f)
	//{
	a=keysense();
     a04:	0e 94 41 00 	call	0x82	; 0x82 <keysense>
     a08:	89 83       	std	Y+1, r24	; 0x01
	switch(a)
     a0a:	89 81       	ldd	r24, Y+1	; 0x01
     a0c:	88 2f       	mov	r24, r24
     a0e:	90 e0       	ldi	r25, 0x00	; 0
     a10:	84 30       	cpi	r24, 0x04	; 4
     a12:	91 05       	cpc	r25, r1
     a14:	09 f4       	brne	.+2      	; 0xa18 <main+0xae>
     a16:	cc c5       	rjmp	.+2968   	; 0x15b0 <main+0xc46>
     a18:	85 30       	cpi	r24, 0x05	; 5
     a1a:	91 05       	cpc	r25, r1
     a1c:	ac f4       	brge	.+42     	; 0xa48 <main+0xde>
     a1e:	81 30       	cpi	r24, 0x01	; 1
     a20:	91 05       	cpc	r25, r1
     a22:	09 f4       	brne	.+2      	; 0xa26 <main+0xbc>
     a24:	47 c1       	rjmp	.+654    	; 0xcb4 <main+0x34a>
     a26:	82 30       	cpi	r24, 0x02	; 2
     a28:	91 05       	cpc	r25, r1
     a2a:	24 f4       	brge	.+8      	; 0xa34 <main+0xca>
     a2c:	00 97       	sbiw	r24, 0x00	; 0
     a2e:	59 f1       	breq	.+86     	; 0xa86 <main+0x11c>
     a30:	0c 94 90 13 	jmp	0x2720	; 0x2720 <main+0x1db6>
     a34:	82 30       	cpi	r24, 0x02	; 2
     a36:	91 05       	cpc	r25, r1
     a38:	09 f4       	brne	.+2      	; 0xa3c <main+0xd2>
     a3a:	53 c2       	rjmp	.+1190   	; 0xee2 <main+0x578>
     a3c:	83 30       	cpi	r24, 0x03	; 3
     a3e:	91 05       	cpc	r25, r1
     a40:	09 f4       	brne	.+2      	; 0xa44 <main+0xda>
     a42:	fb c3       	rjmp	.+2038   	; 0x123a <main+0x8d0>
     a44:	0c 94 90 13 	jmp	0x2720	; 0x2720 <main+0x1db6>
     a48:	87 30       	cpi	r24, 0x07	; 7
     a4a:	91 05       	cpc	r25, r1
     a4c:	11 f4       	brne	.+4      	; 0xa52 <main+0xe8>
     a4e:	0c 94 06 10 	jmp	0x200c	; 0x200c <main+0x16a2>
     a52:	88 30       	cpi	r24, 0x08	; 8
     a54:	91 05       	cpc	r25, r1
     a56:	5c f4       	brge	.+22     	; 0xa6e <main+0x104>
     a58:	85 30       	cpi	r24, 0x05	; 5
     a5a:	91 05       	cpc	r25, r1
     a5c:	09 f4       	brne	.+2      	; 0xa60 <main+0xf6>
     a5e:	62 c7       	rjmp	.+3780   	; 0x1924 <main+0xfba>
     a60:	86 30       	cpi	r24, 0x06	; 6
     a62:	91 05       	cpc	r25, r1
     a64:	11 f4       	brne	.+4      	; 0xa6a <main+0x100>
     a66:	0c 94 4c 0e 	jmp	0x1c98	; 0x1c98 <main+0x132e>
     a6a:	0c 94 90 13 	jmp	0x2720	; 0x2720 <main+0x1db6>
     a6e:	88 30       	cpi	r24, 0x08	; 8
     a70:	91 05       	cpc	r25, r1
     a72:	11 f4       	brne	.+4      	; 0xa78 <main+0x10e>
     a74:	0c 94 c0 11 	jmp	0x2380	; 0x2380 <main+0x1a16>
     a78:	89 30       	cpi	r24, 0x09	; 9
     a7a:	91 05       	cpc	r25, r1
     a7c:	11 f4       	brne	.+4      	; 0xa82 <main+0x118>
     a7e:	0c 94 a8 12 	jmp	0x2550	; 0x2550 <main+0x1be6>
     a82:	0c 94 90 13 	jmp	0x2720	; 0x2720 <main+0x1db6>
	{
   case 0: 
			PORTD=arr[a];
     a86:	82 e3       	ldi	r24, 0x32	; 50
     a88:	90 e0       	ldi	r25, 0x00	; 0
     a8a:	29 81       	ldd	r18, Y+1	; 0x01
     a8c:	22 2f       	mov	r18, r18
     a8e:	30 e0       	ldi	r19, 0x00	; 0
     a90:	ae 01       	movw	r20, r28
     a92:	42 50       	subi	r20, 0x02	; 2
     a94:	5f 4f       	sbci	r21, 0xFF	; 255
     a96:	24 0f       	add	r18, r20
     a98:	35 1f       	adc	r19, r21
     a9a:	f9 01       	movw	r30, r18
     a9c:	20 81       	ld	r18, Z
     a9e:	fc 01       	movw	r30, r24
     aa0:	20 83       	st	Z, r18
     aa2:	80 e0       	ldi	r24, 0x00	; 0
     aa4:	90 e0       	ldi	r25, 0x00	; 0
     aa6:	a0 e2       	ldi	r26, 0x20	; 32
     aa8:	b1 e4       	ldi	r27, 0x41	; 65
     aaa:	8a 83       	std	Y+2, r24	; 0x02
     aac:	9b 83       	std	Y+3, r25	; 0x03
     aae:	ac 83       	std	Y+4, r26	; 0x04
     ab0:	bd 83       	std	Y+5, r27	; 0x05
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     ab2:	6a 81       	ldd	r22, Y+2	; 0x02
     ab4:	7b 81       	ldd	r23, Y+3	; 0x03
     ab6:	8c 81       	ldd	r24, Y+4	; 0x04
     ab8:	9d 81       	ldd	r25, Y+5	; 0x05
     aba:	20 e0       	ldi	r18, 0x00	; 0
     abc:	30 e0       	ldi	r19, 0x00	; 0
     abe:	4a e7       	ldi	r20, 0x7A	; 122
     ac0:	53 e4       	ldi	r21, 0x43	; 67
     ac2:	0e 94 14 14 	call	0x2828	; 0x2828 <__mulsf3>
     ac6:	dc 01       	movw	r26, r24
     ac8:	cb 01       	movw	r24, r22
     aca:	8e 83       	std	Y+6, r24	; 0x06
     acc:	9f 83       	std	Y+7, r25	; 0x07
     ace:	a8 87       	std	Y+8, r26	; 0x08
     ad0:	b9 87       	std	Y+9, r27	; 0x09
	if (__tmp < 1.0)
     ad2:	11 e0       	ldi	r17, 0x01	; 1
     ad4:	6e 81       	ldd	r22, Y+6	; 0x06
     ad6:	7f 81       	ldd	r23, Y+7	; 0x07
     ad8:	88 85       	ldd	r24, Y+8	; 0x08
     ada:	99 85       	ldd	r25, Y+9	; 0x09
     adc:	20 e0       	ldi	r18, 0x00	; 0
     ade:	30 e0       	ldi	r19, 0x00	; 0
     ae0:	40 e8       	ldi	r20, 0x80	; 128
     ae2:	5f e3       	ldi	r21, 0x3F	; 63
     ae4:	0e 94 93 13 	call	0x2726	; 0x2726 <__cmpsf2>
     ae8:	88 23       	and	r24, r24
     aea:	0c f0       	brlt	.+2      	; 0xaee <main+0x184>
     aec:	10 e0       	ldi	r17, 0x00	; 0
     aee:	11 23       	and	r17, r17
     af0:	29 f0       	breq	.+10     	; 0xafc <main+0x192>
		__ticks = 1;
     af2:	81 e0       	ldi	r24, 0x01	; 1
     af4:	90 e0       	ldi	r25, 0x00	; 0
     af6:	9b 87       	std	Y+11, r25	; 0x0b
     af8:	8a 87       	std	Y+10, r24	; 0x0a
     afa:	46 c0       	rjmp	.+140    	; 0xb88 <main+0x21e>
	else if (__tmp > 65535)
     afc:	11 e0       	ldi	r17, 0x01	; 1
     afe:	6e 81       	ldd	r22, Y+6	; 0x06
     b00:	7f 81       	ldd	r23, Y+7	; 0x07
     b02:	88 85       	ldd	r24, Y+8	; 0x08
     b04:	99 85       	ldd	r25, Y+9	; 0x09
     b06:	20 e0       	ldi	r18, 0x00	; 0
     b08:	3f ef       	ldi	r19, 0xFF	; 255
     b0a:	4f e7       	ldi	r20, 0x7F	; 127
     b0c:	57 e4       	ldi	r21, 0x47	; 71
     b0e:	0e 94 10 14 	call	0x2820	; 0x2820 <__gesf2>
     b12:	18 16       	cp	r1, r24
     b14:	0c f0       	brlt	.+2      	; 0xb18 <main+0x1ae>
     b16:	10 e0       	ldi	r17, 0x00	; 0
     b18:	11 23       	and	r17, r17
     b1a:	61 f1       	breq	.+88     	; 0xb74 <main+0x20a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     b1c:	6a 81       	ldd	r22, Y+2	; 0x02
     b1e:	7b 81       	ldd	r23, Y+3	; 0x03
     b20:	8c 81       	ldd	r24, Y+4	; 0x04
     b22:	9d 81       	ldd	r25, Y+5	; 0x05
     b24:	20 e0       	ldi	r18, 0x00	; 0
     b26:	30 e0       	ldi	r19, 0x00	; 0
     b28:	40 e2       	ldi	r20, 0x20	; 32
     b2a:	51 e4       	ldi	r21, 0x41	; 65
     b2c:	0e 94 14 14 	call	0x2828	; 0x2828 <__mulsf3>
     b30:	dc 01       	movw	r26, r24
     b32:	cb 01       	movw	r24, r22
     b34:	bc 01       	movw	r22, r24
     b36:	cd 01       	movw	r24, r26
     b38:	0e 94 97 13 	call	0x272e	; 0x272e <__fixunssfsi>
     b3c:	dc 01       	movw	r26, r24
     b3e:	cb 01       	movw	r24, r22
     b40:	9b 87       	std	Y+11, r25	; 0x0b
     b42:	8a 87       	std	Y+10, r24	; 0x0a
     b44:	12 c0       	rjmp	.+36     	; 0xb6a <main+0x200>
     b46:	89 e1       	ldi	r24, 0x19	; 25
     b48:	90 e0       	ldi	r25, 0x00	; 0
     b4a:	9d 87       	std	Y+13, r25	; 0x0d
     b4c:	8c 87       	std	Y+12, r24	; 0x0c
     b4e:	8c 85       	ldd	r24, Y+12	; 0x0c
     b50:	9d 85       	ldd	r25, Y+13	; 0x0d
     b52:	8c 01       	movw	r16, r24
     b54:	c8 01       	movw	r24, r16
     b56:	01 97       	sbiw	r24, 0x01	; 1
     b58:	f1 f7       	brne	.-4      	; 0xb56 <main+0x1ec>
     b5a:	8c 01       	movw	r16, r24
     b5c:	1d 87       	std	Y+13, r17	; 0x0d
     b5e:	0c 87       	std	Y+12, r16	; 0x0c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     b60:	8a 85       	ldd	r24, Y+10	; 0x0a
     b62:	9b 85       	ldd	r25, Y+11	; 0x0b
     b64:	01 97       	sbiw	r24, 0x01	; 1
     b66:	9b 87       	std	Y+11, r25	; 0x0b
     b68:	8a 87       	std	Y+10, r24	; 0x0a
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     b6a:	8a 85       	ldd	r24, Y+10	; 0x0a
     b6c:	9b 85       	ldd	r25, Y+11	; 0x0b
     b6e:	00 97       	sbiw	r24, 0x00	; 0
     b70:	51 f7       	brne	.-44     	; 0xb46 <main+0x1dc>
     b72:	17 c0       	rjmp	.+46     	; 0xba2 <main+0x238>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     b74:	6e 81       	ldd	r22, Y+6	; 0x06
     b76:	7f 81       	ldd	r23, Y+7	; 0x07
     b78:	88 85       	ldd	r24, Y+8	; 0x08
     b7a:	99 85       	ldd	r25, Y+9	; 0x09
     b7c:	0e 94 97 13 	call	0x272e	; 0x272e <__fixunssfsi>
     b80:	dc 01       	movw	r26, r24
     b82:	cb 01       	movw	r24, r22
     b84:	9b 87       	std	Y+11, r25	; 0x0b
     b86:	8a 87       	std	Y+10, r24	; 0x0a
     b88:	8a 85       	ldd	r24, Y+10	; 0x0a
     b8a:	9b 85       	ldd	r25, Y+11	; 0x0b
     b8c:	9f 87       	std	Y+15, r25	; 0x0f
     b8e:	8e 87       	std	Y+14, r24	; 0x0e
     b90:	8e 85       	ldd	r24, Y+14	; 0x0e
     b92:	9f 85       	ldd	r25, Y+15	; 0x0f
     b94:	8c 01       	movw	r16, r24
     b96:	f8 01       	movw	r30, r16
     b98:	31 97       	sbiw	r30, 0x01	; 1
     b9a:	f1 f7       	brne	.-4      	; 0xb98 <main+0x22e>
     b9c:	8f 01       	movw	r16, r30
     b9e:	1f 87       	std	Y+15, r17	; 0x0f
     ba0:	0e 87       	std	Y+14, r16	; 0x0e
			_delay_ms(10);
			writecmd(0xc5);
     ba2:	85 ec       	ldi	r24, 0xC5	; 197
     ba4:	0e 94 52 03 	call	0x6a4	; 0x6a4 <writecmd>
			writestr("KEY 0");
     ba8:	8c e7       	ldi	r24, 0x7C	; 124
     baa:	90 e0       	ldi	r25, 0x00	; 0
     bac:	0e 94 9f 02 	call	0x53e	; 0x53e <writestr>
     bb0:	80 e0       	ldi	r24, 0x00	; 0
     bb2:	90 e0       	ldi	r25, 0x00	; 0
     bb4:	a8 e4       	ldi	r26, 0x48	; 72
     bb6:	b2 e4       	ldi	r27, 0x42	; 66
     bb8:	88 8b       	std	Y+16, r24	; 0x10
     bba:	99 8b       	std	Y+17, r25	; 0x11
     bbc:	aa 8b       	std	Y+18, r26	; 0x12
     bbe:	bb 8b       	std	Y+19, r27	; 0x13
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     bc0:	68 89       	ldd	r22, Y+16	; 0x10
     bc2:	79 89       	ldd	r23, Y+17	; 0x11
     bc4:	8a 89       	ldd	r24, Y+18	; 0x12
     bc6:	9b 89       	ldd	r25, Y+19	; 0x13
     bc8:	20 e0       	ldi	r18, 0x00	; 0
     bca:	30 e0       	ldi	r19, 0x00	; 0
     bcc:	4a e7       	ldi	r20, 0x7A	; 122
     bce:	53 e4       	ldi	r21, 0x43	; 67
     bd0:	0e 94 14 14 	call	0x2828	; 0x2828 <__mulsf3>
     bd4:	dc 01       	movw	r26, r24
     bd6:	cb 01       	movw	r24, r22
     bd8:	8c 8b       	std	Y+20, r24	; 0x14
     bda:	9d 8b       	std	Y+21, r25	; 0x15
     bdc:	ae 8b       	std	Y+22, r26	; 0x16
     bde:	bf 8b       	std	Y+23, r27	; 0x17
	if (__tmp < 1.0)
     be0:	11 e0       	ldi	r17, 0x01	; 1
     be2:	6c 89       	ldd	r22, Y+20	; 0x14
     be4:	7d 89       	ldd	r23, Y+21	; 0x15
     be6:	8e 89       	ldd	r24, Y+22	; 0x16
     be8:	9f 89       	ldd	r25, Y+23	; 0x17
     bea:	20 e0       	ldi	r18, 0x00	; 0
     bec:	30 e0       	ldi	r19, 0x00	; 0
     bee:	40 e8       	ldi	r20, 0x80	; 128
     bf0:	5f e3       	ldi	r21, 0x3F	; 63
     bf2:	0e 94 93 13 	call	0x2726	; 0x2726 <__cmpsf2>
     bf6:	88 23       	and	r24, r24
     bf8:	0c f0       	brlt	.+2      	; 0xbfc <main+0x292>
     bfa:	10 e0       	ldi	r17, 0x00	; 0
     bfc:	11 23       	and	r17, r17
     bfe:	29 f0       	breq	.+10     	; 0xc0a <main+0x2a0>
		__ticks = 1;
     c00:	81 e0       	ldi	r24, 0x01	; 1
     c02:	90 e0       	ldi	r25, 0x00	; 0
     c04:	99 8f       	std	Y+25, r25	; 0x19
     c06:	88 8f       	std	Y+24, r24	; 0x18
     c08:	46 c0       	rjmp	.+140    	; 0xc96 <main+0x32c>
	else if (__tmp > 65535)
     c0a:	11 e0       	ldi	r17, 0x01	; 1
     c0c:	6c 89       	ldd	r22, Y+20	; 0x14
     c0e:	7d 89       	ldd	r23, Y+21	; 0x15
     c10:	8e 89       	ldd	r24, Y+22	; 0x16
     c12:	9f 89       	ldd	r25, Y+23	; 0x17
     c14:	20 e0       	ldi	r18, 0x00	; 0
     c16:	3f ef       	ldi	r19, 0xFF	; 255
     c18:	4f e7       	ldi	r20, 0x7F	; 127
     c1a:	57 e4       	ldi	r21, 0x47	; 71
     c1c:	0e 94 10 14 	call	0x2820	; 0x2820 <__gesf2>
     c20:	18 16       	cp	r1, r24
     c22:	0c f0       	brlt	.+2      	; 0xc26 <main+0x2bc>
     c24:	10 e0       	ldi	r17, 0x00	; 0
     c26:	11 23       	and	r17, r17
     c28:	61 f1       	breq	.+88     	; 0xc82 <main+0x318>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     c2a:	68 89       	ldd	r22, Y+16	; 0x10
     c2c:	79 89       	ldd	r23, Y+17	; 0x11
     c2e:	8a 89       	ldd	r24, Y+18	; 0x12
     c30:	9b 89       	ldd	r25, Y+19	; 0x13
     c32:	20 e0       	ldi	r18, 0x00	; 0
     c34:	30 e0       	ldi	r19, 0x00	; 0
     c36:	40 e2       	ldi	r20, 0x20	; 32
     c38:	51 e4       	ldi	r21, 0x41	; 65
     c3a:	0e 94 14 14 	call	0x2828	; 0x2828 <__mulsf3>
     c3e:	dc 01       	movw	r26, r24
     c40:	cb 01       	movw	r24, r22
     c42:	bc 01       	movw	r22, r24
     c44:	cd 01       	movw	r24, r26
     c46:	0e 94 97 13 	call	0x272e	; 0x272e <__fixunssfsi>
     c4a:	dc 01       	movw	r26, r24
     c4c:	cb 01       	movw	r24, r22
     c4e:	99 8f       	std	Y+25, r25	; 0x19
     c50:	88 8f       	std	Y+24, r24	; 0x18
     c52:	12 c0       	rjmp	.+36     	; 0xc78 <main+0x30e>
     c54:	89 e1       	ldi	r24, 0x19	; 25
     c56:	90 e0       	ldi	r25, 0x00	; 0
     c58:	9b 8f       	std	Y+27, r25	; 0x1b
     c5a:	8a 8f       	std	Y+26, r24	; 0x1a
     c5c:	8a 8d       	ldd	r24, Y+26	; 0x1a
     c5e:	9b 8d       	ldd	r25, Y+27	; 0x1b
     c60:	8c 01       	movw	r16, r24
     c62:	c8 01       	movw	r24, r16
     c64:	01 97       	sbiw	r24, 0x01	; 1
     c66:	f1 f7       	brne	.-4      	; 0xc64 <main+0x2fa>
     c68:	8c 01       	movw	r16, r24
     c6a:	1b 8f       	std	Y+27, r17	; 0x1b
     c6c:	0a 8f       	std	Y+26, r16	; 0x1a
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     c6e:	88 8d       	ldd	r24, Y+24	; 0x18
     c70:	99 8d       	ldd	r25, Y+25	; 0x19
     c72:	01 97       	sbiw	r24, 0x01	; 1
     c74:	99 8f       	std	Y+25, r25	; 0x19
     c76:	88 8f       	std	Y+24, r24	; 0x18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     c78:	88 8d       	ldd	r24, Y+24	; 0x18
     c7a:	99 8d       	ldd	r25, Y+25	; 0x19
     c7c:	00 97       	sbiw	r24, 0x00	; 0
     c7e:	51 f7       	brne	.-44     	; 0xc54 <main+0x2ea>
     c80:	17 c0       	rjmp	.+46     	; 0xcb0 <main+0x346>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     c82:	6c 89       	ldd	r22, Y+20	; 0x14
     c84:	7d 89       	ldd	r23, Y+21	; 0x15
     c86:	8e 89       	ldd	r24, Y+22	; 0x16
     c88:	9f 89       	ldd	r25, Y+23	; 0x17
     c8a:	0e 94 97 13 	call	0x272e	; 0x272e <__fixunssfsi>
     c8e:	dc 01       	movw	r26, r24
     c90:	cb 01       	movw	r24, r22
     c92:	99 8f       	std	Y+25, r25	; 0x19
     c94:	88 8f       	std	Y+24, r24	; 0x18
     c96:	88 8d       	ldd	r24, Y+24	; 0x18
     c98:	99 8d       	ldd	r25, Y+25	; 0x19
     c9a:	9d 8f       	std	Y+29, r25	; 0x1d
     c9c:	8c 8f       	std	Y+28, r24	; 0x1c
     c9e:	8c 8d       	ldd	r24, Y+28	; 0x1c
     ca0:	9d 8d       	ldd	r25, Y+29	; 0x1d
     ca2:	8c 01       	movw	r16, r24
     ca4:	f8 01       	movw	r30, r16
     ca6:	31 97       	sbiw	r30, 0x01	; 1
     ca8:	f1 f7       	brne	.-4      	; 0xca6 <main+0x33c>
     caa:	8f 01       	movw	r16, r30
     cac:	1d 8f       	std	Y+29, r17	; 0x1d
     cae:	0c 8f       	std	Y+28, r16	; 0x1c
			_delay_ms(50);
			break;
     cb0:	0c 94 91 13 	jmp	0x2722	; 0x2722 <main+0x1db8>
	case 1: writecmd(0xc5);
     cb4:	85 ec       	ldi	r24, 0xC5	; 197
     cb6:	0e 94 52 03 	call	0x6a4	; 0x6a4 <writecmd>
		PORTD=arr[a];
     cba:	82 e3       	ldi	r24, 0x32	; 50
     cbc:	90 e0       	ldi	r25, 0x00	; 0
     cbe:	29 81       	ldd	r18, Y+1	; 0x01
     cc0:	22 2f       	mov	r18, r18
     cc2:	30 e0       	ldi	r19, 0x00	; 0
     cc4:	ae 01       	movw	r20, r28
     cc6:	42 50       	subi	r20, 0x02	; 2
     cc8:	5f 4f       	sbci	r21, 0xFF	; 255
     cca:	24 0f       	add	r18, r20
     ccc:	35 1f       	adc	r19, r21
     cce:	f9 01       	movw	r30, r18
     cd0:	20 81       	ld	r18, Z
     cd2:	fc 01       	movw	r30, r24
     cd4:	20 83       	st	Z, r18
     cd6:	80 e0       	ldi	r24, 0x00	; 0
     cd8:	90 e0       	ldi	r25, 0x00	; 0
     cda:	a0 e2       	ldi	r26, 0x20	; 32
     cdc:	b1 e4       	ldi	r27, 0x41	; 65
     cde:	8e 8f       	std	Y+30, r24	; 0x1e
     ce0:	9f 8f       	std	Y+31, r25	; 0x1f
     ce2:	a8 a3       	std	Y+32, r26	; 0x20
     ce4:	b9 a3       	std	Y+33, r27	; 0x21
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     ce6:	6e 8d       	ldd	r22, Y+30	; 0x1e
     ce8:	7f 8d       	ldd	r23, Y+31	; 0x1f
     cea:	88 a1       	ldd	r24, Y+32	; 0x20
     cec:	99 a1       	ldd	r25, Y+33	; 0x21
     cee:	20 e0       	ldi	r18, 0x00	; 0
     cf0:	30 e0       	ldi	r19, 0x00	; 0
     cf2:	4a e7       	ldi	r20, 0x7A	; 122
     cf4:	53 e4       	ldi	r21, 0x43	; 67
     cf6:	0e 94 14 14 	call	0x2828	; 0x2828 <__mulsf3>
     cfa:	dc 01       	movw	r26, r24
     cfc:	cb 01       	movw	r24, r22
     cfe:	8a a3       	std	Y+34, r24	; 0x22
     d00:	9b a3       	std	Y+35, r25	; 0x23
     d02:	ac a3       	std	Y+36, r26	; 0x24
     d04:	bd a3       	std	Y+37, r27	; 0x25
	if (__tmp < 1.0)
     d06:	11 e0       	ldi	r17, 0x01	; 1
     d08:	6a a1       	ldd	r22, Y+34	; 0x22
     d0a:	7b a1       	ldd	r23, Y+35	; 0x23
     d0c:	8c a1       	ldd	r24, Y+36	; 0x24
     d0e:	9d a1       	ldd	r25, Y+37	; 0x25
     d10:	20 e0       	ldi	r18, 0x00	; 0
     d12:	30 e0       	ldi	r19, 0x00	; 0
     d14:	40 e8       	ldi	r20, 0x80	; 128
     d16:	5f e3       	ldi	r21, 0x3F	; 63
     d18:	0e 94 93 13 	call	0x2726	; 0x2726 <__cmpsf2>
     d1c:	88 23       	and	r24, r24
     d1e:	0c f0       	brlt	.+2      	; 0xd22 <main+0x3b8>
     d20:	10 e0       	ldi	r17, 0x00	; 0
     d22:	11 23       	and	r17, r17
     d24:	29 f0       	breq	.+10     	; 0xd30 <main+0x3c6>
		__ticks = 1;
     d26:	81 e0       	ldi	r24, 0x01	; 1
     d28:	90 e0       	ldi	r25, 0x00	; 0
     d2a:	9f a3       	std	Y+39, r25	; 0x27
     d2c:	8e a3       	std	Y+38, r24	; 0x26
     d2e:	46 c0       	rjmp	.+140    	; 0xdbc <main+0x452>
	else if (__tmp > 65535)
     d30:	11 e0       	ldi	r17, 0x01	; 1
     d32:	6a a1       	ldd	r22, Y+34	; 0x22
     d34:	7b a1       	ldd	r23, Y+35	; 0x23
     d36:	8c a1       	ldd	r24, Y+36	; 0x24
     d38:	9d a1       	ldd	r25, Y+37	; 0x25
     d3a:	20 e0       	ldi	r18, 0x00	; 0
     d3c:	3f ef       	ldi	r19, 0xFF	; 255
     d3e:	4f e7       	ldi	r20, 0x7F	; 127
     d40:	57 e4       	ldi	r21, 0x47	; 71
     d42:	0e 94 10 14 	call	0x2820	; 0x2820 <__gesf2>
     d46:	18 16       	cp	r1, r24
     d48:	0c f0       	brlt	.+2      	; 0xd4c <main+0x3e2>
     d4a:	10 e0       	ldi	r17, 0x00	; 0
     d4c:	11 23       	and	r17, r17
     d4e:	61 f1       	breq	.+88     	; 0xda8 <main+0x43e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     d50:	6e 8d       	ldd	r22, Y+30	; 0x1e
     d52:	7f 8d       	ldd	r23, Y+31	; 0x1f
     d54:	88 a1       	ldd	r24, Y+32	; 0x20
     d56:	99 a1       	ldd	r25, Y+33	; 0x21
     d58:	20 e0       	ldi	r18, 0x00	; 0
     d5a:	30 e0       	ldi	r19, 0x00	; 0
     d5c:	40 e2       	ldi	r20, 0x20	; 32
     d5e:	51 e4       	ldi	r21, 0x41	; 65
     d60:	0e 94 14 14 	call	0x2828	; 0x2828 <__mulsf3>
     d64:	dc 01       	movw	r26, r24
     d66:	cb 01       	movw	r24, r22
     d68:	bc 01       	movw	r22, r24
     d6a:	cd 01       	movw	r24, r26
     d6c:	0e 94 97 13 	call	0x272e	; 0x272e <__fixunssfsi>
     d70:	dc 01       	movw	r26, r24
     d72:	cb 01       	movw	r24, r22
     d74:	9f a3       	std	Y+39, r25	; 0x27
     d76:	8e a3       	std	Y+38, r24	; 0x26
     d78:	12 c0       	rjmp	.+36     	; 0xd9e <main+0x434>
     d7a:	89 e1       	ldi	r24, 0x19	; 25
     d7c:	90 e0       	ldi	r25, 0x00	; 0
     d7e:	99 a7       	std	Y+41, r25	; 0x29
     d80:	88 a7       	std	Y+40, r24	; 0x28
     d82:	88 a5       	ldd	r24, Y+40	; 0x28
     d84:	99 a5       	ldd	r25, Y+41	; 0x29
     d86:	8c 01       	movw	r16, r24
     d88:	c8 01       	movw	r24, r16
     d8a:	01 97       	sbiw	r24, 0x01	; 1
     d8c:	f1 f7       	brne	.-4      	; 0xd8a <main+0x420>
     d8e:	8c 01       	movw	r16, r24
     d90:	19 a7       	std	Y+41, r17	; 0x29
     d92:	08 a7       	std	Y+40, r16	; 0x28
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     d94:	8e a1       	ldd	r24, Y+38	; 0x26
     d96:	9f a1       	ldd	r25, Y+39	; 0x27
     d98:	01 97       	sbiw	r24, 0x01	; 1
     d9a:	9f a3       	std	Y+39, r25	; 0x27
     d9c:	8e a3       	std	Y+38, r24	; 0x26
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     d9e:	8e a1       	ldd	r24, Y+38	; 0x26
     da0:	9f a1       	ldd	r25, Y+39	; 0x27
     da2:	00 97       	sbiw	r24, 0x00	; 0
     da4:	51 f7       	brne	.-44     	; 0xd7a <main+0x410>
     da6:	17 c0       	rjmp	.+46     	; 0xdd6 <main+0x46c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     da8:	6a a1       	ldd	r22, Y+34	; 0x22
     daa:	7b a1       	ldd	r23, Y+35	; 0x23
     dac:	8c a1       	ldd	r24, Y+36	; 0x24
     dae:	9d a1       	ldd	r25, Y+37	; 0x25
     db0:	0e 94 97 13 	call	0x272e	; 0x272e <__fixunssfsi>
     db4:	dc 01       	movw	r26, r24
     db6:	cb 01       	movw	r24, r22
     db8:	9f a3       	std	Y+39, r25	; 0x27
     dba:	8e a3       	std	Y+38, r24	; 0x26
     dbc:	8e a1       	ldd	r24, Y+38	; 0x26
     dbe:	9f a1       	ldd	r25, Y+39	; 0x27
     dc0:	9b a7       	std	Y+43, r25	; 0x2b
     dc2:	8a a7       	std	Y+42, r24	; 0x2a
     dc4:	8a a5       	ldd	r24, Y+42	; 0x2a
     dc6:	9b a5       	ldd	r25, Y+43	; 0x2b
     dc8:	8c 01       	movw	r16, r24
     dca:	f8 01       	movw	r30, r16
     dcc:	31 97       	sbiw	r30, 0x01	; 1
     dce:	f1 f7       	brne	.-4      	; 0xdcc <main+0x462>
     dd0:	8f 01       	movw	r16, r30
     dd2:	1b a7       	std	Y+43, r17	; 0x2b
     dd4:	0a a7       	std	Y+42, r16	; 0x2a
		_delay_ms(10);
			writestr("KEY 1");
     dd6:	82 e8       	ldi	r24, 0x82	; 130
     dd8:	90 e0       	ldi	r25, 0x00	; 0
     dda:	0e 94 9f 02 	call	0x53e	; 0x53e <writestr>
     dde:	80 e0       	ldi	r24, 0x00	; 0
     de0:	90 e0       	ldi	r25, 0x00	; 0
     de2:	a8 e4       	ldi	r26, 0x48	; 72
     de4:	b2 e4       	ldi	r27, 0x42	; 66
     de6:	8c a7       	std	Y+44, r24	; 0x2c
     de8:	9d a7       	std	Y+45, r25	; 0x2d
     dea:	ae a7       	std	Y+46, r26	; 0x2e
     dec:	bf a7       	std	Y+47, r27	; 0x2f
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     dee:	6c a5       	ldd	r22, Y+44	; 0x2c
     df0:	7d a5       	ldd	r23, Y+45	; 0x2d
     df2:	8e a5       	ldd	r24, Y+46	; 0x2e
     df4:	9f a5       	ldd	r25, Y+47	; 0x2f
     df6:	20 e0       	ldi	r18, 0x00	; 0
     df8:	30 e0       	ldi	r19, 0x00	; 0
     dfa:	4a e7       	ldi	r20, 0x7A	; 122
     dfc:	53 e4       	ldi	r21, 0x43	; 67
     dfe:	0e 94 14 14 	call	0x2828	; 0x2828 <__mulsf3>
     e02:	dc 01       	movw	r26, r24
     e04:	cb 01       	movw	r24, r22
     e06:	88 ab       	std	Y+48, r24	; 0x30
     e08:	99 ab       	std	Y+49, r25	; 0x31
     e0a:	aa ab       	std	Y+50, r26	; 0x32
     e0c:	bb ab       	std	Y+51, r27	; 0x33
	if (__tmp < 1.0)
     e0e:	11 e0       	ldi	r17, 0x01	; 1
     e10:	68 a9       	ldd	r22, Y+48	; 0x30
     e12:	79 a9       	ldd	r23, Y+49	; 0x31
     e14:	8a a9       	ldd	r24, Y+50	; 0x32
     e16:	9b a9       	ldd	r25, Y+51	; 0x33
     e18:	20 e0       	ldi	r18, 0x00	; 0
     e1a:	30 e0       	ldi	r19, 0x00	; 0
     e1c:	40 e8       	ldi	r20, 0x80	; 128
     e1e:	5f e3       	ldi	r21, 0x3F	; 63
     e20:	0e 94 93 13 	call	0x2726	; 0x2726 <__cmpsf2>
     e24:	88 23       	and	r24, r24
     e26:	0c f0       	brlt	.+2      	; 0xe2a <main+0x4c0>
     e28:	10 e0       	ldi	r17, 0x00	; 0
     e2a:	11 23       	and	r17, r17
     e2c:	29 f0       	breq	.+10     	; 0xe38 <main+0x4ce>
		__ticks = 1;
     e2e:	81 e0       	ldi	r24, 0x01	; 1
     e30:	90 e0       	ldi	r25, 0x00	; 0
     e32:	9d ab       	std	Y+53, r25	; 0x35
     e34:	8c ab       	std	Y+52, r24	; 0x34
     e36:	46 c0       	rjmp	.+140    	; 0xec4 <main+0x55a>
	else if (__tmp > 65535)
     e38:	11 e0       	ldi	r17, 0x01	; 1
     e3a:	68 a9       	ldd	r22, Y+48	; 0x30
     e3c:	79 a9       	ldd	r23, Y+49	; 0x31
     e3e:	8a a9       	ldd	r24, Y+50	; 0x32
     e40:	9b a9       	ldd	r25, Y+51	; 0x33
     e42:	20 e0       	ldi	r18, 0x00	; 0
     e44:	3f ef       	ldi	r19, 0xFF	; 255
     e46:	4f e7       	ldi	r20, 0x7F	; 127
     e48:	57 e4       	ldi	r21, 0x47	; 71
     e4a:	0e 94 10 14 	call	0x2820	; 0x2820 <__gesf2>
     e4e:	18 16       	cp	r1, r24
     e50:	0c f0       	brlt	.+2      	; 0xe54 <main+0x4ea>
     e52:	10 e0       	ldi	r17, 0x00	; 0
     e54:	11 23       	and	r17, r17
     e56:	61 f1       	breq	.+88     	; 0xeb0 <main+0x546>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     e58:	6c a5       	ldd	r22, Y+44	; 0x2c
     e5a:	7d a5       	ldd	r23, Y+45	; 0x2d
     e5c:	8e a5       	ldd	r24, Y+46	; 0x2e
     e5e:	9f a5       	ldd	r25, Y+47	; 0x2f
     e60:	20 e0       	ldi	r18, 0x00	; 0
     e62:	30 e0       	ldi	r19, 0x00	; 0
     e64:	40 e2       	ldi	r20, 0x20	; 32
     e66:	51 e4       	ldi	r21, 0x41	; 65
     e68:	0e 94 14 14 	call	0x2828	; 0x2828 <__mulsf3>
     e6c:	dc 01       	movw	r26, r24
     e6e:	cb 01       	movw	r24, r22
     e70:	bc 01       	movw	r22, r24
     e72:	cd 01       	movw	r24, r26
     e74:	0e 94 97 13 	call	0x272e	; 0x272e <__fixunssfsi>
     e78:	dc 01       	movw	r26, r24
     e7a:	cb 01       	movw	r24, r22
     e7c:	9d ab       	std	Y+53, r25	; 0x35
     e7e:	8c ab       	std	Y+52, r24	; 0x34
     e80:	12 c0       	rjmp	.+36     	; 0xea6 <main+0x53c>
     e82:	89 e1       	ldi	r24, 0x19	; 25
     e84:	90 e0       	ldi	r25, 0x00	; 0
     e86:	9f ab       	std	Y+55, r25	; 0x37
     e88:	8e ab       	std	Y+54, r24	; 0x36
     e8a:	8e a9       	ldd	r24, Y+54	; 0x36
     e8c:	9f a9       	ldd	r25, Y+55	; 0x37
     e8e:	8c 01       	movw	r16, r24
     e90:	c8 01       	movw	r24, r16
     e92:	01 97       	sbiw	r24, 0x01	; 1
     e94:	f1 f7       	brne	.-4      	; 0xe92 <main+0x528>
     e96:	8c 01       	movw	r16, r24
     e98:	1f ab       	std	Y+55, r17	; 0x37
     e9a:	0e ab       	std	Y+54, r16	; 0x36
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     e9c:	8c a9       	ldd	r24, Y+52	; 0x34
     e9e:	9d a9       	ldd	r25, Y+53	; 0x35
     ea0:	01 97       	sbiw	r24, 0x01	; 1
     ea2:	9d ab       	std	Y+53, r25	; 0x35
     ea4:	8c ab       	std	Y+52, r24	; 0x34
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     ea6:	8c a9       	ldd	r24, Y+52	; 0x34
     ea8:	9d a9       	ldd	r25, Y+53	; 0x35
     eaa:	00 97       	sbiw	r24, 0x00	; 0
     eac:	51 f7       	brne	.-44     	; 0xe82 <main+0x518>
     eae:	17 c0       	rjmp	.+46     	; 0xede <main+0x574>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     eb0:	68 a9       	ldd	r22, Y+48	; 0x30
     eb2:	79 a9       	ldd	r23, Y+49	; 0x31
     eb4:	8a a9       	ldd	r24, Y+50	; 0x32
     eb6:	9b a9       	ldd	r25, Y+51	; 0x33
     eb8:	0e 94 97 13 	call	0x272e	; 0x272e <__fixunssfsi>
     ebc:	dc 01       	movw	r26, r24
     ebe:	cb 01       	movw	r24, r22
     ec0:	9d ab       	std	Y+53, r25	; 0x35
     ec2:	8c ab       	std	Y+52, r24	; 0x34
     ec4:	8c a9       	ldd	r24, Y+52	; 0x34
     ec6:	9d a9       	ldd	r25, Y+53	; 0x35
     ec8:	99 af       	std	Y+57, r25	; 0x39
     eca:	88 af       	std	Y+56, r24	; 0x38
     ecc:	88 ad       	ldd	r24, Y+56	; 0x38
     ece:	99 ad       	ldd	r25, Y+57	; 0x39
     ed0:	8c 01       	movw	r16, r24
     ed2:	f8 01       	movw	r30, r16
     ed4:	31 97       	sbiw	r30, 0x01	; 1
     ed6:	f1 f7       	brne	.-4      	; 0xed4 <main+0x56a>
     ed8:	8f 01       	movw	r16, r30
     eda:	19 af       	std	Y+57, r17	; 0x39
     edc:	08 af       	std	Y+56, r16	; 0x38
			_delay_ms(50);
			break;
     ede:	0c 94 91 13 	jmp	0x2722	; 0x2722 <main+0x1db8>
	case 2: writecmd(0xc5);
     ee2:	85 ec       	ldi	r24, 0xC5	; 197
     ee4:	0e 94 52 03 	call	0x6a4	; 0x6a4 <writecmd>
		PORTD=arr[a];
     ee8:	82 e3       	ldi	r24, 0x32	; 50
     eea:	90 e0       	ldi	r25, 0x00	; 0
     eec:	29 81       	ldd	r18, Y+1	; 0x01
     eee:	22 2f       	mov	r18, r18
     ef0:	30 e0       	ldi	r19, 0x00	; 0
     ef2:	ae 01       	movw	r20, r28
     ef4:	42 50       	subi	r20, 0x02	; 2
     ef6:	5f 4f       	sbci	r21, 0xFF	; 255
     ef8:	24 0f       	add	r18, r20
     efa:	35 1f       	adc	r19, r21
     efc:	f9 01       	movw	r30, r18
     efe:	20 81       	ld	r18, Z
     f00:	fc 01       	movw	r30, r24
     f02:	20 83       	st	Z, r18
     f04:	80 e0       	ldi	r24, 0x00	; 0
     f06:	90 e0       	ldi	r25, 0x00	; 0
     f08:	a0 e2       	ldi	r26, 0x20	; 32
     f0a:	b1 e4       	ldi	r27, 0x41	; 65
     f0c:	8a af       	std	Y+58, r24	; 0x3a
     f0e:	9b af       	std	Y+59, r25	; 0x3b
     f10:	ac af       	std	Y+60, r26	; 0x3c
     f12:	bd af       	std	Y+61, r27	; 0x3d
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     f14:	8e 01       	movw	r16, r28
     f16:	02 5c       	subi	r16, 0xC2	; 194
     f18:	1f 4f       	sbci	r17, 0xFF	; 255
     f1a:	6a ad       	ldd	r22, Y+58	; 0x3a
     f1c:	7b ad       	ldd	r23, Y+59	; 0x3b
     f1e:	8c ad       	ldd	r24, Y+60	; 0x3c
     f20:	9d ad       	ldd	r25, Y+61	; 0x3d
     f22:	20 e0       	ldi	r18, 0x00	; 0
     f24:	30 e0       	ldi	r19, 0x00	; 0
     f26:	4a e7       	ldi	r20, 0x7A	; 122
     f28:	53 e4       	ldi	r21, 0x43	; 67
     f2a:	0e 94 14 14 	call	0x2828	; 0x2828 <__mulsf3>
     f2e:	dc 01       	movw	r26, r24
     f30:	cb 01       	movw	r24, r22
     f32:	f8 01       	movw	r30, r16
     f34:	80 83       	st	Z, r24
     f36:	91 83       	std	Z+1, r25	; 0x01
     f38:	a2 83       	std	Z+2, r26	; 0x02
     f3a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     f3c:	ce 01       	movw	r24, r28
     f3e:	ce 96       	adiw	r24, 0x3e	; 62
     f40:	11 e0       	ldi	r17, 0x01	; 1
     f42:	fc 01       	movw	r30, r24
     f44:	60 81       	ld	r22, Z
     f46:	71 81       	ldd	r23, Z+1	; 0x01
     f48:	82 81       	ldd	r24, Z+2	; 0x02
     f4a:	93 81       	ldd	r25, Z+3	; 0x03
     f4c:	20 e0       	ldi	r18, 0x00	; 0
     f4e:	30 e0       	ldi	r19, 0x00	; 0
     f50:	40 e8       	ldi	r20, 0x80	; 128
     f52:	5f e3       	ldi	r21, 0x3F	; 63
     f54:	0e 94 93 13 	call	0x2726	; 0x2726 <__cmpsf2>
     f58:	88 23       	and	r24, r24
     f5a:	0c f0       	brlt	.+2      	; 0xf5e <main+0x5f4>
     f5c:	10 e0       	ldi	r17, 0x00	; 0
     f5e:	11 23       	and	r17, r17
     f60:	49 f0       	breq	.+18     	; 0xf74 <main+0x60a>
		__ticks = 1;
     f62:	ce 01       	movw	r24, r28
     f64:	8e 5b       	subi	r24, 0xBE	; 190
     f66:	9f 4f       	sbci	r25, 0xFF	; 255
     f68:	21 e0       	ldi	r18, 0x01	; 1
     f6a:	30 e0       	ldi	r19, 0x00	; 0
     f6c:	fc 01       	movw	r30, r24
     f6e:	31 83       	std	Z+1, r19	; 0x01
     f70:	20 83       	st	Z, r18
     f72:	6e c0       	rjmp	.+220    	; 0x1050 <main+0x6e6>
	else if (__tmp > 65535)
     f74:	ce 01       	movw	r24, r28
     f76:	ce 96       	adiw	r24, 0x3e	; 62
     f78:	11 e0       	ldi	r17, 0x01	; 1
     f7a:	fc 01       	movw	r30, r24
     f7c:	60 81       	ld	r22, Z
     f7e:	71 81       	ldd	r23, Z+1	; 0x01
     f80:	82 81       	ldd	r24, Z+2	; 0x02
     f82:	93 81       	ldd	r25, Z+3	; 0x03
     f84:	20 e0       	ldi	r18, 0x00	; 0
     f86:	3f ef       	ldi	r19, 0xFF	; 255
     f88:	4f e7       	ldi	r20, 0x7F	; 127
     f8a:	57 e4       	ldi	r21, 0x47	; 71
     f8c:	0e 94 10 14 	call	0x2820	; 0x2820 <__gesf2>
     f90:	18 16       	cp	r1, r24
     f92:	0c f0       	brlt	.+2      	; 0xf96 <main+0x62c>
     f94:	10 e0       	ldi	r17, 0x00	; 0
     f96:	11 23       	and	r17, r17
     f98:	09 f4       	brne	.+2      	; 0xf9c <main+0x632>
     f9a:	49 c0       	rjmp	.+146    	; 0x102e <main+0x6c4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     f9c:	6a ad       	ldd	r22, Y+58	; 0x3a
     f9e:	7b ad       	ldd	r23, Y+59	; 0x3b
     fa0:	8c ad       	ldd	r24, Y+60	; 0x3c
     fa2:	9d ad       	ldd	r25, Y+61	; 0x3d
     fa4:	20 e0       	ldi	r18, 0x00	; 0
     fa6:	30 e0       	ldi	r19, 0x00	; 0
     fa8:	40 e2       	ldi	r20, 0x20	; 32
     faa:	51 e4       	ldi	r21, 0x41	; 65
     fac:	0e 94 14 14 	call	0x2828	; 0x2828 <__mulsf3>
     fb0:	dc 01       	movw	r26, r24
     fb2:	cb 01       	movw	r24, r22
     fb4:	8e 01       	movw	r16, r28
     fb6:	0e 5b       	subi	r16, 0xBE	; 190
     fb8:	1f 4f       	sbci	r17, 0xFF	; 255
     fba:	bc 01       	movw	r22, r24
     fbc:	cd 01       	movw	r24, r26
     fbe:	0e 94 97 13 	call	0x272e	; 0x272e <__fixunssfsi>
     fc2:	dc 01       	movw	r26, r24
     fc4:	cb 01       	movw	r24, r22
     fc6:	f8 01       	movw	r30, r16
     fc8:	91 83       	std	Z+1, r25	; 0x01
     fca:	80 83       	st	Z, r24
     fcc:	27 c0       	rjmp	.+78     	; 0x101c <main+0x6b2>
     fce:	ce 01       	movw	r24, r28
     fd0:	8c 5b       	subi	r24, 0xBC	; 188
     fd2:	9f 4f       	sbci	r25, 0xFF	; 255
     fd4:	29 e1       	ldi	r18, 0x19	; 25
     fd6:	30 e0       	ldi	r19, 0x00	; 0
     fd8:	fc 01       	movw	r30, r24
     fda:	31 83       	std	Z+1, r19	; 0x01
     fdc:	20 83       	st	Z, r18
     fde:	ce 01       	movw	r24, r28
     fe0:	8c 5b       	subi	r24, 0xBC	; 188
     fe2:	9f 4f       	sbci	r25, 0xFF	; 255
     fe4:	fc 01       	movw	r30, r24
     fe6:	80 81       	ld	r24, Z
     fe8:	91 81       	ldd	r25, Z+1	; 0x01
     fea:	8c 01       	movw	r16, r24
     fec:	c8 01       	movw	r24, r16
     fee:	01 97       	sbiw	r24, 0x01	; 1
     ff0:	f1 f7       	brne	.-4      	; 0xfee <main+0x684>
     ff2:	8c 01       	movw	r16, r24
     ff4:	ce 01       	movw	r24, r28
     ff6:	8c 5b       	subi	r24, 0xBC	; 188
     ff8:	9f 4f       	sbci	r25, 0xFF	; 255
     ffa:	fc 01       	movw	r30, r24
     ffc:	11 83       	std	Z+1, r17	; 0x01
     ffe:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1000:	ce 01       	movw	r24, r28
    1002:	8e 5b       	subi	r24, 0xBE	; 190
    1004:	9f 4f       	sbci	r25, 0xFF	; 255
    1006:	9e 01       	movw	r18, r28
    1008:	2e 5b       	subi	r18, 0xBE	; 190
    100a:	3f 4f       	sbci	r19, 0xFF	; 255
    100c:	f9 01       	movw	r30, r18
    100e:	20 81       	ld	r18, Z
    1010:	31 81       	ldd	r19, Z+1	; 0x01
    1012:	21 50       	subi	r18, 0x01	; 1
    1014:	30 40       	sbci	r19, 0x00	; 0
    1016:	fc 01       	movw	r30, r24
    1018:	31 83       	std	Z+1, r19	; 0x01
    101a:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    101c:	ce 01       	movw	r24, r28
    101e:	8e 5b       	subi	r24, 0xBE	; 190
    1020:	9f 4f       	sbci	r25, 0xFF	; 255
    1022:	fc 01       	movw	r30, r24
    1024:	80 81       	ld	r24, Z
    1026:	91 81       	ldd	r25, Z+1	; 0x01
    1028:	00 97       	sbiw	r24, 0x00	; 0
    102a:	89 f6       	brne	.-94     	; 0xfce <main+0x664>
    102c:	2e c0       	rjmp	.+92     	; 0x108a <main+0x720>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    102e:	8e 01       	movw	r16, r28
    1030:	0e 5b       	subi	r16, 0xBE	; 190
    1032:	1f 4f       	sbci	r17, 0xFF	; 255
    1034:	ce 01       	movw	r24, r28
    1036:	ce 96       	adiw	r24, 0x3e	; 62
    1038:	fc 01       	movw	r30, r24
    103a:	60 81       	ld	r22, Z
    103c:	71 81       	ldd	r23, Z+1	; 0x01
    103e:	82 81       	ldd	r24, Z+2	; 0x02
    1040:	93 81       	ldd	r25, Z+3	; 0x03
    1042:	0e 94 97 13 	call	0x272e	; 0x272e <__fixunssfsi>
    1046:	dc 01       	movw	r26, r24
    1048:	cb 01       	movw	r24, r22
    104a:	f8 01       	movw	r30, r16
    104c:	91 83       	std	Z+1, r25	; 0x01
    104e:	80 83       	st	Z, r24
    1050:	ce 01       	movw	r24, r28
    1052:	8a 5b       	subi	r24, 0xBA	; 186
    1054:	9f 4f       	sbci	r25, 0xFF	; 255
    1056:	9e 01       	movw	r18, r28
    1058:	2e 5b       	subi	r18, 0xBE	; 190
    105a:	3f 4f       	sbci	r19, 0xFF	; 255
    105c:	f9 01       	movw	r30, r18
    105e:	20 81       	ld	r18, Z
    1060:	31 81       	ldd	r19, Z+1	; 0x01
    1062:	fc 01       	movw	r30, r24
    1064:	31 83       	std	Z+1, r19	; 0x01
    1066:	20 83       	st	Z, r18
    1068:	ce 01       	movw	r24, r28
    106a:	8a 5b       	subi	r24, 0xBA	; 186
    106c:	9f 4f       	sbci	r25, 0xFF	; 255
    106e:	fc 01       	movw	r30, r24
    1070:	80 81       	ld	r24, Z
    1072:	91 81       	ldd	r25, Z+1	; 0x01
    1074:	8c 01       	movw	r16, r24
    1076:	c8 01       	movw	r24, r16
    1078:	01 97       	sbiw	r24, 0x01	; 1
    107a:	f1 f7       	brne	.-4      	; 0x1078 <main+0x70e>
    107c:	8c 01       	movw	r16, r24
    107e:	ce 01       	movw	r24, r28
    1080:	8a 5b       	subi	r24, 0xBA	; 186
    1082:	9f 4f       	sbci	r25, 0xFF	; 255
    1084:	fc 01       	movw	r30, r24
    1086:	11 83       	std	Z+1, r17	; 0x01
    1088:	00 83       	st	Z, r16
		_delay_ms(10);
			writestr("KEY 2");
    108a:	88 e8       	ldi	r24, 0x88	; 136
    108c:	90 e0       	ldi	r25, 0x00	; 0
    108e:	0e 94 9f 02 	call	0x53e	; 0x53e <writestr>
    1092:	9e 01       	movw	r18, r28
    1094:	28 5b       	subi	r18, 0xB8	; 184
    1096:	3f 4f       	sbci	r19, 0xFF	; 255
    1098:	80 e0       	ldi	r24, 0x00	; 0
    109a:	90 e0       	ldi	r25, 0x00	; 0
    109c:	a8 e4       	ldi	r26, 0x48	; 72
    109e:	b2 e4       	ldi	r27, 0x42	; 66
    10a0:	f9 01       	movw	r30, r18
    10a2:	80 83       	st	Z, r24
    10a4:	91 83       	std	Z+1, r25	; 0x01
    10a6:	a2 83       	std	Z+2, r26	; 0x02
    10a8:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
    10aa:	8e 01       	movw	r16, r28
    10ac:	04 5b       	subi	r16, 0xB4	; 180
    10ae:	1f 4f       	sbci	r17, 0xFF	; 255
    10b0:	ce 01       	movw	r24, r28
    10b2:	88 5b       	subi	r24, 0xB8	; 184
    10b4:	9f 4f       	sbci	r25, 0xFF	; 255
    10b6:	fc 01       	movw	r30, r24
    10b8:	60 81       	ld	r22, Z
    10ba:	71 81       	ldd	r23, Z+1	; 0x01
    10bc:	82 81       	ldd	r24, Z+2	; 0x02
    10be:	93 81       	ldd	r25, Z+3	; 0x03
    10c0:	20 e0       	ldi	r18, 0x00	; 0
    10c2:	30 e0       	ldi	r19, 0x00	; 0
    10c4:	4a e7       	ldi	r20, 0x7A	; 122
    10c6:	53 e4       	ldi	r21, 0x43	; 67
    10c8:	0e 94 14 14 	call	0x2828	; 0x2828 <__mulsf3>
    10cc:	dc 01       	movw	r26, r24
    10ce:	cb 01       	movw	r24, r22
    10d0:	f8 01       	movw	r30, r16
    10d2:	80 83       	st	Z, r24
    10d4:	91 83       	std	Z+1, r25	; 0x01
    10d6:	a2 83       	std	Z+2, r26	; 0x02
    10d8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    10da:	ce 01       	movw	r24, r28
    10dc:	84 5b       	subi	r24, 0xB4	; 180
    10de:	9f 4f       	sbci	r25, 0xFF	; 255
    10e0:	11 e0       	ldi	r17, 0x01	; 1
    10e2:	fc 01       	movw	r30, r24
    10e4:	60 81       	ld	r22, Z
    10e6:	71 81       	ldd	r23, Z+1	; 0x01
    10e8:	82 81       	ldd	r24, Z+2	; 0x02
    10ea:	93 81       	ldd	r25, Z+3	; 0x03
    10ec:	20 e0       	ldi	r18, 0x00	; 0
    10ee:	30 e0       	ldi	r19, 0x00	; 0
    10f0:	40 e8       	ldi	r20, 0x80	; 128
    10f2:	5f e3       	ldi	r21, 0x3F	; 63
    10f4:	0e 94 93 13 	call	0x2726	; 0x2726 <__cmpsf2>
    10f8:	88 23       	and	r24, r24
    10fa:	0c f0       	brlt	.+2      	; 0x10fe <main+0x794>
    10fc:	10 e0       	ldi	r17, 0x00	; 0
    10fe:	11 23       	and	r17, r17
    1100:	49 f0       	breq	.+18     	; 0x1114 <main+0x7aa>
		__ticks = 1;
    1102:	ce 01       	movw	r24, r28
    1104:	80 5b       	subi	r24, 0xB0	; 176
    1106:	9f 4f       	sbci	r25, 0xFF	; 255
    1108:	21 e0       	ldi	r18, 0x01	; 1
    110a:	30 e0       	ldi	r19, 0x00	; 0
    110c:	fc 01       	movw	r30, r24
    110e:	31 83       	std	Z+1, r19	; 0x01
    1110:	20 83       	st	Z, r18
    1112:	74 c0       	rjmp	.+232    	; 0x11fc <main+0x892>
	else if (__tmp > 65535)
    1114:	ce 01       	movw	r24, r28
    1116:	84 5b       	subi	r24, 0xB4	; 180
    1118:	9f 4f       	sbci	r25, 0xFF	; 255
    111a:	11 e0       	ldi	r17, 0x01	; 1
    111c:	fc 01       	movw	r30, r24
    111e:	60 81       	ld	r22, Z
    1120:	71 81       	ldd	r23, Z+1	; 0x01
    1122:	82 81       	ldd	r24, Z+2	; 0x02
    1124:	93 81       	ldd	r25, Z+3	; 0x03
    1126:	20 e0       	ldi	r18, 0x00	; 0
    1128:	3f ef       	ldi	r19, 0xFF	; 255
    112a:	4f e7       	ldi	r20, 0x7F	; 127
    112c:	57 e4       	ldi	r21, 0x47	; 71
    112e:	0e 94 10 14 	call	0x2820	; 0x2820 <__gesf2>
    1132:	18 16       	cp	r1, r24
    1134:	0c f0       	brlt	.+2      	; 0x1138 <main+0x7ce>
    1136:	10 e0       	ldi	r17, 0x00	; 0
    1138:	11 23       	and	r17, r17
    113a:	09 f4       	brne	.+2      	; 0x113e <main+0x7d4>
    113c:	4d c0       	rjmp	.+154    	; 0x11d8 <main+0x86e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    113e:	ce 01       	movw	r24, r28
    1140:	88 5b       	subi	r24, 0xB8	; 184
    1142:	9f 4f       	sbci	r25, 0xFF	; 255
    1144:	fc 01       	movw	r30, r24
    1146:	60 81       	ld	r22, Z
    1148:	71 81       	ldd	r23, Z+1	; 0x01
    114a:	82 81       	ldd	r24, Z+2	; 0x02
    114c:	93 81       	ldd	r25, Z+3	; 0x03
    114e:	20 e0       	ldi	r18, 0x00	; 0
    1150:	30 e0       	ldi	r19, 0x00	; 0
    1152:	40 e2       	ldi	r20, 0x20	; 32
    1154:	51 e4       	ldi	r21, 0x41	; 65
    1156:	0e 94 14 14 	call	0x2828	; 0x2828 <__mulsf3>
    115a:	dc 01       	movw	r26, r24
    115c:	cb 01       	movw	r24, r22
    115e:	8e 01       	movw	r16, r28
    1160:	00 5b       	subi	r16, 0xB0	; 176
    1162:	1f 4f       	sbci	r17, 0xFF	; 255
    1164:	bc 01       	movw	r22, r24
    1166:	cd 01       	movw	r24, r26
    1168:	0e 94 97 13 	call	0x272e	; 0x272e <__fixunssfsi>
    116c:	dc 01       	movw	r26, r24
    116e:	cb 01       	movw	r24, r22
    1170:	f8 01       	movw	r30, r16
    1172:	91 83       	std	Z+1, r25	; 0x01
    1174:	80 83       	st	Z, r24
    1176:	27 c0       	rjmp	.+78     	; 0x11c6 <main+0x85c>
    1178:	ce 01       	movw	r24, r28
    117a:	8e 5a       	subi	r24, 0xAE	; 174
    117c:	9f 4f       	sbci	r25, 0xFF	; 255
    117e:	29 e1       	ldi	r18, 0x19	; 25
    1180:	30 e0       	ldi	r19, 0x00	; 0
    1182:	fc 01       	movw	r30, r24
    1184:	31 83       	std	Z+1, r19	; 0x01
    1186:	20 83       	st	Z, r18
    1188:	ce 01       	movw	r24, r28
    118a:	8e 5a       	subi	r24, 0xAE	; 174
    118c:	9f 4f       	sbci	r25, 0xFF	; 255
    118e:	fc 01       	movw	r30, r24
    1190:	80 81       	ld	r24, Z
    1192:	91 81       	ldd	r25, Z+1	; 0x01
    1194:	8c 01       	movw	r16, r24
    1196:	c8 01       	movw	r24, r16
    1198:	01 97       	sbiw	r24, 0x01	; 1
    119a:	f1 f7       	brne	.-4      	; 0x1198 <main+0x82e>
    119c:	8c 01       	movw	r16, r24
    119e:	ce 01       	movw	r24, r28
    11a0:	8e 5a       	subi	r24, 0xAE	; 174
    11a2:	9f 4f       	sbci	r25, 0xFF	; 255
    11a4:	fc 01       	movw	r30, r24
    11a6:	11 83       	std	Z+1, r17	; 0x01
    11a8:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    11aa:	ce 01       	movw	r24, r28
    11ac:	80 5b       	subi	r24, 0xB0	; 176
    11ae:	9f 4f       	sbci	r25, 0xFF	; 255
    11b0:	9e 01       	movw	r18, r28
    11b2:	20 5b       	subi	r18, 0xB0	; 176
    11b4:	3f 4f       	sbci	r19, 0xFF	; 255
    11b6:	f9 01       	movw	r30, r18
    11b8:	20 81       	ld	r18, Z
    11ba:	31 81       	ldd	r19, Z+1	; 0x01
    11bc:	21 50       	subi	r18, 0x01	; 1
    11be:	30 40       	sbci	r19, 0x00	; 0
    11c0:	fc 01       	movw	r30, r24
    11c2:	31 83       	std	Z+1, r19	; 0x01
    11c4:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    11c6:	ce 01       	movw	r24, r28
    11c8:	80 5b       	subi	r24, 0xB0	; 176
    11ca:	9f 4f       	sbci	r25, 0xFF	; 255
    11cc:	fc 01       	movw	r30, r24
    11ce:	80 81       	ld	r24, Z
    11d0:	91 81       	ldd	r25, Z+1	; 0x01
    11d2:	00 97       	sbiw	r24, 0x00	; 0
    11d4:	89 f6       	brne	.-94     	; 0x1178 <main+0x80e>
    11d6:	2f c0       	rjmp	.+94     	; 0x1236 <main+0x8cc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    11d8:	8e 01       	movw	r16, r28
    11da:	00 5b       	subi	r16, 0xB0	; 176
    11dc:	1f 4f       	sbci	r17, 0xFF	; 255
    11de:	ce 01       	movw	r24, r28
    11e0:	84 5b       	subi	r24, 0xB4	; 180
    11e2:	9f 4f       	sbci	r25, 0xFF	; 255
    11e4:	fc 01       	movw	r30, r24
    11e6:	60 81       	ld	r22, Z
    11e8:	71 81       	ldd	r23, Z+1	; 0x01
    11ea:	82 81       	ldd	r24, Z+2	; 0x02
    11ec:	93 81       	ldd	r25, Z+3	; 0x03
    11ee:	0e 94 97 13 	call	0x272e	; 0x272e <__fixunssfsi>
    11f2:	dc 01       	movw	r26, r24
    11f4:	cb 01       	movw	r24, r22
    11f6:	f8 01       	movw	r30, r16
    11f8:	91 83       	std	Z+1, r25	; 0x01
    11fa:	80 83       	st	Z, r24
    11fc:	ce 01       	movw	r24, r28
    11fe:	8c 5a       	subi	r24, 0xAC	; 172
    1200:	9f 4f       	sbci	r25, 0xFF	; 255
    1202:	9e 01       	movw	r18, r28
    1204:	20 5b       	subi	r18, 0xB0	; 176
    1206:	3f 4f       	sbci	r19, 0xFF	; 255
    1208:	f9 01       	movw	r30, r18
    120a:	20 81       	ld	r18, Z
    120c:	31 81       	ldd	r19, Z+1	; 0x01
    120e:	fc 01       	movw	r30, r24
    1210:	31 83       	std	Z+1, r19	; 0x01
    1212:	20 83       	st	Z, r18
    1214:	ce 01       	movw	r24, r28
    1216:	8c 5a       	subi	r24, 0xAC	; 172
    1218:	9f 4f       	sbci	r25, 0xFF	; 255
    121a:	fc 01       	movw	r30, r24
    121c:	80 81       	ld	r24, Z
    121e:	91 81       	ldd	r25, Z+1	; 0x01
    1220:	8c 01       	movw	r16, r24
    1222:	c8 01       	movw	r24, r16
    1224:	01 97       	sbiw	r24, 0x01	; 1
    1226:	f1 f7       	brne	.-4      	; 0x1224 <main+0x8ba>
    1228:	8c 01       	movw	r16, r24
    122a:	ce 01       	movw	r24, r28
    122c:	8c 5a       	subi	r24, 0xAC	; 172
    122e:	9f 4f       	sbci	r25, 0xFF	; 255
    1230:	fc 01       	movw	r30, r24
    1232:	11 83       	std	Z+1, r17	; 0x01
    1234:	00 83       	st	Z, r16
			_delay_ms(50);
			break;
    1236:	0c 94 91 13 	jmp	0x2722	; 0x2722 <main+0x1db8>
    case 3: writecmd(0xc5);
    123a:	85 ec       	ldi	r24, 0xC5	; 197
    123c:	0e 94 52 03 	call	0x6a4	; 0x6a4 <writecmd>
			PORTD=arr[a];
    1240:	82 e3       	ldi	r24, 0x32	; 50
    1242:	90 e0       	ldi	r25, 0x00	; 0
    1244:	29 81       	ldd	r18, Y+1	; 0x01
    1246:	22 2f       	mov	r18, r18
    1248:	30 e0       	ldi	r19, 0x00	; 0
    124a:	ae 01       	movw	r20, r28
    124c:	42 50       	subi	r20, 0x02	; 2
    124e:	5f 4f       	sbci	r21, 0xFF	; 255
    1250:	24 0f       	add	r18, r20
    1252:	35 1f       	adc	r19, r21
    1254:	f9 01       	movw	r30, r18
    1256:	20 81       	ld	r18, Z
    1258:	fc 01       	movw	r30, r24
    125a:	20 83       	st	Z, r18
    125c:	9e 01       	movw	r18, r28
    125e:	2a 5a       	subi	r18, 0xAA	; 170
    1260:	3f 4f       	sbci	r19, 0xFF	; 255
    1262:	80 e0       	ldi	r24, 0x00	; 0
    1264:	90 e0       	ldi	r25, 0x00	; 0
    1266:	a0 e2       	ldi	r26, 0x20	; 32
    1268:	b1 e4       	ldi	r27, 0x41	; 65
    126a:	f9 01       	movw	r30, r18
    126c:	80 83       	st	Z, r24
    126e:	91 83       	std	Z+1, r25	; 0x01
    1270:	a2 83       	std	Z+2, r26	; 0x02
    1272:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
    1274:	8e 01       	movw	r16, r28
    1276:	06 5a       	subi	r16, 0xA6	; 166
    1278:	1f 4f       	sbci	r17, 0xFF	; 255
    127a:	ce 01       	movw	r24, r28
    127c:	8a 5a       	subi	r24, 0xAA	; 170
    127e:	9f 4f       	sbci	r25, 0xFF	; 255
    1280:	fc 01       	movw	r30, r24
    1282:	60 81       	ld	r22, Z
    1284:	71 81       	ldd	r23, Z+1	; 0x01
    1286:	82 81       	ldd	r24, Z+2	; 0x02
    1288:	93 81       	ldd	r25, Z+3	; 0x03
    128a:	20 e0       	ldi	r18, 0x00	; 0
    128c:	30 e0       	ldi	r19, 0x00	; 0
    128e:	4a e7       	ldi	r20, 0x7A	; 122
    1290:	53 e4       	ldi	r21, 0x43	; 67
    1292:	0e 94 14 14 	call	0x2828	; 0x2828 <__mulsf3>
    1296:	dc 01       	movw	r26, r24
    1298:	cb 01       	movw	r24, r22
    129a:	f8 01       	movw	r30, r16
    129c:	80 83       	st	Z, r24
    129e:	91 83       	std	Z+1, r25	; 0x01
    12a0:	a2 83       	std	Z+2, r26	; 0x02
    12a2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    12a4:	ce 01       	movw	r24, r28
    12a6:	86 5a       	subi	r24, 0xA6	; 166
    12a8:	9f 4f       	sbci	r25, 0xFF	; 255
    12aa:	11 e0       	ldi	r17, 0x01	; 1
    12ac:	fc 01       	movw	r30, r24
    12ae:	60 81       	ld	r22, Z
    12b0:	71 81       	ldd	r23, Z+1	; 0x01
    12b2:	82 81       	ldd	r24, Z+2	; 0x02
    12b4:	93 81       	ldd	r25, Z+3	; 0x03
    12b6:	20 e0       	ldi	r18, 0x00	; 0
    12b8:	30 e0       	ldi	r19, 0x00	; 0
    12ba:	40 e8       	ldi	r20, 0x80	; 128
    12bc:	5f e3       	ldi	r21, 0x3F	; 63
    12be:	0e 94 93 13 	call	0x2726	; 0x2726 <__cmpsf2>
    12c2:	88 23       	and	r24, r24
    12c4:	0c f0       	brlt	.+2      	; 0x12c8 <main+0x95e>
    12c6:	10 e0       	ldi	r17, 0x00	; 0
    12c8:	11 23       	and	r17, r17
    12ca:	49 f0       	breq	.+18     	; 0x12de <main+0x974>
		__ticks = 1;
    12cc:	ce 01       	movw	r24, r28
    12ce:	82 5a       	subi	r24, 0xA2	; 162
    12d0:	9f 4f       	sbci	r25, 0xFF	; 255
    12d2:	21 e0       	ldi	r18, 0x01	; 1
    12d4:	30 e0       	ldi	r19, 0x00	; 0
    12d6:	fc 01       	movw	r30, r24
    12d8:	31 83       	std	Z+1, r19	; 0x01
    12da:	20 83       	st	Z, r18
    12dc:	74 c0       	rjmp	.+232    	; 0x13c6 <main+0xa5c>
	else if (__tmp > 65535)
    12de:	ce 01       	movw	r24, r28
    12e0:	86 5a       	subi	r24, 0xA6	; 166
    12e2:	9f 4f       	sbci	r25, 0xFF	; 255
    12e4:	11 e0       	ldi	r17, 0x01	; 1
    12e6:	fc 01       	movw	r30, r24
    12e8:	60 81       	ld	r22, Z
    12ea:	71 81       	ldd	r23, Z+1	; 0x01
    12ec:	82 81       	ldd	r24, Z+2	; 0x02
    12ee:	93 81       	ldd	r25, Z+3	; 0x03
    12f0:	20 e0       	ldi	r18, 0x00	; 0
    12f2:	3f ef       	ldi	r19, 0xFF	; 255
    12f4:	4f e7       	ldi	r20, 0x7F	; 127
    12f6:	57 e4       	ldi	r21, 0x47	; 71
    12f8:	0e 94 10 14 	call	0x2820	; 0x2820 <__gesf2>
    12fc:	18 16       	cp	r1, r24
    12fe:	0c f0       	brlt	.+2      	; 0x1302 <main+0x998>
    1300:	10 e0       	ldi	r17, 0x00	; 0
    1302:	11 23       	and	r17, r17
    1304:	09 f4       	brne	.+2      	; 0x1308 <main+0x99e>
    1306:	4d c0       	rjmp	.+154    	; 0x13a2 <main+0xa38>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1308:	ce 01       	movw	r24, r28
    130a:	8a 5a       	subi	r24, 0xAA	; 170
    130c:	9f 4f       	sbci	r25, 0xFF	; 255
    130e:	fc 01       	movw	r30, r24
    1310:	60 81       	ld	r22, Z
    1312:	71 81       	ldd	r23, Z+1	; 0x01
    1314:	82 81       	ldd	r24, Z+2	; 0x02
    1316:	93 81       	ldd	r25, Z+3	; 0x03
    1318:	20 e0       	ldi	r18, 0x00	; 0
    131a:	30 e0       	ldi	r19, 0x00	; 0
    131c:	40 e2       	ldi	r20, 0x20	; 32
    131e:	51 e4       	ldi	r21, 0x41	; 65
    1320:	0e 94 14 14 	call	0x2828	; 0x2828 <__mulsf3>
    1324:	dc 01       	movw	r26, r24
    1326:	cb 01       	movw	r24, r22
    1328:	8e 01       	movw	r16, r28
    132a:	02 5a       	subi	r16, 0xA2	; 162
    132c:	1f 4f       	sbci	r17, 0xFF	; 255
    132e:	bc 01       	movw	r22, r24
    1330:	cd 01       	movw	r24, r26
    1332:	0e 94 97 13 	call	0x272e	; 0x272e <__fixunssfsi>
    1336:	dc 01       	movw	r26, r24
    1338:	cb 01       	movw	r24, r22
    133a:	f8 01       	movw	r30, r16
    133c:	91 83       	std	Z+1, r25	; 0x01
    133e:	80 83       	st	Z, r24
    1340:	27 c0       	rjmp	.+78     	; 0x1390 <main+0xa26>
    1342:	ce 01       	movw	r24, r28
    1344:	80 5a       	subi	r24, 0xA0	; 160
    1346:	9f 4f       	sbci	r25, 0xFF	; 255
    1348:	29 e1       	ldi	r18, 0x19	; 25
    134a:	30 e0       	ldi	r19, 0x00	; 0
    134c:	fc 01       	movw	r30, r24
    134e:	31 83       	std	Z+1, r19	; 0x01
    1350:	20 83       	st	Z, r18
    1352:	ce 01       	movw	r24, r28
    1354:	80 5a       	subi	r24, 0xA0	; 160
    1356:	9f 4f       	sbci	r25, 0xFF	; 255
    1358:	fc 01       	movw	r30, r24
    135a:	80 81       	ld	r24, Z
    135c:	91 81       	ldd	r25, Z+1	; 0x01
    135e:	8c 01       	movw	r16, r24
    1360:	c8 01       	movw	r24, r16
    1362:	01 97       	sbiw	r24, 0x01	; 1
    1364:	f1 f7       	brne	.-4      	; 0x1362 <main+0x9f8>
    1366:	8c 01       	movw	r16, r24
    1368:	ce 01       	movw	r24, r28
    136a:	80 5a       	subi	r24, 0xA0	; 160
    136c:	9f 4f       	sbci	r25, 0xFF	; 255
    136e:	fc 01       	movw	r30, r24
    1370:	11 83       	std	Z+1, r17	; 0x01
    1372:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1374:	ce 01       	movw	r24, r28
    1376:	82 5a       	subi	r24, 0xA2	; 162
    1378:	9f 4f       	sbci	r25, 0xFF	; 255
    137a:	9e 01       	movw	r18, r28
    137c:	22 5a       	subi	r18, 0xA2	; 162
    137e:	3f 4f       	sbci	r19, 0xFF	; 255
    1380:	f9 01       	movw	r30, r18
    1382:	20 81       	ld	r18, Z
    1384:	31 81       	ldd	r19, Z+1	; 0x01
    1386:	21 50       	subi	r18, 0x01	; 1
    1388:	30 40       	sbci	r19, 0x00	; 0
    138a:	fc 01       	movw	r30, r24
    138c:	31 83       	std	Z+1, r19	; 0x01
    138e:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1390:	ce 01       	movw	r24, r28
    1392:	82 5a       	subi	r24, 0xA2	; 162
    1394:	9f 4f       	sbci	r25, 0xFF	; 255
    1396:	fc 01       	movw	r30, r24
    1398:	80 81       	ld	r24, Z
    139a:	91 81       	ldd	r25, Z+1	; 0x01
    139c:	00 97       	sbiw	r24, 0x00	; 0
    139e:	89 f6       	brne	.-94     	; 0x1342 <main+0x9d8>
    13a0:	2f c0       	rjmp	.+94     	; 0x1400 <main+0xa96>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    13a2:	8e 01       	movw	r16, r28
    13a4:	02 5a       	subi	r16, 0xA2	; 162
    13a6:	1f 4f       	sbci	r17, 0xFF	; 255
    13a8:	ce 01       	movw	r24, r28
    13aa:	86 5a       	subi	r24, 0xA6	; 166
    13ac:	9f 4f       	sbci	r25, 0xFF	; 255
    13ae:	fc 01       	movw	r30, r24
    13b0:	60 81       	ld	r22, Z
    13b2:	71 81       	ldd	r23, Z+1	; 0x01
    13b4:	82 81       	ldd	r24, Z+2	; 0x02
    13b6:	93 81       	ldd	r25, Z+3	; 0x03
    13b8:	0e 94 97 13 	call	0x272e	; 0x272e <__fixunssfsi>
    13bc:	dc 01       	movw	r26, r24
    13be:	cb 01       	movw	r24, r22
    13c0:	f8 01       	movw	r30, r16
    13c2:	91 83       	std	Z+1, r25	; 0x01
    13c4:	80 83       	st	Z, r24
    13c6:	ce 01       	movw	r24, r28
    13c8:	8e 59       	subi	r24, 0x9E	; 158
    13ca:	9f 4f       	sbci	r25, 0xFF	; 255
    13cc:	9e 01       	movw	r18, r28
    13ce:	22 5a       	subi	r18, 0xA2	; 162
    13d0:	3f 4f       	sbci	r19, 0xFF	; 255
    13d2:	f9 01       	movw	r30, r18
    13d4:	20 81       	ld	r18, Z
    13d6:	31 81       	ldd	r19, Z+1	; 0x01
    13d8:	fc 01       	movw	r30, r24
    13da:	31 83       	std	Z+1, r19	; 0x01
    13dc:	20 83       	st	Z, r18
    13de:	ce 01       	movw	r24, r28
    13e0:	8e 59       	subi	r24, 0x9E	; 158
    13e2:	9f 4f       	sbci	r25, 0xFF	; 255
    13e4:	fc 01       	movw	r30, r24
    13e6:	80 81       	ld	r24, Z
    13e8:	91 81       	ldd	r25, Z+1	; 0x01
    13ea:	8c 01       	movw	r16, r24
    13ec:	c8 01       	movw	r24, r16
    13ee:	01 97       	sbiw	r24, 0x01	; 1
    13f0:	f1 f7       	brne	.-4      	; 0x13ee <main+0xa84>
    13f2:	8c 01       	movw	r16, r24
    13f4:	ce 01       	movw	r24, r28
    13f6:	8e 59       	subi	r24, 0x9E	; 158
    13f8:	9f 4f       	sbci	r25, 0xFF	; 255
    13fa:	fc 01       	movw	r30, r24
    13fc:	11 83       	std	Z+1, r17	; 0x01
    13fe:	00 83       	st	Z, r16
		_delay_ms(10);
			writestr("KEY 3");
    1400:	8e e8       	ldi	r24, 0x8E	; 142
    1402:	90 e0       	ldi	r25, 0x00	; 0
    1404:	0e 94 9f 02 	call	0x53e	; 0x53e <writestr>
    1408:	9e 01       	movw	r18, r28
    140a:	2c 59       	subi	r18, 0x9C	; 156
    140c:	3f 4f       	sbci	r19, 0xFF	; 255
    140e:	80 e0       	ldi	r24, 0x00	; 0
    1410:	90 e0       	ldi	r25, 0x00	; 0
    1412:	a8 e4       	ldi	r26, 0x48	; 72
    1414:	b2 e4       	ldi	r27, 0x42	; 66
    1416:	f9 01       	movw	r30, r18
    1418:	80 83       	st	Z, r24
    141a:	91 83       	std	Z+1, r25	; 0x01
    141c:	a2 83       	std	Z+2, r26	; 0x02
    141e:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
    1420:	8e 01       	movw	r16, r28
    1422:	08 59       	subi	r16, 0x98	; 152
    1424:	1f 4f       	sbci	r17, 0xFF	; 255
    1426:	ce 01       	movw	r24, r28
    1428:	8c 59       	subi	r24, 0x9C	; 156
    142a:	9f 4f       	sbci	r25, 0xFF	; 255
    142c:	fc 01       	movw	r30, r24
    142e:	60 81       	ld	r22, Z
    1430:	71 81       	ldd	r23, Z+1	; 0x01
    1432:	82 81       	ldd	r24, Z+2	; 0x02
    1434:	93 81       	ldd	r25, Z+3	; 0x03
    1436:	20 e0       	ldi	r18, 0x00	; 0
    1438:	30 e0       	ldi	r19, 0x00	; 0
    143a:	4a e7       	ldi	r20, 0x7A	; 122
    143c:	53 e4       	ldi	r21, 0x43	; 67
    143e:	0e 94 14 14 	call	0x2828	; 0x2828 <__mulsf3>
    1442:	dc 01       	movw	r26, r24
    1444:	cb 01       	movw	r24, r22
    1446:	f8 01       	movw	r30, r16
    1448:	80 83       	st	Z, r24
    144a:	91 83       	std	Z+1, r25	; 0x01
    144c:	a2 83       	std	Z+2, r26	; 0x02
    144e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1450:	ce 01       	movw	r24, r28
    1452:	88 59       	subi	r24, 0x98	; 152
    1454:	9f 4f       	sbci	r25, 0xFF	; 255
    1456:	11 e0       	ldi	r17, 0x01	; 1
    1458:	fc 01       	movw	r30, r24
    145a:	60 81       	ld	r22, Z
    145c:	71 81       	ldd	r23, Z+1	; 0x01
    145e:	82 81       	ldd	r24, Z+2	; 0x02
    1460:	93 81       	ldd	r25, Z+3	; 0x03
    1462:	20 e0       	ldi	r18, 0x00	; 0
    1464:	30 e0       	ldi	r19, 0x00	; 0
    1466:	40 e8       	ldi	r20, 0x80	; 128
    1468:	5f e3       	ldi	r21, 0x3F	; 63
    146a:	0e 94 93 13 	call	0x2726	; 0x2726 <__cmpsf2>
    146e:	88 23       	and	r24, r24
    1470:	0c f0       	brlt	.+2      	; 0x1474 <main+0xb0a>
    1472:	10 e0       	ldi	r17, 0x00	; 0
    1474:	11 23       	and	r17, r17
    1476:	49 f0       	breq	.+18     	; 0x148a <main+0xb20>
		__ticks = 1;
    1478:	ce 01       	movw	r24, r28
    147a:	84 59       	subi	r24, 0x94	; 148
    147c:	9f 4f       	sbci	r25, 0xFF	; 255
    147e:	21 e0       	ldi	r18, 0x01	; 1
    1480:	30 e0       	ldi	r19, 0x00	; 0
    1482:	fc 01       	movw	r30, r24
    1484:	31 83       	std	Z+1, r19	; 0x01
    1486:	20 83       	st	Z, r18
    1488:	74 c0       	rjmp	.+232    	; 0x1572 <main+0xc08>
	else if (__tmp > 65535)
    148a:	ce 01       	movw	r24, r28
    148c:	88 59       	subi	r24, 0x98	; 152
    148e:	9f 4f       	sbci	r25, 0xFF	; 255
    1490:	11 e0       	ldi	r17, 0x01	; 1
    1492:	fc 01       	movw	r30, r24
    1494:	60 81       	ld	r22, Z
    1496:	71 81       	ldd	r23, Z+1	; 0x01
    1498:	82 81       	ldd	r24, Z+2	; 0x02
    149a:	93 81       	ldd	r25, Z+3	; 0x03
    149c:	20 e0       	ldi	r18, 0x00	; 0
    149e:	3f ef       	ldi	r19, 0xFF	; 255
    14a0:	4f e7       	ldi	r20, 0x7F	; 127
    14a2:	57 e4       	ldi	r21, 0x47	; 71
    14a4:	0e 94 10 14 	call	0x2820	; 0x2820 <__gesf2>
    14a8:	18 16       	cp	r1, r24
    14aa:	0c f0       	brlt	.+2      	; 0x14ae <main+0xb44>
    14ac:	10 e0       	ldi	r17, 0x00	; 0
    14ae:	11 23       	and	r17, r17
    14b0:	09 f4       	brne	.+2      	; 0x14b4 <main+0xb4a>
    14b2:	4d c0       	rjmp	.+154    	; 0x154e <main+0xbe4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    14b4:	ce 01       	movw	r24, r28
    14b6:	8c 59       	subi	r24, 0x9C	; 156
    14b8:	9f 4f       	sbci	r25, 0xFF	; 255
    14ba:	fc 01       	movw	r30, r24
    14bc:	60 81       	ld	r22, Z
    14be:	71 81       	ldd	r23, Z+1	; 0x01
    14c0:	82 81       	ldd	r24, Z+2	; 0x02
    14c2:	93 81       	ldd	r25, Z+3	; 0x03
    14c4:	20 e0       	ldi	r18, 0x00	; 0
    14c6:	30 e0       	ldi	r19, 0x00	; 0
    14c8:	40 e2       	ldi	r20, 0x20	; 32
    14ca:	51 e4       	ldi	r21, 0x41	; 65
    14cc:	0e 94 14 14 	call	0x2828	; 0x2828 <__mulsf3>
    14d0:	dc 01       	movw	r26, r24
    14d2:	cb 01       	movw	r24, r22
    14d4:	8e 01       	movw	r16, r28
    14d6:	04 59       	subi	r16, 0x94	; 148
    14d8:	1f 4f       	sbci	r17, 0xFF	; 255
    14da:	bc 01       	movw	r22, r24
    14dc:	cd 01       	movw	r24, r26
    14de:	0e 94 97 13 	call	0x272e	; 0x272e <__fixunssfsi>
    14e2:	dc 01       	movw	r26, r24
    14e4:	cb 01       	movw	r24, r22
    14e6:	f8 01       	movw	r30, r16
    14e8:	91 83       	std	Z+1, r25	; 0x01
    14ea:	80 83       	st	Z, r24
    14ec:	27 c0       	rjmp	.+78     	; 0x153c <main+0xbd2>
    14ee:	ce 01       	movw	r24, r28
    14f0:	82 59       	subi	r24, 0x92	; 146
    14f2:	9f 4f       	sbci	r25, 0xFF	; 255
    14f4:	29 e1       	ldi	r18, 0x19	; 25
    14f6:	30 e0       	ldi	r19, 0x00	; 0
    14f8:	fc 01       	movw	r30, r24
    14fa:	31 83       	std	Z+1, r19	; 0x01
    14fc:	20 83       	st	Z, r18
    14fe:	ce 01       	movw	r24, r28
    1500:	82 59       	subi	r24, 0x92	; 146
    1502:	9f 4f       	sbci	r25, 0xFF	; 255
    1504:	fc 01       	movw	r30, r24
    1506:	80 81       	ld	r24, Z
    1508:	91 81       	ldd	r25, Z+1	; 0x01
    150a:	8c 01       	movw	r16, r24
    150c:	c8 01       	movw	r24, r16
    150e:	01 97       	sbiw	r24, 0x01	; 1
    1510:	f1 f7       	brne	.-4      	; 0x150e <main+0xba4>
    1512:	8c 01       	movw	r16, r24
    1514:	ce 01       	movw	r24, r28
    1516:	82 59       	subi	r24, 0x92	; 146
    1518:	9f 4f       	sbci	r25, 0xFF	; 255
    151a:	fc 01       	movw	r30, r24
    151c:	11 83       	std	Z+1, r17	; 0x01
    151e:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1520:	ce 01       	movw	r24, r28
    1522:	84 59       	subi	r24, 0x94	; 148
    1524:	9f 4f       	sbci	r25, 0xFF	; 255
    1526:	9e 01       	movw	r18, r28
    1528:	24 59       	subi	r18, 0x94	; 148
    152a:	3f 4f       	sbci	r19, 0xFF	; 255
    152c:	f9 01       	movw	r30, r18
    152e:	20 81       	ld	r18, Z
    1530:	31 81       	ldd	r19, Z+1	; 0x01
    1532:	21 50       	subi	r18, 0x01	; 1
    1534:	30 40       	sbci	r19, 0x00	; 0
    1536:	fc 01       	movw	r30, r24
    1538:	31 83       	std	Z+1, r19	; 0x01
    153a:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    153c:	ce 01       	movw	r24, r28
    153e:	84 59       	subi	r24, 0x94	; 148
    1540:	9f 4f       	sbci	r25, 0xFF	; 255
    1542:	fc 01       	movw	r30, r24
    1544:	80 81       	ld	r24, Z
    1546:	91 81       	ldd	r25, Z+1	; 0x01
    1548:	00 97       	sbiw	r24, 0x00	; 0
    154a:	89 f6       	brne	.-94     	; 0x14ee <main+0xb84>
    154c:	2f c0       	rjmp	.+94     	; 0x15ac <main+0xc42>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    154e:	8e 01       	movw	r16, r28
    1550:	04 59       	subi	r16, 0x94	; 148
    1552:	1f 4f       	sbci	r17, 0xFF	; 255
    1554:	ce 01       	movw	r24, r28
    1556:	88 59       	subi	r24, 0x98	; 152
    1558:	9f 4f       	sbci	r25, 0xFF	; 255
    155a:	fc 01       	movw	r30, r24
    155c:	60 81       	ld	r22, Z
    155e:	71 81       	ldd	r23, Z+1	; 0x01
    1560:	82 81       	ldd	r24, Z+2	; 0x02
    1562:	93 81       	ldd	r25, Z+3	; 0x03
    1564:	0e 94 97 13 	call	0x272e	; 0x272e <__fixunssfsi>
    1568:	dc 01       	movw	r26, r24
    156a:	cb 01       	movw	r24, r22
    156c:	f8 01       	movw	r30, r16
    156e:	91 83       	std	Z+1, r25	; 0x01
    1570:	80 83       	st	Z, r24
    1572:	ce 01       	movw	r24, r28
    1574:	80 59       	subi	r24, 0x90	; 144
    1576:	9f 4f       	sbci	r25, 0xFF	; 255
    1578:	9e 01       	movw	r18, r28
    157a:	24 59       	subi	r18, 0x94	; 148
    157c:	3f 4f       	sbci	r19, 0xFF	; 255
    157e:	f9 01       	movw	r30, r18
    1580:	20 81       	ld	r18, Z
    1582:	31 81       	ldd	r19, Z+1	; 0x01
    1584:	fc 01       	movw	r30, r24
    1586:	31 83       	std	Z+1, r19	; 0x01
    1588:	20 83       	st	Z, r18
    158a:	ce 01       	movw	r24, r28
    158c:	80 59       	subi	r24, 0x90	; 144
    158e:	9f 4f       	sbci	r25, 0xFF	; 255
    1590:	fc 01       	movw	r30, r24
    1592:	80 81       	ld	r24, Z
    1594:	91 81       	ldd	r25, Z+1	; 0x01
    1596:	8c 01       	movw	r16, r24
    1598:	c8 01       	movw	r24, r16
    159a:	01 97       	sbiw	r24, 0x01	; 1
    159c:	f1 f7       	brne	.-4      	; 0x159a <main+0xc30>
    159e:	8c 01       	movw	r16, r24
    15a0:	ce 01       	movw	r24, r28
    15a2:	80 59       	subi	r24, 0x90	; 144
    15a4:	9f 4f       	sbci	r25, 0xFF	; 255
    15a6:	fc 01       	movw	r30, r24
    15a8:	11 83       	std	Z+1, r17	; 0x01
    15aa:	00 83       	st	Z, r16
			_delay_ms(50);
			break;
    15ac:	0c 94 91 13 	jmp	0x2722	; 0x2722 <main+0x1db8>
	case 4:  writecmd(0xc5);
    15b0:	85 ec       	ldi	r24, 0xC5	; 197
    15b2:	0e 94 52 03 	call	0x6a4	; 0x6a4 <writecmd>
			PORTD=arr[a];
    15b6:	82 e3       	ldi	r24, 0x32	; 50
    15b8:	90 e0       	ldi	r25, 0x00	; 0
    15ba:	29 81       	ldd	r18, Y+1	; 0x01
    15bc:	22 2f       	mov	r18, r18
    15be:	30 e0       	ldi	r19, 0x00	; 0
    15c0:	ae 01       	movw	r20, r28
    15c2:	42 50       	subi	r20, 0x02	; 2
    15c4:	5f 4f       	sbci	r21, 0xFF	; 255
    15c6:	24 0f       	add	r18, r20
    15c8:	35 1f       	adc	r19, r21
    15ca:	f9 01       	movw	r30, r18
    15cc:	20 81       	ld	r18, Z
    15ce:	fc 01       	movw	r30, r24
    15d0:	20 83       	st	Z, r18
    15d2:	9e 01       	movw	r18, r28
    15d4:	2e 58       	subi	r18, 0x8E	; 142
    15d6:	3f 4f       	sbci	r19, 0xFF	; 255
    15d8:	80 e0       	ldi	r24, 0x00	; 0
    15da:	90 e0       	ldi	r25, 0x00	; 0
    15dc:	a0 e2       	ldi	r26, 0x20	; 32
    15de:	b1 e4       	ldi	r27, 0x41	; 65
    15e0:	f9 01       	movw	r30, r18
    15e2:	80 83       	st	Z, r24
    15e4:	91 83       	std	Z+1, r25	; 0x01
    15e6:	a2 83       	std	Z+2, r26	; 0x02
    15e8:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
    15ea:	8e 01       	movw	r16, r28
    15ec:	0a 58       	subi	r16, 0x8A	; 138
    15ee:	1f 4f       	sbci	r17, 0xFF	; 255
    15f0:	ce 01       	movw	r24, r28
    15f2:	8e 58       	subi	r24, 0x8E	; 142
    15f4:	9f 4f       	sbci	r25, 0xFF	; 255
    15f6:	fc 01       	movw	r30, r24
    15f8:	60 81       	ld	r22, Z
    15fa:	71 81       	ldd	r23, Z+1	; 0x01
    15fc:	82 81       	ldd	r24, Z+2	; 0x02
    15fe:	93 81       	ldd	r25, Z+3	; 0x03
    1600:	20 e0       	ldi	r18, 0x00	; 0
    1602:	30 e0       	ldi	r19, 0x00	; 0
    1604:	4a e7       	ldi	r20, 0x7A	; 122
    1606:	53 e4       	ldi	r21, 0x43	; 67
    1608:	0e 94 14 14 	call	0x2828	; 0x2828 <__mulsf3>
    160c:	dc 01       	movw	r26, r24
    160e:	cb 01       	movw	r24, r22
    1610:	f8 01       	movw	r30, r16
    1612:	80 83       	st	Z, r24
    1614:	91 83       	std	Z+1, r25	; 0x01
    1616:	a2 83       	std	Z+2, r26	; 0x02
    1618:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    161a:	ce 01       	movw	r24, r28
    161c:	8a 58       	subi	r24, 0x8A	; 138
    161e:	9f 4f       	sbci	r25, 0xFF	; 255
    1620:	11 e0       	ldi	r17, 0x01	; 1
    1622:	fc 01       	movw	r30, r24
    1624:	60 81       	ld	r22, Z
    1626:	71 81       	ldd	r23, Z+1	; 0x01
    1628:	82 81       	ldd	r24, Z+2	; 0x02
    162a:	93 81       	ldd	r25, Z+3	; 0x03
    162c:	20 e0       	ldi	r18, 0x00	; 0
    162e:	30 e0       	ldi	r19, 0x00	; 0
    1630:	40 e8       	ldi	r20, 0x80	; 128
    1632:	5f e3       	ldi	r21, 0x3F	; 63
    1634:	0e 94 93 13 	call	0x2726	; 0x2726 <__cmpsf2>
    1638:	88 23       	and	r24, r24
    163a:	0c f0       	brlt	.+2      	; 0x163e <main+0xcd4>
    163c:	10 e0       	ldi	r17, 0x00	; 0
    163e:	11 23       	and	r17, r17
    1640:	49 f0       	breq	.+18     	; 0x1654 <main+0xcea>
		__ticks = 1;
    1642:	ce 01       	movw	r24, r28
    1644:	86 58       	subi	r24, 0x86	; 134
    1646:	9f 4f       	sbci	r25, 0xFF	; 255
    1648:	21 e0       	ldi	r18, 0x01	; 1
    164a:	30 e0       	ldi	r19, 0x00	; 0
    164c:	fc 01       	movw	r30, r24
    164e:	31 83       	std	Z+1, r19	; 0x01
    1650:	20 83       	st	Z, r18
    1652:	74 c0       	rjmp	.+232    	; 0x173c <main+0xdd2>
	else if (__tmp > 65535)
    1654:	ce 01       	movw	r24, r28
    1656:	8a 58       	subi	r24, 0x8A	; 138
    1658:	9f 4f       	sbci	r25, 0xFF	; 255
    165a:	11 e0       	ldi	r17, 0x01	; 1
    165c:	fc 01       	movw	r30, r24
    165e:	60 81       	ld	r22, Z
    1660:	71 81       	ldd	r23, Z+1	; 0x01
    1662:	82 81       	ldd	r24, Z+2	; 0x02
    1664:	93 81       	ldd	r25, Z+3	; 0x03
    1666:	20 e0       	ldi	r18, 0x00	; 0
    1668:	3f ef       	ldi	r19, 0xFF	; 255
    166a:	4f e7       	ldi	r20, 0x7F	; 127
    166c:	57 e4       	ldi	r21, 0x47	; 71
    166e:	0e 94 10 14 	call	0x2820	; 0x2820 <__gesf2>
    1672:	18 16       	cp	r1, r24
    1674:	0c f0       	brlt	.+2      	; 0x1678 <main+0xd0e>
    1676:	10 e0       	ldi	r17, 0x00	; 0
    1678:	11 23       	and	r17, r17
    167a:	09 f4       	brne	.+2      	; 0x167e <main+0xd14>
    167c:	4d c0       	rjmp	.+154    	; 0x1718 <main+0xdae>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    167e:	ce 01       	movw	r24, r28
    1680:	8e 58       	subi	r24, 0x8E	; 142
    1682:	9f 4f       	sbci	r25, 0xFF	; 255
    1684:	fc 01       	movw	r30, r24
    1686:	60 81       	ld	r22, Z
    1688:	71 81       	ldd	r23, Z+1	; 0x01
    168a:	82 81       	ldd	r24, Z+2	; 0x02
    168c:	93 81       	ldd	r25, Z+3	; 0x03
    168e:	20 e0       	ldi	r18, 0x00	; 0
    1690:	30 e0       	ldi	r19, 0x00	; 0
    1692:	40 e2       	ldi	r20, 0x20	; 32
    1694:	51 e4       	ldi	r21, 0x41	; 65
    1696:	0e 94 14 14 	call	0x2828	; 0x2828 <__mulsf3>
    169a:	dc 01       	movw	r26, r24
    169c:	cb 01       	movw	r24, r22
    169e:	8e 01       	movw	r16, r28
    16a0:	06 58       	subi	r16, 0x86	; 134
    16a2:	1f 4f       	sbci	r17, 0xFF	; 255
    16a4:	bc 01       	movw	r22, r24
    16a6:	cd 01       	movw	r24, r26
    16a8:	0e 94 97 13 	call	0x272e	; 0x272e <__fixunssfsi>
    16ac:	dc 01       	movw	r26, r24
    16ae:	cb 01       	movw	r24, r22
    16b0:	f8 01       	movw	r30, r16
    16b2:	91 83       	std	Z+1, r25	; 0x01
    16b4:	80 83       	st	Z, r24
    16b6:	27 c0       	rjmp	.+78     	; 0x1706 <main+0xd9c>
    16b8:	ce 01       	movw	r24, r28
    16ba:	84 58       	subi	r24, 0x84	; 132
    16bc:	9f 4f       	sbci	r25, 0xFF	; 255
    16be:	29 e1       	ldi	r18, 0x19	; 25
    16c0:	30 e0       	ldi	r19, 0x00	; 0
    16c2:	fc 01       	movw	r30, r24
    16c4:	31 83       	std	Z+1, r19	; 0x01
    16c6:	20 83       	st	Z, r18
    16c8:	ce 01       	movw	r24, r28
    16ca:	84 58       	subi	r24, 0x84	; 132
    16cc:	9f 4f       	sbci	r25, 0xFF	; 255
    16ce:	fc 01       	movw	r30, r24
    16d0:	80 81       	ld	r24, Z
    16d2:	91 81       	ldd	r25, Z+1	; 0x01
    16d4:	8c 01       	movw	r16, r24
    16d6:	c8 01       	movw	r24, r16
    16d8:	01 97       	sbiw	r24, 0x01	; 1
    16da:	f1 f7       	brne	.-4      	; 0x16d8 <main+0xd6e>
    16dc:	8c 01       	movw	r16, r24
    16de:	ce 01       	movw	r24, r28
    16e0:	84 58       	subi	r24, 0x84	; 132
    16e2:	9f 4f       	sbci	r25, 0xFF	; 255
    16e4:	fc 01       	movw	r30, r24
    16e6:	11 83       	std	Z+1, r17	; 0x01
    16e8:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    16ea:	ce 01       	movw	r24, r28
    16ec:	86 58       	subi	r24, 0x86	; 134
    16ee:	9f 4f       	sbci	r25, 0xFF	; 255
    16f0:	9e 01       	movw	r18, r28
    16f2:	26 58       	subi	r18, 0x86	; 134
    16f4:	3f 4f       	sbci	r19, 0xFF	; 255
    16f6:	f9 01       	movw	r30, r18
    16f8:	20 81       	ld	r18, Z
    16fa:	31 81       	ldd	r19, Z+1	; 0x01
    16fc:	21 50       	subi	r18, 0x01	; 1
    16fe:	30 40       	sbci	r19, 0x00	; 0
    1700:	fc 01       	movw	r30, r24
    1702:	31 83       	std	Z+1, r19	; 0x01
    1704:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1706:	ce 01       	movw	r24, r28
    1708:	86 58       	subi	r24, 0x86	; 134
    170a:	9f 4f       	sbci	r25, 0xFF	; 255
    170c:	fc 01       	movw	r30, r24
    170e:	80 81       	ld	r24, Z
    1710:	91 81       	ldd	r25, Z+1	; 0x01
    1712:	00 97       	sbiw	r24, 0x00	; 0
    1714:	89 f6       	brne	.-94     	; 0x16b8 <main+0xd4e>
    1716:	2f c0       	rjmp	.+94     	; 0x1776 <main+0xe0c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1718:	8e 01       	movw	r16, r28
    171a:	06 58       	subi	r16, 0x86	; 134
    171c:	1f 4f       	sbci	r17, 0xFF	; 255
    171e:	ce 01       	movw	r24, r28
    1720:	8a 58       	subi	r24, 0x8A	; 138
    1722:	9f 4f       	sbci	r25, 0xFF	; 255
    1724:	fc 01       	movw	r30, r24
    1726:	60 81       	ld	r22, Z
    1728:	71 81       	ldd	r23, Z+1	; 0x01
    172a:	82 81       	ldd	r24, Z+2	; 0x02
    172c:	93 81       	ldd	r25, Z+3	; 0x03
    172e:	0e 94 97 13 	call	0x272e	; 0x272e <__fixunssfsi>
    1732:	dc 01       	movw	r26, r24
    1734:	cb 01       	movw	r24, r22
    1736:	f8 01       	movw	r30, r16
    1738:	91 83       	std	Z+1, r25	; 0x01
    173a:	80 83       	st	Z, r24
    173c:	ce 01       	movw	r24, r28
    173e:	82 58       	subi	r24, 0x82	; 130
    1740:	9f 4f       	sbci	r25, 0xFF	; 255
    1742:	9e 01       	movw	r18, r28
    1744:	26 58       	subi	r18, 0x86	; 134
    1746:	3f 4f       	sbci	r19, 0xFF	; 255
    1748:	f9 01       	movw	r30, r18
    174a:	20 81       	ld	r18, Z
    174c:	31 81       	ldd	r19, Z+1	; 0x01
    174e:	fc 01       	movw	r30, r24
    1750:	31 83       	std	Z+1, r19	; 0x01
    1752:	20 83       	st	Z, r18
    1754:	ce 01       	movw	r24, r28
    1756:	82 58       	subi	r24, 0x82	; 130
    1758:	9f 4f       	sbci	r25, 0xFF	; 255
    175a:	fc 01       	movw	r30, r24
    175c:	80 81       	ld	r24, Z
    175e:	91 81       	ldd	r25, Z+1	; 0x01
    1760:	8c 01       	movw	r16, r24
    1762:	c8 01       	movw	r24, r16
    1764:	01 97       	sbiw	r24, 0x01	; 1
    1766:	f1 f7       	brne	.-4      	; 0x1764 <main+0xdfa>
    1768:	8c 01       	movw	r16, r24
    176a:	ce 01       	movw	r24, r28
    176c:	82 58       	subi	r24, 0x82	; 130
    176e:	9f 4f       	sbci	r25, 0xFF	; 255
    1770:	fc 01       	movw	r30, r24
    1772:	11 83       	std	Z+1, r17	; 0x01
    1774:	00 83       	st	Z, r16
			_delay_ms(10);
			writestr("KEY 4");
    1776:	84 e9       	ldi	r24, 0x94	; 148
    1778:	90 e0       	ldi	r25, 0x00	; 0
    177a:	0e 94 9f 02 	call	0x53e	; 0x53e <writestr>
    177e:	9e 01       	movw	r18, r28
    1780:	20 58       	subi	r18, 0x80	; 128
    1782:	3f 4f       	sbci	r19, 0xFF	; 255
    1784:	80 e0       	ldi	r24, 0x00	; 0
    1786:	90 e0       	ldi	r25, 0x00	; 0
    1788:	a8 e4       	ldi	r26, 0x48	; 72
    178a:	b2 e4       	ldi	r27, 0x42	; 66
    178c:	f9 01       	movw	r30, r18
    178e:	80 83       	st	Z, r24
    1790:	91 83       	std	Z+1, r25	; 0x01
    1792:	a2 83       	std	Z+2, r26	; 0x02
    1794:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
    1796:	8e 01       	movw	r16, r28
    1798:	0c 57       	subi	r16, 0x7C	; 124
    179a:	1f 4f       	sbci	r17, 0xFF	; 255
    179c:	ce 01       	movw	r24, r28
    179e:	80 58       	subi	r24, 0x80	; 128
    17a0:	9f 4f       	sbci	r25, 0xFF	; 255
    17a2:	fc 01       	movw	r30, r24
    17a4:	60 81       	ld	r22, Z
    17a6:	71 81       	ldd	r23, Z+1	; 0x01
    17a8:	82 81       	ldd	r24, Z+2	; 0x02
    17aa:	93 81       	ldd	r25, Z+3	; 0x03
    17ac:	20 e0       	ldi	r18, 0x00	; 0
    17ae:	30 e0       	ldi	r19, 0x00	; 0
    17b0:	4a e7       	ldi	r20, 0x7A	; 122
    17b2:	53 e4       	ldi	r21, 0x43	; 67
    17b4:	0e 94 14 14 	call	0x2828	; 0x2828 <__mulsf3>
    17b8:	dc 01       	movw	r26, r24
    17ba:	cb 01       	movw	r24, r22
    17bc:	f8 01       	movw	r30, r16
    17be:	80 83       	st	Z, r24
    17c0:	91 83       	std	Z+1, r25	; 0x01
    17c2:	a2 83       	std	Z+2, r26	; 0x02
    17c4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    17c6:	ce 01       	movw	r24, r28
    17c8:	8c 57       	subi	r24, 0x7C	; 124
    17ca:	9f 4f       	sbci	r25, 0xFF	; 255
    17cc:	11 e0       	ldi	r17, 0x01	; 1
    17ce:	fc 01       	movw	r30, r24
    17d0:	60 81       	ld	r22, Z
    17d2:	71 81       	ldd	r23, Z+1	; 0x01
    17d4:	82 81       	ldd	r24, Z+2	; 0x02
    17d6:	93 81       	ldd	r25, Z+3	; 0x03
    17d8:	20 e0       	ldi	r18, 0x00	; 0
    17da:	30 e0       	ldi	r19, 0x00	; 0
    17dc:	40 e8       	ldi	r20, 0x80	; 128
    17de:	5f e3       	ldi	r21, 0x3F	; 63
    17e0:	0e 94 93 13 	call	0x2726	; 0x2726 <__cmpsf2>
    17e4:	88 23       	and	r24, r24
    17e6:	0c f0       	brlt	.+2      	; 0x17ea <main+0xe80>
    17e8:	10 e0       	ldi	r17, 0x00	; 0
    17ea:	11 23       	and	r17, r17
    17ec:	49 f0       	breq	.+18     	; 0x1800 <main+0xe96>
		__ticks = 1;
    17ee:	ce 01       	movw	r24, r28
    17f0:	88 57       	subi	r24, 0x78	; 120
    17f2:	9f 4f       	sbci	r25, 0xFF	; 255
    17f4:	21 e0       	ldi	r18, 0x01	; 1
    17f6:	30 e0       	ldi	r19, 0x00	; 0
    17f8:	fc 01       	movw	r30, r24
    17fa:	31 83       	std	Z+1, r19	; 0x01
    17fc:	20 83       	st	Z, r18
    17fe:	74 c0       	rjmp	.+232    	; 0x18e8 <main+0xf7e>
	else if (__tmp > 65535)
    1800:	ce 01       	movw	r24, r28
    1802:	8c 57       	subi	r24, 0x7C	; 124
    1804:	9f 4f       	sbci	r25, 0xFF	; 255
    1806:	11 e0       	ldi	r17, 0x01	; 1
    1808:	fc 01       	movw	r30, r24
    180a:	60 81       	ld	r22, Z
    180c:	71 81       	ldd	r23, Z+1	; 0x01
    180e:	82 81       	ldd	r24, Z+2	; 0x02
    1810:	93 81       	ldd	r25, Z+3	; 0x03
    1812:	20 e0       	ldi	r18, 0x00	; 0
    1814:	3f ef       	ldi	r19, 0xFF	; 255
    1816:	4f e7       	ldi	r20, 0x7F	; 127
    1818:	57 e4       	ldi	r21, 0x47	; 71
    181a:	0e 94 10 14 	call	0x2820	; 0x2820 <__gesf2>
    181e:	18 16       	cp	r1, r24
    1820:	0c f0       	brlt	.+2      	; 0x1824 <main+0xeba>
    1822:	10 e0       	ldi	r17, 0x00	; 0
    1824:	11 23       	and	r17, r17
    1826:	09 f4       	brne	.+2      	; 0x182a <main+0xec0>
    1828:	4d c0       	rjmp	.+154    	; 0x18c4 <main+0xf5a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    182a:	ce 01       	movw	r24, r28
    182c:	80 58       	subi	r24, 0x80	; 128
    182e:	9f 4f       	sbci	r25, 0xFF	; 255
    1830:	fc 01       	movw	r30, r24
    1832:	60 81       	ld	r22, Z
    1834:	71 81       	ldd	r23, Z+1	; 0x01
    1836:	82 81       	ldd	r24, Z+2	; 0x02
    1838:	93 81       	ldd	r25, Z+3	; 0x03
    183a:	20 e0       	ldi	r18, 0x00	; 0
    183c:	30 e0       	ldi	r19, 0x00	; 0
    183e:	40 e2       	ldi	r20, 0x20	; 32
    1840:	51 e4       	ldi	r21, 0x41	; 65
    1842:	0e 94 14 14 	call	0x2828	; 0x2828 <__mulsf3>
    1846:	dc 01       	movw	r26, r24
    1848:	cb 01       	movw	r24, r22
    184a:	8e 01       	movw	r16, r28
    184c:	08 57       	subi	r16, 0x78	; 120
    184e:	1f 4f       	sbci	r17, 0xFF	; 255
    1850:	bc 01       	movw	r22, r24
    1852:	cd 01       	movw	r24, r26
    1854:	0e 94 97 13 	call	0x272e	; 0x272e <__fixunssfsi>
    1858:	dc 01       	movw	r26, r24
    185a:	cb 01       	movw	r24, r22
    185c:	f8 01       	movw	r30, r16
    185e:	91 83       	std	Z+1, r25	; 0x01
    1860:	80 83       	st	Z, r24
    1862:	27 c0       	rjmp	.+78     	; 0x18b2 <main+0xf48>
    1864:	ce 01       	movw	r24, r28
    1866:	86 57       	subi	r24, 0x76	; 118
    1868:	9f 4f       	sbci	r25, 0xFF	; 255
    186a:	29 e1       	ldi	r18, 0x19	; 25
    186c:	30 e0       	ldi	r19, 0x00	; 0
    186e:	fc 01       	movw	r30, r24
    1870:	31 83       	std	Z+1, r19	; 0x01
    1872:	20 83       	st	Z, r18
    1874:	ce 01       	movw	r24, r28
    1876:	86 57       	subi	r24, 0x76	; 118
    1878:	9f 4f       	sbci	r25, 0xFF	; 255
    187a:	fc 01       	movw	r30, r24
    187c:	80 81       	ld	r24, Z
    187e:	91 81       	ldd	r25, Z+1	; 0x01
    1880:	8c 01       	movw	r16, r24
    1882:	c8 01       	movw	r24, r16
    1884:	01 97       	sbiw	r24, 0x01	; 1
    1886:	f1 f7       	brne	.-4      	; 0x1884 <main+0xf1a>
    1888:	8c 01       	movw	r16, r24
    188a:	ce 01       	movw	r24, r28
    188c:	86 57       	subi	r24, 0x76	; 118
    188e:	9f 4f       	sbci	r25, 0xFF	; 255
    1890:	fc 01       	movw	r30, r24
    1892:	11 83       	std	Z+1, r17	; 0x01
    1894:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1896:	ce 01       	movw	r24, r28
    1898:	88 57       	subi	r24, 0x78	; 120
    189a:	9f 4f       	sbci	r25, 0xFF	; 255
    189c:	9e 01       	movw	r18, r28
    189e:	28 57       	subi	r18, 0x78	; 120
    18a0:	3f 4f       	sbci	r19, 0xFF	; 255
    18a2:	f9 01       	movw	r30, r18
    18a4:	20 81       	ld	r18, Z
    18a6:	31 81       	ldd	r19, Z+1	; 0x01
    18a8:	21 50       	subi	r18, 0x01	; 1
    18aa:	30 40       	sbci	r19, 0x00	; 0
    18ac:	fc 01       	movw	r30, r24
    18ae:	31 83       	std	Z+1, r19	; 0x01
    18b0:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    18b2:	ce 01       	movw	r24, r28
    18b4:	88 57       	subi	r24, 0x78	; 120
    18b6:	9f 4f       	sbci	r25, 0xFF	; 255
    18b8:	fc 01       	movw	r30, r24
    18ba:	80 81       	ld	r24, Z
    18bc:	91 81       	ldd	r25, Z+1	; 0x01
    18be:	00 97       	sbiw	r24, 0x00	; 0
    18c0:	89 f6       	brne	.-94     	; 0x1864 <main+0xefa>
    18c2:	2f c0       	rjmp	.+94     	; 0x1922 <main+0xfb8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    18c4:	8e 01       	movw	r16, r28
    18c6:	08 57       	subi	r16, 0x78	; 120
    18c8:	1f 4f       	sbci	r17, 0xFF	; 255
    18ca:	ce 01       	movw	r24, r28
    18cc:	8c 57       	subi	r24, 0x7C	; 124
    18ce:	9f 4f       	sbci	r25, 0xFF	; 255
    18d0:	fc 01       	movw	r30, r24
    18d2:	60 81       	ld	r22, Z
    18d4:	71 81       	ldd	r23, Z+1	; 0x01
    18d6:	82 81       	ldd	r24, Z+2	; 0x02
    18d8:	93 81       	ldd	r25, Z+3	; 0x03
    18da:	0e 94 97 13 	call	0x272e	; 0x272e <__fixunssfsi>
    18de:	dc 01       	movw	r26, r24
    18e0:	cb 01       	movw	r24, r22
    18e2:	f8 01       	movw	r30, r16
    18e4:	91 83       	std	Z+1, r25	; 0x01
    18e6:	80 83       	st	Z, r24
    18e8:	ce 01       	movw	r24, r28
    18ea:	84 57       	subi	r24, 0x74	; 116
    18ec:	9f 4f       	sbci	r25, 0xFF	; 255
    18ee:	9e 01       	movw	r18, r28
    18f0:	28 57       	subi	r18, 0x78	; 120
    18f2:	3f 4f       	sbci	r19, 0xFF	; 255
    18f4:	f9 01       	movw	r30, r18
    18f6:	20 81       	ld	r18, Z
    18f8:	31 81       	ldd	r19, Z+1	; 0x01
    18fa:	fc 01       	movw	r30, r24
    18fc:	31 83       	std	Z+1, r19	; 0x01
    18fe:	20 83       	st	Z, r18
    1900:	ce 01       	movw	r24, r28
    1902:	84 57       	subi	r24, 0x74	; 116
    1904:	9f 4f       	sbci	r25, 0xFF	; 255
    1906:	fc 01       	movw	r30, r24
    1908:	80 81       	ld	r24, Z
    190a:	91 81       	ldd	r25, Z+1	; 0x01
    190c:	8c 01       	movw	r16, r24
    190e:	c8 01       	movw	r24, r16
    1910:	01 97       	sbiw	r24, 0x01	; 1
    1912:	f1 f7       	brne	.-4      	; 0x1910 <main+0xfa6>
    1914:	8c 01       	movw	r16, r24
    1916:	ce 01       	movw	r24, r28
    1918:	84 57       	subi	r24, 0x74	; 116
    191a:	9f 4f       	sbci	r25, 0xFF	; 255
    191c:	fc 01       	movw	r30, r24
    191e:	11 83       	std	Z+1, r17	; 0x01
    1920:	00 83       	st	Z, r16
			_delay_ms(50);
			break;
    1922:	ff c6       	rjmp	.+3582   	; 0x2722 <main+0x1db8>
	case 5:   writecmd(0xc5);
    1924:	85 ec       	ldi	r24, 0xC5	; 197
    1926:	0e 94 52 03 	call	0x6a4	; 0x6a4 <writecmd>
			PORTD=arr[a];
    192a:	82 e3       	ldi	r24, 0x32	; 50
    192c:	90 e0       	ldi	r25, 0x00	; 0
    192e:	29 81       	ldd	r18, Y+1	; 0x01
    1930:	22 2f       	mov	r18, r18
    1932:	30 e0       	ldi	r19, 0x00	; 0
    1934:	ae 01       	movw	r20, r28
    1936:	42 50       	subi	r20, 0x02	; 2
    1938:	5f 4f       	sbci	r21, 0xFF	; 255
    193a:	24 0f       	add	r18, r20
    193c:	35 1f       	adc	r19, r21
    193e:	f9 01       	movw	r30, r18
    1940:	20 81       	ld	r18, Z
    1942:	fc 01       	movw	r30, r24
    1944:	20 83       	st	Z, r18
    1946:	9e 01       	movw	r18, r28
    1948:	22 57       	subi	r18, 0x72	; 114
    194a:	3f 4f       	sbci	r19, 0xFF	; 255
    194c:	80 e0       	ldi	r24, 0x00	; 0
    194e:	90 e0       	ldi	r25, 0x00	; 0
    1950:	a0 e2       	ldi	r26, 0x20	; 32
    1952:	b1 e4       	ldi	r27, 0x41	; 65
    1954:	f9 01       	movw	r30, r18
    1956:	80 83       	st	Z, r24
    1958:	91 83       	std	Z+1, r25	; 0x01
    195a:	a2 83       	std	Z+2, r26	; 0x02
    195c:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
    195e:	8e 01       	movw	r16, r28
    1960:	0e 56       	subi	r16, 0x6E	; 110
    1962:	1f 4f       	sbci	r17, 0xFF	; 255
    1964:	ce 01       	movw	r24, r28
    1966:	82 57       	subi	r24, 0x72	; 114
    1968:	9f 4f       	sbci	r25, 0xFF	; 255
    196a:	fc 01       	movw	r30, r24
    196c:	60 81       	ld	r22, Z
    196e:	71 81       	ldd	r23, Z+1	; 0x01
    1970:	82 81       	ldd	r24, Z+2	; 0x02
    1972:	93 81       	ldd	r25, Z+3	; 0x03
    1974:	20 e0       	ldi	r18, 0x00	; 0
    1976:	30 e0       	ldi	r19, 0x00	; 0
    1978:	4a e7       	ldi	r20, 0x7A	; 122
    197a:	53 e4       	ldi	r21, 0x43	; 67
    197c:	0e 94 14 14 	call	0x2828	; 0x2828 <__mulsf3>
    1980:	dc 01       	movw	r26, r24
    1982:	cb 01       	movw	r24, r22
    1984:	f8 01       	movw	r30, r16
    1986:	80 83       	st	Z, r24
    1988:	91 83       	std	Z+1, r25	; 0x01
    198a:	a2 83       	std	Z+2, r26	; 0x02
    198c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    198e:	ce 01       	movw	r24, r28
    1990:	8e 56       	subi	r24, 0x6E	; 110
    1992:	9f 4f       	sbci	r25, 0xFF	; 255
    1994:	11 e0       	ldi	r17, 0x01	; 1
    1996:	fc 01       	movw	r30, r24
    1998:	60 81       	ld	r22, Z
    199a:	71 81       	ldd	r23, Z+1	; 0x01
    199c:	82 81       	ldd	r24, Z+2	; 0x02
    199e:	93 81       	ldd	r25, Z+3	; 0x03
    19a0:	20 e0       	ldi	r18, 0x00	; 0
    19a2:	30 e0       	ldi	r19, 0x00	; 0
    19a4:	40 e8       	ldi	r20, 0x80	; 128
    19a6:	5f e3       	ldi	r21, 0x3F	; 63
    19a8:	0e 94 93 13 	call	0x2726	; 0x2726 <__cmpsf2>
    19ac:	88 23       	and	r24, r24
    19ae:	0c f0       	brlt	.+2      	; 0x19b2 <main+0x1048>
    19b0:	10 e0       	ldi	r17, 0x00	; 0
    19b2:	11 23       	and	r17, r17
    19b4:	49 f0       	breq	.+18     	; 0x19c8 <main+0x105e>
		__ticks = 1;
    19b6:	ce 01       	movw	r24, r28
    19b8:	8a 56       	subi	r24, 0x6A	; 106
    19ba:	9f 4f       	sbci	r25, 0xFF	; 255
    19bc:	21 e0       	ldi	r18, 0x01	; 1
    19be:	30 e0       	ldi	r19, 0x00	; 0
    19c0:	fc 01       	movw	r30, r24
    19c2:	31 83       	std	Z+1, r19	; 0x01
    19c4:	20 83       	st	Z, r18
    19c6:	74 c0       	rjmp	.+232    	; 0x1ab0 <main+0x1146>
	else if (__tmp > 65535)
    19c8:	ce 01       	movw	r24, r28
    19ca:	8e 56       	subi	r24, 0x6E	; 110
    19cc:	9f 4f       	sbci	r25, 0xFF	; 255
    19ce:	11 e0       	ldi	r17, 0x01	; 1
    19d0:	fc 01       	movw	r30, r24
    19d2:	60 81       	ld	r22, Z
    19d4:	71 81       	ldd	r23, Z+1	; 0x01
    19d6:	82 81       	ldd	r24, Z+2	; 0x02
    19d8:	93 81       	ldd	r25, Z+3	; 0x03
    19da:	20 e0       	ldi	r18, 0x00	; 0
    19dc:	3f ef       	ldi	r19, 0xFF	; 255
    19de:	4f e7       	ldi	r20, 0x7F	; 127
    19e0:	57 e4       	ldi	r21, 0x47	; 71
    19e2:	0e 94 10 14 	call	0x2820	; 0x2820 <__gesf2>
    19e6:	18 16       	cp	r1, r24
    19e8:	0c f0       	brlt	.+2      	; 0x19ec <main+0x1082>
    19ea:	10 e0       	ldi	r17, 0x00	; 0
    19ec:	11 23       	and	r17, r17
    19ee:	09 f4       	brne	.+2      	; 0x19f2 <main+0x1088>
    19f0:	4d c0       	rjmp	.+154    	; 0x1a8c <main+0x1122>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    19f2:	ce 01       	movw	r24, r28
    19f4:	82 57       	subi	r24, 0x72	; 114
    19f6:	9f 4f       	sbci	r25, 0xFF	; 255
    19f8:	fc 01       	movw	r30, r24
    19fa:	60 81       	ld	r22, Z
    19fc:	71 81       	ldd	r23, Z+1	; 0x01
    19fe:	82 81       	ldd	r24, Z+2	; 0x02
    1a00:	93 81       	ldd	r25, Z+3	; 0x03
    1a02:	20 e0       	ldi	r18, 0x00	; 0
    1a04:	30 e0       	ldi	r19, 0x00	; 0
    1a06:	40 e2       	ldi	r20, 0x20	; 32
    1a08:	51 e4       	ldi	r21, 0x41	; 65
    1a0a:	0e 94 14 14 	call	0x2828	; 0x2828 <__mulsf3>
    1a0e:	dc 01       	movw	r26, r24
    1a10:	cb 01       	movw	r24, r22
    1a12:	8e 01       	movw	r16, r28
    1a14:	0a 56       	subi	r16, 0x6A	; 106
    1a16:	1f 4f       	sbci	r17, 0xFF	; 255
    1a18:	bc 01       	movw	r22, r24
    1a1a:	cd 01       	movw	r24, r26
    1a1c:	0e 94 97 13 	call	0x272e	; 0x272e <__fixunssfsi>
    1a20:	dc 01       	movw	r26, r24
    1a22:	cb 01       	movw	r24, r22
    1a24:	f8 01       	movw	r30, r16
    1a26:	91 83       	std	Z+1, r25	; 0x01
    1a28:	80 83       	st	Z, r24
    1a2a:	27 c0       	rjmp	.+78     	; 0x1a7a <main+0x1110>
    1a2c:	ce 01       	movw	r24, r28
    1a2e:	88 56       	subi	r24, 0x68	; 104
    1a30:	9f 4f       	sbci	r25, 0xFF	; 255
    1a32:	29 e1       	ldi	r18, 0x19	; 25
    1a34:	30 e0       	ldi	r19, 0x00	; 0
    1a36:	fc 01       	movw	r30, r24
    1a38:	31 83       	std	Z+1, r19	; 0x01
    1a3a:	20 83       	st	Z, r18
    1a3c:	ce 01       	movw	r24, r28
    1a3e:	88 56       	subi	r24, 0x68	; 104
    1a40:	9f 4f       	sbci	r25, 0xFF	; 255
    1a42:	fc 01       	movw	r30, r24
    1a44:	80 81       	ld	r24, Z
    1a46:	91 81       	ldd	r25, Z+1	; 0x01
    1a48:	8c 01       	movw	r16, r24
    1a4a:	c8 01       	movw	r24, r16
    1a4c:	01 97       	sbiw	r24, 0x01	; 1
    1a4e:	f1 f7       	brne	.-4      	; 0x1a4c <main+0x10e2>
    1a50:	8c 01       	movw	r16, r24
    1a52:	ce 01       	movw	r24, r28
    1a54:	88 56       	subi	r24, 0x68	; 104
    1a56:	9f 4f       	sbci	r25, 0xFF	; 255
    1a58:	fc 01       	movw	r30, r24
    1a5a:	11 83       	std	Z+1, r17	; 0x01
    1a5c:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1a5e:	ce 01       	movw	r24, r28
    1a60:	8a 56       	subi	r24, 0x6A	; 106
    1a62:	9f 4f       	sbci	r25, 0xFF	; 255
    1a64:	9e 01       	movw	r18, r28
    1a66:	2a 56       	subi	r18, 0x6A	; 106
    1a68:	3f 4f       	sbci	r19, 0xFF	; 255
    1a6a:	f9 01       	movw	r30, r18
    1a6c:	20 81       	ld	r18, Z
    1a6e:	31 81       	ldd	r19, Z+1	; 0x01
    1a70:	21 50       	subi	r18, 0x01	; 1
    1a72:	30 40       	sbci	r19, 0x00	; 0
    1a74:	fc 01       	movw	r30, r24
    1a76:	31 83       	std	Z+1, r19	; 0x01
    1a78:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1a7a:	ce 01       	movw	r24, r28
    1a7c:	8a 56       	subi	r24, 0x6A	; 106
    1a7e:	9f 4f       	sbci	r25, 0xFF	; 255
    1a80:	fc 01       	movw	r30, r24
    1a82:	80 81       	ld	r24, Z
    1a84:	91 81       	ldd	r25, Z+1	; 0x01
    1a86:	00 97       	sbiw	r24, 0x00	; 0
    1a88:	89 f6       	brne	.-94     	; 0x1a2c <main+0x10c2>
    1a8a:	2f c0       	rjmp	.+94     	; 0x1aea <main+0x1180>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1a8c:	8e 01       	movw	r16, r28
    1a8e:	0a 56       	subi	r16, 0x6A	; 106
    1a90:	1f 4f       	sbci	r17, 0xFF	; 255
    1a92:	ce 01       	movw	r24, r28
    1a94:	8e 56       	subi	r24, 0x6E	; 110
    1a96:	9f 4f       	sbci	r25, 0xFF	; 255
    1a98:	fc 01       	movw	r30, r24
    1a9a:	60 81       	ld	r22, Z
    1a9c:	71 81       	ldd	r23, Z+1	; 0x01
    1a9e:	82 81       	ldd	r24, Z+2	; 0x02
    1aa0:	93 81       	ldd	r25, Z+3	; 0x03
    1aa2:	0e 94 97 13 	call	0x272e	; 0x272e <__fixunssfsi>
    1aa6:	dc 01       	movw	r26, r24
    1aa8:	cb 01       	movw	r24, r22
    1aaa:	f8 01       	movw	r30, r16
    1aac:	91 83       	std	Z+1, r25	; 0x01
    1aae:	80 83       	st	Z, r24
    1ab0:	ce 01       	movw	r24, r28
    1ab2:	86 56       	subi	r24, 0x66	; 102
    1ab4:	9f 4f       	sbci	r25, 0xFF	; 255
    1ab6:	9e 01       	movw	r18, r28
    1ab8:	2a 56       	subi	r18, 0x6A	; 106
    1aba:	3f 4f       	sbci	r19, 0xFF	; 255
    1abc:	f9 01       	movw	r30, r18
    1abe:	20 81       	ld	r18, Z
    1ac0:	31 81       	ldd	r19, Z+1	; 0x01
    1ac2:	fc 01       	movw	r30, r24
    1ac4:	31 83       	std	Z+1, r19	; 0x01
    1ac6:	20 83       	st	Z, r18
    1ac8:	ce 01       	movw	r24, r28
    1aca:	86 56       	subi	r24, 0x66	; 102
    1acc:	9f 4f       	sbci	r25, 0xFF	; 255
    1ace:	fc 01       	movw	r30, r24
    1ad0:	80 81       	ld	r24, Z
    1ad2:	91 81       	ldd	r25, Z+1	; 0x01
    1ad4:	8c 01       	movw	r16, r24
    1ad6:	c8 01       	movw	r24, r16
    1ad8:	01 97       	sbiw	r24, 0x01	; 1
    1ada:	f1 f7       	brne	.-4      	; 0x1ad8 <main+0x116e>
    1adc:	8c 01       	movw	r16, r24
    1ade:	ce 01       	movw	r24, r28
    1ae0:	86 56       	subi	r24, 0x66	; 102
    1ae2:	9f 4f       	sbci	r25, 0xFF	; 255
    1ae4:	fc 01       	movw	r30, r24
    1ae6:	11 83       	std	Z+1, r17	; 0x01
    1ae8:	00 83       	st	Z, r16
			_delay_ms(10);
			writestr("KEY 5");
    1aea:	8a e9       	ldi	r24, 0x9A	; 154
    1aec:	90 e0       	ldi	r25, 0x00	; 0
    1aee:	0e 94 9f 02 	call	0x53e	; 0x53e <writestr>
    1af2:	9e 01       	movw	r18, r28
    1af4:	24 56       	subi	r18, 0x64	; 100
    1af6:	3f 4f       	sbci	r19, 0xFF	; 255
    1af8:	80 e0       	ldi	r24, 0x00	; 0
    1afa:	90 e0       	ldi	r25, 0x00	; 0
    1afc:	a8 e4       	ldi	r26, 0x48	; 72
    1afe:	b2 e4       	ldi	r27, 0x42	; 66
    1b00:	f9 01       	movw	r30, r18
    1b02:	80 83       	st	Z, r24
    1b04:	91 83       	std	Z+1, r25	; 0x01
    1b06:	a2 83       	std	Z+2, r26	; 0x02
    1b08:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
    1b0a:	8e 01       	movw	r16, r28
    1b0c:	00 56       	subi	r16, 0x60	; 96
    1b0e:	1f 4f       	sbci	r17, 0xFF	; 255
    1b10:	ce 01       	movw	r24, r28
    1b12:	84 56       	subi	r24, 0x64	; 100
    1b14:	9f 4f       	sbci	r25, 0xFF	; 255
    1b16:	fc 01       	movw	r30, r24
    1b18:	60 81       	ld	r22, Z
    1b1a:	71 81       	ldd	r23, Z+1	; 0x01
    1b1c:	82 81       	ldd	r24, Z+2	; 0x02
    1b1e:	93 81       	ldd	r25, Z+3	; 0x03
    1b20:	20 e0       	ldi	r18, 0x00	; 0
    1b22:	30 e0       	ldi	r19, 0x00	; 0
    1b24:	4a e7       	ldi	r20, 0x7A	; 122
    1b26:	53 e4       	ldi	r21, 0x43	; 67
    1b28:	0e 94 14 14 	call	0x2828	; 0x2828 <__mulsf3>
    1b2c:	dc 01       	movw	r26, r24
    1b2e:	cb 01       	movw	r24, r22
    1b30:	f8 01       	movw	r30, r16
    1b32:	80 83       	st	Z, r24
    1b34:	91 83       	std	Z+1, r25	; 0x01
    1b36:	a2 83       	std	Z+2, r26	; 0x02
    1b38:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1b3a:	ce 01       	movw	r24, r28
    1b3c:	80 56       	subi	r24, 0x60	; 96
    1b3e:	9f 4f       	sbci	r25, 0xFF	; 255
    1b40:	11 e0       	ldi	r17, 0x01	; 1
    1b42:	fc 01       	movw	r30, r24
    1b44:	60 81       	ld	r22, Z
    1b46:	71 81       	ldd	r23, Z+1	; 0x01
    1b48:	82 81       	ldd	r24, Z+2	; 0x02
    1b4a:	93 81       	ldd	r25, Z+3	; 0x03
    1b4c:	20 e0       	ldi	r18, 0x00	; 0
    1b4e:	30 e0       	ldi	r19, 0x00	; 0
    1b50:	40 e8       	ldi	r20, 0x80	; 128
    1b52:	5f e3       	ldi	r21, 0x3F	; 63
    1b54:	0e 94 93 13 	call	0x2726	; 0x2726 <__cmpsf2>
    1b58:	88 23       	and	r24, r24
    1b5a:	0c f0       	brlt	.+2      	; 0x1b5e <main+0x11f4>
    1b5c:	10 e0       	ldi	r17, 0x00	; 0
    1b5e:	11 23       	and	r17, r17
    1b60:	49 f0       	breq	.+18     	; 0x1b74 <main+0x120a>
		__ticks = 1;
    1b62:	ce 01       	movw	r24, r28
    1b64:	8c 55       	subi	r24, 0x5C	; 92
    1b66:	9f 4f       	sbci	r25, 0xFF	; 255
    1b68:	21 e0       	ldi	r18, 0x01	; 1
    1b6a:	30 e0       	ldi	r19, 0x00	; 0
    1b6c:	fc 01       	movw	r30, r24
    1b6e:	31 83       	std	Z+1, r19	; 0x01
    1b70:	20 83       	st	Z, r18
    1b72:	74 c0       	rjmp	.+232    	; 0x1c5c <main+0x12f2>
	else if (__tmp > 65535)
    1b74:	ce 01       	movw	r24, r28
    1b76:	80 56       	subi	r24, 0x60	; 96
    1b78:	9f 4f       	sbci	r25, 0xFF	; 255
    1b7a:	11 e0       	ldi	r17, 0x01	; 1
    1b7c:	fc 01       	movw	r30, r24
    1b7e:	60 81       	ld	r22, Z
    1b80:	71 81       	ldd	r23, Z+1	; 0x01
    1b82:	82 81       	ldd	r24, Z+2	; 0x02
    1b84:	93 81       	ldd	r25, Z+3	; 0x03
    1b86:	20 e0       	ldi	r18, 0x00	; 0
    1b88:	3f ef       	ldi	r19, 0xFF	; 255
    1b8a:	4f e7       	ldi	r20, 0x7F	; 127
    1b8c:	57 e4       	ldi	r21, 0x47	; 71
    1b8e:	0e 94 10 14 	call	0x2820	; 0x2820 <__gesf2>
    1b92:	18 16       	cp	r1, r24
    1b94:	0c f0       	brlt	.+2      	; 0x1b98 <main+0x122e>
    1b96:	10 e0       	ldi	r17, 0x00	; 0
    1b98:	11 23       	and	r17, r17
    1b9a:	09 f4       	brne	.+2      	; 0x1b9e <main+0x1234>
    1b9c:	4d c0       	rjmp	.+154    	; 0x1c38 <main+0x12ce>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1b9e:	ce 01       	movw	r24, r28
    1ba0:	84 56       	subi	r24, 0x64	; 100
    1ba2:	9f 4f       	sbci	r25, 0xFF	; 255
    1ba4:	fc 01       	movw	r30, r24
    1ba6:	60 81       	ld	r22, Z
    1ba8:	71 81       	ldd	r23, Z+1	; 0x01
    1baa:	82 81       	ldd	r24, Z+2	; 0x02
    1bac:	93 81       	ldd	r25, Z+3	; 0x03
    1bae:	20 e0       	ldi	r18, 0x00	; 0
    1bb0:	30 e0       	ldi	r19, 0x00	; 0
    1bb2:	40 e2       	ldi	r20, 0x20	; 32
    1bb4:	51 e4       	ldi	r21, 0x41	; 65
    1bb6:	0e 94 14 14 	call	0x2828	; 0x2828 <__mulsf3>
    1bba:	dc 01       	movw	r26, r24
    1bbc:	cb 01       	movw	r24, r22
    1bbe:	8e 01       	movw	r16, r28
    1bc0:	0c 55       	subi	r16, 0x5C	; 92
    1bc2:	1f 4f       	sbci	r17, 0xFF	; 255
    1bc4:	bc 01       	movw	r22, r24
    1bc6:	cd 01       	movw	r24, r26
    1bc8:	0e 94 97 13 	call	0x272e	; 0x272e <__fixunssfsi>
    1bcc:	dc 01       	movw	r26, r24
    1bce:	cb 01       	movw	r24, r22
    1bd0:	f8 01       	movw	r30, r16
    1bd2:	91 83       	std	Z+1, r25	; 0x01
    1bd4:	80 83       	st	Z, r24
    1bd6:	27 c0       	rjmp	.+78     	; 0x1c26 <main+0x12bc>
    1bd8:	ce 01       	movw	r24, r28
    1bda:	8a 55       	subi	r24, 0x5A	; 90
    1bdc:	9f 4f       	sbci	r25, 0xFF	; 255
    1bde:	29 e1       	ldi	r18, 0x19	; 25
    1be0:	30 e0       	ldi	r19, 0x00	; 0
    1be2:	fc 01       	movw	r30, r24
    1be4:	31 83       	std	Z+1, r19	; 0x01
    1be6:	20 83       	st	Z, r18
    1be8:	ce 01       	movw	r24, r28
    1bea:	8a 55       	subi	r24, 0x5A	; 90
    1bec:	9f 4f       	sbci	r25, 0xFF	; 255
    1bee:	fc 01       	movw	r30, r24
    1bf0:	80 81       	ld	r24, Z
    1bf2:	91 81       	ldd	r25, Z+1	; 0x01
    1bf4:	8c 01       	movw	r16, r24
    1bf6:	c8 01       	movw	r24, r16
    1bf8:	01 97       	sbiw	r24, 0x01	; 1
    1bfa:	f1 f7       	brne	.-4      	; 0x1bf8 <main+0x128e>
    1bfc:	8c 01       	movw	r16, r24
    1bfe:	ce 01       	movw	r24, r28
    1c00:	8a 55       	subi	r24, 0x5A	; 90
    1c02:	9f 4f       	sbci	r25, 0xFF	; 255
    1c04:	fc 01       	movw	r30, r24
    1c06:	11 83       	std	Z+1, r17	; 0x01
    1c08:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1c0a:	ce 01       	movw	r24, r28
    1c0c:	8c 55       	subi	r24, 0x5C	; 92
    1c0e:	9f 4f       	sbci	r25, 0xFF	; 255
    1c10:	9e 01       	movw	r18, r28
    1c12:	2c 55       	subi	r18, 0x5C	; 92
    1c14:	3f 4f       	sbci	r19, 0xFF	; 255
    1c16:	f9 01       	movw	r30, r18
    1c18:	20 81       	ld	r18, Z
    1c1a:	31 81       	ldd	r19, Z+1	; 0x01
    1c1c:	21 50       	subi	r18, 0x01	; 1
    1c1e:	30 40       	sbci	r19, 0x00	; 0
    1c20:	fc 01       	movw	r30, r24
    1c22:	31 83       	std	Z+1, r19	; 0x01
    1c24:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c26:	ce 01       	movw	r24, r28
    1c28:	8c 55       	subi	r24, 0x5C	; 92
    1c2a:	9f 4f       	sbci	r25, 0xFF	; 255
    1c2c:	fc 01       	movw	r30, r24
    1c2e:	80 81       	ld	r24, Z
    1c30:	91 81       	ldd	r25, Z+1	; 0x01
    1c32:	00 97       	sbiw	r24, 0x00	; 0
    1c34:	89 f6       	brne	.-94     	; 0x1bd8 <main+0x126e>
    1c36:	2f c0       	rjmp	.+94     	; 0x1c96 <main+0x132c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c38:	8e 01       	movw	r16, r28
    1c3a:	0c 55       	subi	r16, 0x5C	; 92
    1c3c:	1f 4f       	sbci	r17, 0xFF	; 255
    1c3e:	ce 01       	movw	r24, r28
    1c40:	80 56       	subi	r24, 0x60	; 96
    1c42:	9f 4f       	sbci	r25, 0xFF	; 255
    1c44:	fc 01       	movw	r30, r24
    1c46:	60 81       	ld	r22, Z
    1c48:	71 81       	ldd	r23, Z+1	; 0x01
    1c4a:	82 81       	ldd	r24, Z+2	; 0x02
    1c4c:	93 81       	ldd	r25, Z+3	; 0x03
    1c4e:	0e 94 97 13 	call	0x272e	; 0x272e <__fixunssfsi>
    1c52:	dc 01       	movw	r26, r24
    1c54:	cb 01       	movw	r24, r22
    1c56:	f8 01       	movw	r30, r16
    1c58:	91 83       	std	Z+1, r25	; 0x01
    1c5a:	80 83       	st	Z, r24
    1c5c:	ce 01       	movw	r24, r28
    1c5e:	88 55       	subi	r24, 0x58	; 88
    1c60:	9f 4f       	sbci	r25, 0xFF	; 255
    1c62:	9e 01       	movw	r18, r28
    1c64:	2c 55       	subi	r18, 0x5C	; 92
    1c66:	3f 4f       	sbci	r19, 0xFF	; 255
    1c68:	f9 01       	movw	r30, r18
    1c6a:	20 81       	ld	r18, Z
    1c6c:	31 81       	ldd	r19, Z+1	; 0x01
    1c6e:	fc 01       	movw	r30, r24
    1c70:	31 83       	std	Z+1, r19	; 0x01
    1c72:	20 83       	st	Z, r18
    1c74:	ce 01       	movw	r24, r28
    1c76:	88 55       	subi	r24, 0x58	; 88
    1c78:	9f 4f       	sbci	r25, 0xFF	; 255
    1c7a:	fc 01       	movw	r30, r24
    1c7c:	80 81       	ld	r24, Z
    1c7e:	91 81       	ldd	r25, Z+1	; 0x01
    1c80:	8c 01       	movw	r16, r24
    1c82:	c8 01       	movw	r24, r16
    1c84:	01 97       	sbiw	r24, 0x01	; 1
    1c86:	f1 f7       	brne	.-4      	; 0x1c84 <main+0x131a>
    1c88:	8c 01       	movw	r16, r24
    1c8a:	ce 01       	movw	r24, r28
    1c8c:	88 55       	subi	r24, 0x58	; 88
    1c8e:	9f 4f       	sbci	r25, 0xFF	; 255
    1c90:	fc 01       	movw	r30, r24
    1c92:	11 83       	std	Z+1, r17	; 0x01
    1c94:	00 83       	st	Z, r16
			_delay_ms(50);
			break;
    1c96:	45 c5       	rjmp	.+2698   	; 0x2722 <main+0x1db8>
	case 6:  writecmd(0xc5);
    1c98:	85 ec       	ldi	r24, 0xC5	; 197
    1c9a:	0e 94 52 03 	call	0x6a4	; 0x6a4 <writecmd>
			PORTD=arr[a];
    1c9e:	82 e3       	ldi	r24, 0x32	; 50
    1ca0:	90 e0       	ldi	r25, 0x00	; 0
    1ca2:	29 81       	ldd	r18, Y+1	; 0x01
    1ca4:	22 2f       	mov	r18, r18
    1ca6:	30 e0       	ldi	r19, 0x00	; 0
    1ca8:	ae 01       	movw	r20, r28
    1caa:	42 50       	subi	r20, 0x02	; 2
    1cac:	5f 4f       	sbci	r21, 0xFF	; 255
    1cae:	24 0f       	add	r18, r20
    1cb0:	35 1f       	adc	r19, r21
    1cb2:	f9 01       	movw	r30, r18
    1cb4:	20 81       	ld	r18, Z
    1cb6:	fc 01       	movw	r30, r24
    1cb8:	20 83       	st	Z, r18
    1cba:	9e 01       	movw	r18, r28
    1cbc:	26 55       	subi	r18, 0x56	; 86
    1cbe:	3f 4f       	sbci	r19, 0xFF	; 255
    1cc0:	80 e0       	ldi	r24, 0x00	; 0
    1cc2:	90 e0       	ldi	r25, 0x00	; 0
    1cc4:	a0 e2       	ldi	r26, 0x20	; 32
    1cc6:	b1 e4       	ldi	r27, 0x41	; 65
    1cc8:	f9 01       	movw	r30, r18
    1cca:	80 83       	st	Z, r24
    1ccc:	91 83       	std	Z+1, r25	; 0x01
    1cce:	a2 83       	std	Z+2, r26	; 0x02
    1cd0:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
    1cd2:	8e 01       	movw	r16, r28
    1cd4:	02 55       	subi	r16, 0x52	; 82
    1cd6:	1f 4f       	sbci	r17, 0xFF	; 255
    1cd8:	ce 01       	movw	r24, r28
    1cda:	86 55       	subi	r24, 0x56	; 86
    1cdc:	9f 4f       	sbci	r25, 0xFF	; 255
    1cde:	fc 01       	movw	r30, r24
    1ce0:	60 81       	ld	r22, Z
    1ce2:	71 81       	ldd	r23, Z+1	; 0x01
    1ce4:	82 81       	ldd	r24, Z+2	; 0x02
    1ce6:	93 81       	ldd	r25, Z+3	; 0x03
    1ce8:	20 e0       	ldi	r18, 0x00	; 0
    1cea:	30 e0       	ldi	r19, 0x00	; 0
    1cec:	4a e7       	ldi	r20, 0x7A	; 122
    1cee:	53 e4       	ldi	r21, 0x43	; 67
    1cf0:	0e 94 14 14 	call	0x2828	; 0x2828 <__mulsf3>
    1cf4:	dc 01       	movw	r26, r24
    1cf6:	cb 01       	movw	r24, r22
    1cf8:	f8 01       	movw	r30, r16
    1cfa:	80 83       	st	Z, r24
    1cfc:	91 83       	std	Z+1, r25	; 0x01
    1cfe:	a2 83       	std	Z+2, r26	; 0x02
    1d00:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1d02:	ce 01       	movw	r24, r28
    1d04:	82 55       	subi	r24, 0x52	; 82
    1d06:	9f 4f       	sbci	r25, 0xFF	; 255
    1d08:	11 e0       	ldi	r17, 0x01	; 1
    1d0a:	fc 01       	movw	r30, r24
    1d0c:	60 81       	ld	r22, Z
    1d0e:	71 81       	ldd	r23, Z+1	; 0x01
    1d10:	82 81       	ldd	r24, Z+2	; 0x02
    1d12:	93 81       	ldd	r25, Z+3	; 0x03
    1d14:	20 e0       	ldi	r18, 0x00	; 0
    1d16:	30 e0       	ldi	r19, 0x00	; 0
    1d18:	40 e8       	ldi	r20, 0x80	; 128
    1d1a:	5f e3       	ldi	r21, 0x3F	; 63
    1d1c:	0e 94 93 13 	call	0x2726	; 0x2726 <__cmpsf2>
    1d20:	88 23       	and	r24, r24
    1d22:	0c f0       	brlt	.+2      	; 0x1d26 <main+0x13bc>
    1d24:	10 e0       	ldi	r17, 0x00	; 0
    1d26:	11 23       	and	r17, r17
    1d28:	49 f0       	breq	.+18     	; 0x1d3c <main+0x13d2>
		__ticks = 1;
    1d2a:	ce 01       	movw	r24, r28
    1d2c:	8e 54       	subi	r24, 0x4E	; 78
    1d2e:	9f 4f       	sbci	r25, 0xFF	; 255
    1d30:	21 e0       	ldi	r18, 0x01	; 1
    1d32:	30 e0       	ldi	r19, 0x00	; 0
    1d34:	fc 01       	movw	r30, r24
    1d36:	31 83       	std	Z+1, r19	; 0x01
    1d38:	20 83       	st	Z, r18
    1d3a:	74 c0       	rjmp	.+232    	; 0x1e24 <main+0x14ba>
	else if (__tmp > 65535)
    1d3c:	ce 01       	movw	r24, r28
    1d3e:	82 55       	subi	r24, 0x52	; 82
    1d40:	9f 4f       	sbci	r25, 0xFF	; 255
    1d42:	11 e0       	ldi	r17, 0x01	; 1
    1d44:	fc 01       	movw	r30, r24
    1d46:	60 81       	ld	r22, Z
    1d48:	71 81       	ldd	r23, Z+1	; 0x01
    1d4a:	82 81       	ldd	r24, Z+2	; 0x02
    1d4c:	93 81       	ldd	r25, Z+3	; 0x03
    1d4e:	20 e0       	ldi	r18, 0x00	; 0
    1d50:	3f ef       	ldi	r19, 0xFF	; 255
    1d52:	4f e7       	ldi	r20, 0x7F	; 127
    1d54:	57 e4       	ldi	r21, 0x47	; 71
    1d56:	0e 94 10 14 	call	0x2820	; 0x2820 <__gesf2>
    1d5a:	18 16       	cp	r1, r24
    1d5c:	0c f0       	brlt	.+2      	; 0x1d60 <main+0x13f6>
    1d5e:	10 e0       	ldi	r17, 0x00	; 0
    1d60:	11 23       	and	r17, r17
    1d62:	09 f4       	brne	.+2      	; 0x1d66 <main+0x13fc>
    1d64:	4d c0       	rjmp	.+154    	; 0x1e00 <main+0x1496>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d66:	ce 01       	movw	r24, r28
    1d68:	86 55       	subi	r24, 0x56	; 86
    1d6a:	9f 4f       	sbci	r25, 0xFF	; 255
    1d6c:	fc 01       	movw	r30, r24
    1d6e:	60 81       	ld	r22, Z
    1d70:	71 81       	ldd	r23, Z+1	; 0x01
    1d72:	82 81       	ldd	r24, Z+2	; 0x02
    1d74:	93 81       	ldd	r25, Z+3	; 0x03
    1d76:	20 e0       	ldi	r18, 0x00	; 0
    1d78:	30 e0       	ldi	r19, 0x00	; 0
    1d7a:	40 e2       	ldi	r20, 0x20	; 32
    1d7c:	51 e4       	ldi	r21, 0x41	; 65
    1d7e:	0e 94 14 14 	call	0x2828	; 0x2828 <__mulsf3>
    1d82:	dc 01       	movw	r26, r24
    1d84:	cb 01       	movw	r24, r22
    1d86:	8e 01       	movw	r16, r28
    1d88:	0e 54       	subi	r16, 0x4E	; 78
    1d8a:	1f 4f       	sbci	r17, 0xFF	; 255
    1d8c:	bc 01       	movw	r22, r24
    1d8e:	cd 01       	movw	r24, r26
    1d90:	0e 94 97 13 	call	0x272e	; 0x272e <__fixunssfsi>
    1d94:	dc 01       	movw	r26, r24
    1d96:	cb 01       	movw	r24, r22
    1d98:	f8 01       	movw	r30, r16
    1d9a:	91 83       	std	Z+1, r25	; 0x01
    1d9c:	80 83       	st	Z, r24
    1d9e:	27 c0       	rjmp	.+78     	; 0x1dee <main+0x1484>
    1da0:	ce 01       	movw	r24, r28
    1da2:	8c 54       	subi	r24, 0x4C	; 76
    1da4:	9f 4f       	sbci	r25, 0xFF	; 255
    1da6:	29 e1       	ldi	r18, 0x19	; 25
    1da8:	30 e0       	ldi	r19, 0x00	; 0
    1daa:	fc 01       	movw	r30, r24
    1dac:	31 83       	std	Z+1, r19	; 0x01
    1dae:	20 83       	st	Z, r18
    1db0:	ce 01       	movw	r24, r28
    1db2:	8c 54       	subi	r24, 0x4C	; 76
    1db4:	9f 4f       	sbci	r25, 0xFF	; 255
    1db6:	fc 01       	movw	r30, r24
    1db8:	80 81       	ld	r24, Z
    1dba:	91 81       	ldd	r25, Z+1	; 0x01
    1dbc:	8c 01       	movw	r16, r24
    1dbe:	c8 01       	movw	r24, r16
    1dc0:	01 97       	sbiw	r24, 0x01	; 1
    1dc2:	f1 f7       	brne	.-4      	; 0x1dc0 <main+0x1456>
    1dc4:	8c 01       	movw	r16, r24
    1dc6:	ce 01       	movw	r24, r28
    1dc8:	8c 54       	subi	r24, 0x4C	; 76
    1dca:	9f 4f       	sbci	r25, 0xFF	; 255
    1dcc:	fc 01       	movw	r30, r24
    1dce:	11 83       	std	Z+1, r17	; 0x01
    1dd0:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1dd2:	ce 01       	movw	r24, r28
    1dd4:	8e 54       	subi	r24, 0x4E	; 78
    1dd6:	9f 4f       	sbci	r25, 0xFF	; 255
    1dd8:	9e 01       	movw	r18, r28
    1dda:	2e 54       	subi	r18, 0x4E	; 78
    1ddc:	3f 4f       	sbci	r19, 0xFF	; 255
    1dde:	f9 01       	movw	r30, r18
    1de0:	20 81       	ld	r18, Z
    1de2:	31 81       	ldd	r19, Z+1	; 0x01
    1de4:	21 50       	subi	r18, 0x01	; 1
    1de6:	30 40       	sbci	r19, 0x00	; 0
    1de8:	fc 01       	movw	r30, r24
    1dea:	31 83       	std	Z+1, r19	; 0x01
    1dec:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1dee:	ce 01       	movw	r24, r28
    1df0:	8e 54       	subi	r24, 0x4E	; 78
    1df2:	9f 4f       	sbci	r25, 0xFF	; 255
    1df4:	fc 01       	movw	r30, r24
    1df6:	80 81       	ld	r24, Z
    1df8:	91 81       	ldd	r25, Z+1	; 0x01
    1dfa:	00 97       	sbiw	r24, 0x00	; 0
    1dfc:	89 f6       	brne	.-94     	; 0x1da0 <main+0x1436>
    1dfe:	2f c0       	rjmp	.+94     	; 0x1e5e <main+0x14f4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e00:	8e 01       	movw	r16, r28
    1e02:	0e 54       	subi	r16, 0x4E	; 78
    1e04:	1f 4f       	sbci	r17, 0xFF	; 255
    1e06:	ce 01       	movw	r24, r28
    1e08:	82 55       	subi	r24, 0x52	; 82
    1e0a:	9f 4f       	sbci	r25, 0xFF	; 255
    1e0c:	fc 01       	movw	r30, r24
    1e0e:	60 81       	ld	r22, Z
    1e10:	71 81       	ldd	r23, Z+1	; 0x01
    1e12:	82 81       	ldd	r24, Z+2	; 0x02
    1e14:	93 81       	ldd	r25, Z+3	; 0x03
    1e16:	0e 94 97 13 	call	0x272e	; 0x272e <__fixunssfsi>
    1e1a:	dc 01       	movw	r26, r24
    1e1c:	cb 01       	movw	r24, r22
    1e1e:	f8 01       	movw	r30, r16
    1e20:	91 83       	std	Z+1, r25	; 0x01
    1e22:	80 83       	st	Z, r24
    1e24:	ce 01       	movw	r24, r28
    1e26:	8a 54       	subi	r24, 0x4A	; 74
    1e28:	9f 4f       	sbci	r25, 0xFF	; 255
    1e2a:	9e 01       	movw	r18, r28
    1e2c:	2e 54       	subi	r18, 0x4E	; 78
    1e2e:	3f 4f       	sbci	r19, 0xFF	; 255
    1e30:	f9 01       	movw	r30, r18
    1e32:	20 81       	ld	r18, Z
    1e34:	31 81       	ldd	r19, Z+1	; 0x01
    1e36:	fc 01       	movw	r30, r24
    1e38:	31 83       	std	Z+1, r19	; 0x01
    1e3a:	20 83       	st	Z, r18
    1e3c:	ce 01       	movw	r24, r28
    1e3e:	8a 54       	subi	r24, 0x4A	; 74
    1e40:	9f 4f       	sbci	r25, 0xFF	; 255
    1e42:	fc 01       	movw	r30, r24
    1e44:	80 81       	ld	r24, Z
    1e46:	91 81       	ldd	r25, Z+1	; 0x01
    1e48:	8c 01       	movw	r16, r24
    1e4a:	c8 01       	movw	r24, r16
    1e4c:	01 97       	sbiw	r24, 0x01	; 1
    1e4e:	f1 f7       	brne	.-4      	; 0x1e4c <main+0x14e2>
    1e50:	8c 01       	movw	r16, r24
    1e52:	ce 01       	movw	r24, r28
    1e54:	8a 54       	subi	r24, 0x4A	; 74
    1e56:	9f 4f       	sbci	r25, 0xFF	; 255
    1e58:	fc 01       	movw	r30, r24
    1e5a:	11 83       	std	Z+1, r17	; 0x01
    1e5c:	00 83       	st	Z, r16
			_delay_ms(10);
			writestr("KEY 6");
    1e5e:	80 ea       	ldi	r24, 0xA0	; 160
    1e60:	90 e0       	ldi	r25, 0x00	; 0
    1e62:	0e 94 9f 02 	call	0x53e	; 0x53e <writestr>
    1e66:	9e 01       	movw	r18, r28
    1e68:	28 54       	subi	r18, 0x48	; 72
    1e6a:	3f 4f       	sbci	r19, 0xFF	; 255
    1e6c:	80 e0       	ldi	r24, 0x00	; 0
    1e6e:	90 e0       	ldi	r25, 0x00	; 0
    1e70:	a8 e4       	ldi	r26, 0x48	; 72
    1e72:	b2 e4       	ldi	r27, 0x42	; 66
    1e74:	f9 01       	movw	r30, r18
    1e76:	80 83       	st	Z, r24
    1e78:	91 83       	std	Z+1, r25	; 0x01
    1e7a:	a2 83       	std	Z+2, r26	; 0x02
    1e7c:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
    1e7e:	8e 01       	movw	r16, r28
    1e80:	04 54       	subi	r16, 0x44	; 68
    1e82:	1f 4f       	sbci	r17, 0xFF	; 255
    1e84:	ce 01       	movw	r24, r28
    1e86:	88 54       	subi	r24, 0x48	; 72
    1e88:	9f 4f       	sbci	r25, 0xFF	; 255
    1e8a:	fc 01       	movw	r30, r24
    1e8c:	60 81       	ld	r22, Z
    1e8e:	71 81       	ldd	r23, Z+1	; 0x01
    1e90:	82 81       	ldd	r24, Z+2	; 0x02
    1e92:	93 81       	ldd	r25, Z+3	; 0x03
    1e94:	20 e0       	ldi	r18, 0x00	; 0
    1e96:	30 e0       	ldi	r19, 0x00	; 0
    1e98:	4a e7       	ldi	r20, 0x7A	; 122
    1e9a:	53 e4       	ldi	r21, 0x43	; 67
    1e9c:	0e 94 14 14 	call	0x2828	; 0x2828 <__mulsf3>
    1ea0:	dc 01       	movw	r26, r24
    1ea2:	cb 01       	movw	r24, r22
    1ea4:	f8 01       	movw	r30, r16
    1ea6:	80 83       	st	Z, r24
    1ea8:	91 83       	std	Z+1, r25	; 0x01
    1eaa:	a2 83       	std	Z+2, r26	; 0x02
    1eac:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1eae:	ce 01       	movw	r24, r28
    1eb0:	84 54       	subi	r24, 0x44	; 68
    1eb2:	9f 4f       	sbci	r25, 0xFF	; 255
    1eb4:	11 e0       	ldi	r17, 0x01	; 1
    1eb6:	fc 01       	movw	r30, r24
    1eb8:	60 81       	ld	r22, Z
    1eba:	71 81       	ldd	r23, Z+1	; 0x01
    1ebc:	82 81       	ldd	r24, Z+2	; 0x02
    1ebe:	93 81       	ldd	r25, Z+3	; 0x03
    1ec0:	20 e0       	ldi	r18, 0x00	; 0
    1ec2:	30 e0       	ldi	r19, 0x00	; 0
    1ec4:	40 e8       	ldi	r20, 0x80	; 128
    1ec6:	5f e3       	ldi	r21, 0x3F	; 63
    1ec8:	0e 94 93 13 	call	0x2726	; 0x2726 <__cmpsf2>
    1ecc:	88 23       	and	r24, r24
    1ece:	0c f0       	brlt	.+2      	; 0x1ed2 <main+0x1568>
    1ed0:	10 e0       	ldi	r17, 0x00	; 0
    1ed2:	11 23       	and	r17, r17
    1ed4:	49 f0       	breq	.+18     	; 0x1ee8 <main+0x157e>
		__ticks = 1;
    1ed6:	ce 01       	movw	r24, r28
    1ed8:	80 54       	subi	r24, 0x40	; 64
    1eda:	9f 4f       	sbci	r25, 0xFF	; 255
    1edc:	21 e0       	ldi	r18, 0x01	; 1
    1ede:	30 e0       	ldi	r19, 0x00	; 0
    1ee0:	fc 01       	movw	r30, r24
    1ee2:	31 83       	std	Z+1, r19	; 0x01
    1ee4:	20 83       	st	Z, r18
    1ee6:	74 c0       	rjmp	.+232    	; 0x1fd0 <main+0x1666>
	else if (__tmp > 65535)
    1ee8:	ce 01       	movw	r24, r28
    1eea:	84 54       	subi	r24, 0x44	; 68
    1eec:	9f 4f       	sbci	r25, 0xFF	; 255
    1eee:	11 e0       	ldi	r17, 0x01	; 1
    1ef0:	fc 01       	movw	r30, r24
    1ef2:	60 81       	ld	r22, Z
    1ef4:	71 81       	ldd	r23, Z+1	; 0x01
    1ef6:	82 81       	ldd	r24, Z+2	; 0x02
    1ef8:	93 81       	ldd	r25, Z+3	; 0x03
    1efa:	20 e0       	ldi	r18, 0x00	; 0
    1efc:	3f ef       	ldi	r19, 0xFF	; 255
    1efe:	4f e7       	ldi	r20, 0x7F	; 127
    1f00:	57 e4       	ldi	r21, 0x47	; 71
    1f02:	0e 94 10 14 	call	0x2820	; 0x2820 <__gesf2>
    1f06:	18 16       	cp	r1, r24
    1f08:	0c f0       	brlt	.+2      	; 0x1f0c <main+0x15a2>
    1f0a:	10 e0       	ldi	r17, 0x00	; 0
    1f0c:	11 23       	and	r17, r17
    1f0e:	09 f4       	brne	.+2      	; 0x1f12 <main+0x15a8>
    1f10:	4d c0       	rjmp	.+154    	; 0x1fac <main+0x1642>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1f12:	ce 01       	movw	r24, r28
    1f14:	88 54       	subi	r24, 0x48	; 72
    1f16:	9f 4f       	sbci	r25, 0xFF	; 255
    1f18:	fc 01       	movw	r30, r24
    1f1a:	60 81       	ld	r22, Z
    1f1c:	71 81       	ldd	r23, Z+1	; 0x01
    1f1e:	82 81       	ldd	r24, Z+2	; 0x02
    1f20:	93 81       	ldd	r25, Z+3	; 0x03
    1f22:	20 e0       	ldi	r18, 0x00	; 0
    1f24:	30 e0       	ldi	r19, 0x00	; 0
    1f26:	40 e2       	ldi	r20, 0x20	; 32
    1f28:	51 e4       	ldi	r21, 0x41	; 65
    1f2a:	0e 94 14 14 	call	0x2828	; 0x2828 <__mulsf3>
    1f2e:	dc 01       	movw	r26, r24
    1f30:	cb 01       	movw	r24, r22
    1f32:	8e 01       	movw	r16, r28
    1f34:	00 54       	subi	r16, 0x40	; 64
    1f36:	1f 4f       	sbci	r17, 0xFF	; 255
    1f38:	bc 01       	movw	r22, r24
    1f3a:	cd 01       	movw	r24, r26
    1f3c:	0e 94 97 13 	call	0x272e	; 0x272e <__fixunssfsi>
    1f40:	dc 01       	movw	r26, r24
    1f42:	cb 01       	movw	r24, r22
    1f44:	f8 01       	movw	r30, r16
    1f46:	91 83       	std	Z+1, r25	; 0x01
    1f48:	80 83       	st	Z, r24
    1f4a:	27 c0       	rjmp	.+78     	; 0x1f9a <main+0x1630>
    1f4c:	ce 01       	movw	r24, r28
    1f4e:	8e 53       	subi	r24, 0x3E	; 62
    1f50:	9f 4f       	sbci	r25, 0xFF	; 255
    1f52:	29 e1       	ldi	r18, 0x19	; 25
    1f54:	30 e0       	ldi	r19, 0x00	; 0
    1f56:	fc 01       	movw	r30, r24
    1f58:	31 83       	std	Z+1, r19	; 0x01
    1f5a:	20 83       	st	Z, r18
    1f5c:	ce 01       	movw	r24, r28
    1f5e:	8e 53       	subi	r24, 0x3E	; 62
    1f60:	9f 4f       	sbci	r25, 0xFF	; 255
    1f62:	fc 01       	movw	r30, r24
    1f64:	80 81       	ld	r24, Z
    1f66:	91 81       	ldd	r25, Z+1	; 0x01
    1f68:	8c 01       	movw	r16, r24
    1f6a:	c8 01       	movw	r24, r16
    1f6c:	01 97       	sbiw	r24, 0x01	; 1
    1f6e:	f1 f7       	brne	.-4      	; 0x1f6c <main+0x1602>
    1f70:	8c 01       	movw	r16, r24
    1f72:	ce 01       	movw	r24, r28
    1f74:	8e 53       	subi	r24, 0x3E	; 62
    1f76:	9f 4f       	sbci	r25, 0xFF	; 255
    1f78:	fc 01       	movw	r30, r24
    1f7a:	11 83       	std	Z+1, r17	; 0x01
    1f7c:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f7e:	ce 01       	movw	r24, r28
    1f80:	80 54       	subi	r24, 0x40	; 64
    1f82:	9f 4f       	sbci	r25, 0xFF	; 255
    1f84:	9e 01       	movw	r18, r28
    1f86:	20 54       	subi	r18, 0x40	; 64
    1f88:	3f 4f       	sbci	r19, 0xFF	; 255
    1f8a:	f9 01       	movw	r30, r18
    1f8c:	20 81       	ld	r18, Z
    1f8e:	31 81       	ldd	r19, Z+1	; 0x01
    1f90:	21 50       	subi	r18, 0x01	; 1
    1f92:	30 40       	sbci	r19, 0x00	; 0
    1f94:	fc 01       	movw	r30, r24
    1f96:	31 83       	std	Z+1, r19	; 0x01
    1f98:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f9a:	ce 01       	movw	r24, r28
    1f9c:	80 54       	subi	r24, 0x40	; 64
    1f9e:	9f 4f       	sbci	r25, 0xFF	; 255
    1fa0:	fc 01       	movw	r30, r24
    1fa2:	80 81       	ld	r24, Z
    1fa4:	91 81       	ldd	r25, Z+1	; 0x01
    1fa6:	00 97       	sbiw	r24, 0x00	; 0
    1fa8:	89 f6       	brne	.-94     	; 0x1f4c <main+0x15e2>
    1faa:	2f c0       	rjmp	.+94     	; 0x200a <main+0x16a0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1fac:	8e 01       	movw	r16, r28
    1fae:	00 54       	subi	r16, 0x40	; 64
    1fb0:	1f 4f       	sbci	r17, 0xFF	; 255
    1fb2:	ce 01       	movw	r24, r28
    1fb4:	84 54       	subi	r24, 0x44	; 68
    1fb6:	9f 4f       	sbci	r25, 0xFF	; 255
    1fb8:	fc 01       	movw	r30, r24
    1fba:	60 81       	ld	r22, Z
    1fbc:	71 81       	ldd	r23, Z+1	; 0x01
    1fbe:	82 81       	ldd	r24, Z+2	; 0x02
    1fc0:	93 81       	ldd	r25, Z+3	; 0x03
    1fc2:	0e 94 97 13 	call	0x272e	; 0x272e <__fixunssfsi>
    1fc6:	dc 01       	movw	r26, r24
    1fc8:	cb 01       	movw	r24, r22
    1fca:	f8 01       	movw	r30, r16
    1fcc:	91 83       	std	Z+1, r25	; 0x01
    1fce:	80 83       	st	Z, r24
    1fd0:	ce 01       	movw	r24, r28
    1fd2:	8c 53       	subi	r24, 0x3C	; 60
    1fd4:	9f 4f       	sbci	r25, 0xFF	; 255
    1fd6:	9e 01       	movw	r18, r28
    1fd8:	20 54       	subi	r18, 0x40	; 64
    1fda:	3f 4f       	sbci	r19, 0xFF	; 255
    1fdc:	f9 01       	movw	r30, r18
    1fde:	20 81       	ld	r18, Z
    1fe0:	31 81       	ldd	r19, Z+1	; 0x01
    1fe2:	fc 01       	movw	r30, r24
    1fe4:	31 83       	std	Z+1, r19	; 0x01
    1fe6:	20 83       	st	Z, r18
    1fe8:	ce 01       	movw	r24, r28
    1fea:	8c 53       	subi	r24, 0x3C	; 60
    1fec:	9f 4f       	sbci	r25, 0xFF	; 255
    1fee:	fc 01       	movw	r30, r24
    1ff0:	80 81       	ld	r24, Z
    1ff2:	91 81       	ldd	r25, Z+1	; 0x01
    1ff4:	8c 01       	movw	r16, r24
    1ff6:	c8 01       	movw	r24, r16
    1ff8:	01 97       	sbiw	r24, 0x01	; 1
    1ffa:	f1 f7       	brne	.-4      	; 0x1ff8 <main+0x168e>
    1ffc:	8c 01       	movw	r16, r24
    1ffe:	ce 01       	movw	r24, r28
    2000:	8c 53       	subi	r24, 0x3C	; 60
    2002:	9f 4f       	sbci	r25, 0xFF	; 255
    2004:	fc 01       	movw	r30, r24
    2006:	11 83       	std	Z+1, r17	; 0x01
    2008:	00 83       	st	Z, r16
			_delay_ms(50);
			break;
    200a:	8b c3       	rjmp	.+1814   	; 0x2722 <main+0x1db8>
	case 7:  writecmd(0xc5);
    200c:	85 ec       	ldi	r24, 0xC5	; 197
    200e:	0e 94 52 03 	call	0x6a4	; 0x6a4 <writecmd>
			PORTD=arr[a];
    2012:	82 e3       	ldi	r24, 0x32	; 50
    2014:	90 e0       	ldi	r25, 0x00	; 0
    2016:	29 81       	ldd	r18, Y+1	; 0x01
    2018:	22 2f       	mov	r18, r18
    201a:	30 e0       	ldi	r19, 0x00	; 0
    201c:	ae 01       	movw	r20, r28
    201e:	42 50       	subi	r20, 0x02	; 2
    2020:	5f 4f       	sbci	r21, 0xFF	; 255
    2022:	24 0f       	add	r18, r20
    2024:	35 1f       	adc	r19, r21
    2026:	f9 01       	movw	r30, r18
    2028:	20 81       	ld	r18, Z
    202a:	fc 01       	movw	r30, r24
    202c:	20 83       	st	Z, r18
    202e:	9e 01       	movw	r18, r28
    2030:	2a 53       	subi	r18, 0x3A	; 58
    2032:	3f 4f       	sbci	r19, 0xFF	; 255
    2034:	80 e0       	ldi	r24, 0x00	; 0
    2036:	90 e0       	ldi	r25, 0x00	; 0
    2038:	a0 e2       	ldi	r26, 0x20	; 32
    203a:	b1 e4       	ldi	r27, 0x41	; 65
    203c:	f9 01       	movw	r30, r18
    203e:	80 83       	st	Z, r24
    2040:	91 83       	std	Z+1, r25	; 0x01
    2042:	a2 83       	std	Z+2, r26	; 0x02
    2044:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
    2046:	8e 01       	movw	r16, r28
    2048:	06 53       	subi	r16, 0x36	; 54
    204a:	1f 4f       	sbci	r17, 0xFF	; 255
    204c:	ce 01       	movw	r24, r28
    204e:	8a 53       	subi	r24, 0x3A	; 58
    2050:	9f 4f       	sbci	r25, 0xFF	; 255
    2052:	fc 01       	movw	r30, r24
    2054:	60 81       	ld	r22, Z
    2056:	71 81       	ldd	r23, Z+1	; 0x01
    2058:	82 81       	ldd	r24, Z+2	; 0x02
    205a:	93 81       	ldd	r25, Z+3	; 0x03
    205c:	20 e0       	ldi	r18, 0x00	; 0
    205e:	30 e0       	ldi	r19, 0x00	; 0
    2060:	4a e7       	ldi	r20, 0x7A	; 122
    2062:	53 e4       	ldi	r21, 0x43	; 67
    2064:	0e 94 14 14 	call	0x2828	; 0x2828 <__mulsf3>
    2068:	dc 01       	movw	r26, r24
    206a:	cb 01       	movw	r24, r22
    206c:	f8 01       	movw	r30, r16
    206e:	80 83       	st	Z, r24
    2070:	91 83       	std	Z+1, r25	; 0x01
    2072:	a2 83       	std	Z+2, r26	; 0x02
    2074:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2076:	ce 01       	movw	r24, r28
    2078:	86 53       	subi	r24, 0x36	; 54
    207a:	9f 4f       	sbci	r25, 0xFF	; 255
    207c:	11 e0       	ldi	r17, 0x01	; 1
    207e:	fc 01       	movw	r30, r24
    2080:	60 81       	ld	r22, Z
    2082:	71 81       	ldd	r23, Z+1	; 0x01
    2084:	82 81       	ldd	r24, Z+2	; 0x02
    2086:	93 81       	ldd	r25, Z+3	; 0x03
    2088:	20 e0       	ldi	r18, 0x00	; 0
    208a:	30 e0       	ldi	r19, 0x00	; 0
    208c:	40 e8       	ldi	r20, 0x80	; 128
    208e:	5f e3       	ldi	r21, 0x3F	; 63
    2090:	0e 94 93 13 	call	0x2726	; 0x2726 <__cmpsf2>
    2094:	88 23       	and	r24, r24
    2096:	0c f0       	brlt	.+2      	; 0x209a <main+0x1730>
    2098:	10 e0       	ldi	r17, 0x00	; 0
    209a:	11 23       	and	r17, r17
    209c:	49 f0       	breq	.+18     	; 0x20b0 <main+0x1746>
		__ticks = 1;
    209e:	ce 01       	movw	r24, r28
    20a0:	82 53       	subi	r24, 0x32	; 50
    20a2:	9f 4f       	sbci	r25, 0xFF	; 255
    20a4:	21 e0       	ldi	r18, 0x01	; 1
    20a6:	30 e0       	ldi	r19, 0x00	; 0
    20a8:	fc 01       	movw	r30, r24
    20aa:	31 83       	std	Z+1, r19	; 0x01
    20ac:	20 83       	st	Z, r18
    20ae:	74 c0       	rjmp	.+232    	; 0x2198 <main+0x182e>
	else if (__tmp > 65535)
    20b0:	ce 01       	movw	r24, r28
    20b2:	86 53       	subi	r24, 0x36	; 54
    20b4:	9f 4f       	sbci	r25, 0xFF	; 255
    20b6:	11 e0       	ldi	r17, 0x01	; 1
    20b8:	fc 01       	movw	r30, r24
    20ba:	60 81       	ld	r22, Z
    20bc:	71 81       	ldd	r23, Z+1	; 0x01
    20be:	82 81       	ldd	r24, Z+2	; 0x02
    20c0:	93 81       	ldd	r25, Z+3	; 0x03
    20c2:	20 e0       	ldi	r18, 0x00	; 0
    20c4:	3f ef       	ldi	r19, 0xFF	; 255
    20c6:	4f e7       	ldi	r20, 0x7F	; 127
    20c8:	57 e4       	ldi	r21, 0x47	; 71
    20ca:	0e 94 10 14 	call	0x2820	; 0x2820 <__gesf2>
    20ce:	18 16       	cp	r1, r24
    20d0:	0c f0       	brlt	.+2      	; 0x20d4 <main+0x176a>
    20d2:	10 e0       	ldi	r17, 0x00	; 0
    20d4:	11 23       	and	r17, r17
    20d6:	09 f4       	brne	.+2      	; 0x20da <main+0x1770>
    20d8:	4d c0       	rjmp	.+154    	; 0x2174 <main+0x180a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    20da:	ce 01       	movw	r24, r28
    20dc:	8a 53       	subi	r24, 0x3A	; 58
    20de:	9f 4f       	sbci	r25, 0xFF	; 255
    20e0:	fc 01       	movw	r30, r24
    20e2:	60 81       	ld	r22, Z
    20e4:	71 81       	ldd	r23, Z+1	; 0x01
    20e6:	82 81       	ldd	r24, Z+2	; 0x02
    20e8:	93 81       	ldd	r25, Z+3	; 0x03
    20ea:	20 e0       	ldi	r18, 0x00	; 0
    20ec:	30 e0       	ldi	r19, 0x00	; 0
    20ee:	40 e2       	ldi	r20, 0x20	; 32
    20f0:	51 e4       	ldi	r21, 0x41	; 65
    20f2:	0e 94 14 14 	call	0x2828	; 0x2828 <__mulsf3>
    20f6:	dc 01       	movw	r26, r24
    20f8:	cb 01       	movw	r24, r22
    20fa:	8e 01       	movw	r16, r28
    20fc:	02 53       	subi	r16, 0x32	; 50
    20fe:	1f 4f       	sbci	r17, 0xFF	; 255
    2100:	bc 01       	movw	r22, r24
    2102:	cd 01       	movw	r24, r26
    2104:	0e 94 97 13 	call	0x272e	; 0x272e <__fixunssfsi>
    2108:	dc 01       	movw	r26, r24
    210a:	cb 01       	movw	r24, r22
    210c:	f8 01       	movw	r30, r16
    210e:	91 83       	std	Z+1, r25	; 0x01
    2110:	80 83       	st	Z, r24
    2112:	27 c0       	rjmp	.+78     	; 0x2162 <main+0x17f8>
    2114:	ce 01       	movw	r24, r28
    2116:	80 53       	subi	r24, 0x30	; 48
    2118:	9f 4f       	sbci	r25, 0xFF	; 255
    211a:	29 e1       	ldi	r18, 0x19	; 25
    211c:	30 e0       	ldi	r19, 0x00	; 0
    211e:	fc 01       	movw	r30, r24
    2120:	31 83       	std	Z+1, r19	; 0x01
    2122:	20 83       	st	Z, r18
    2124:	ce 01       	movw	r24, r28
    2126:	80 53       	subi	r24, 0x30	; 48
    2128:	9f 4f       	sbci	r25, 0xFF	; 255
    212a:	fc 01       	movw	r30, r24
    212c:	80 81       	ld	r24, Z
    212e:	91 81       	ldd	r25, Z+1	; 0x01
    2130:	8c 01       	movw	r16, r24
    2132:	c8 01       	movw	r24, r16
    2134:	01 97       	sbiw	r24, 0x01	; 1
    2136:	f1 f7       	brne	.-4      	; 0x2134 <main+0x17ca>
    2138:	8c 01       	movw	r16, r24
    213a:	ce 01       	movw	r24, r28
    213c:	80 53       	subi	r24, 0x30	; 48
    213e:	9f 4f       	sbci	r25, 0xFF	; 255
    2140:	fc 01       	movw	r30, r24
    2142:	11 83       	std	Z+1, r17	; 0x01
    2144:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2146:	ce 01       	movw	r24, r28
    2148:	82 53       	subi	r24, 0x32	; 50
    214a:	9f 4f       	sbci	r25, 0xFF	; 255
    214c:	9e 01       	movw	r18, r28
    214e:	22 53       	subi	r18, 0x32	; 50
    2150:	3f 4f       	sbci	r19, 0xFF	; 255
    2152:	f9 01       	movw	r30, r18
    2154:	20 81       	ld	r18, Z
    2156:	31 81       	ldd	r19, Z+1	; 0x01
    2158:	21 50       	subi	r18, 0x01	; 1
    215a:	30 40       	sbci	r19, 0x00	; 0
    215c:	fc 01       	movw	r30, r24
    215e:	31 83       	std	Z+1, r19	; 0x01
    2160:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2162:	ce 01       	movw	r24, r28
    2164:	82 53       	subi	r24, 0x32	; 50
    2166:	9f 4f       	sbci	r25, 0xFF	; 255
    2168:	fc 01       	movw	r30, r24
    216a:	80 81       	ld	r24, Z
    216c:	91 81       	ldd	r25, Z+1	; 0x01
    216e:	00 97       	sbiw	r24, 0x00	; 0
    2170:	89 f6       	brne	.-94     	; 0x2114 <main+0x17aa>
    2172:	2f c0       	rjmp	.+94     	; 0x21d2 <main+0x1868>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2174:	8e 01       	movw	r16, r28
    2176:	02 53       	subi	r16, 0x32	; 50
    2178:	1f 4f       	sbci	r17, 0xFF	; 255
    217a:	ce 01       	movw	r24, r28
    217c:	86 53       	subi	r24, 0x36	; 54
    217e:	9f 4f       	sbci	r25, 0xFF	; 255
    2180:	fc 01       	movw	r30, r24
    2182:	60 81       	ld	r22, Z
    2184:	71 81       	ldd	r23, Z+1	; 0x01
    2186:	82 81       	ldd	r24, Z+2	; 0x02
    2188:	93 81       	ldd	r25, Z+3	; 0x03
    218a:	0e 94 97 13 	call	0x272e	; 0x272e <__fixunssfsi>
    218e:	dc 01       	movw	r26, r24
    2190:	cb 01       	movw	r24, r22
    2192:	f8 01       	movw	r30, r16
    2194:	91 83       	std	Z+1, r25	; 0x01
    2196:	80 83       	st	Z, r24
    2198:	ce 01       	movw	r24, r28
    219a:	8e 52       	subi	r24, 0x2E	; 46
    219c:	9f 4f       	sbci	r25, 0xFF	; 255
    219e:	9e 01       	movw	r18, r28
    21a0:	22 53       	subi	r18, 0x32	; 50
    21a2:	3f 4f       	sbci	r19, 0xFF	; 255
    21a4:	f9 01       	movw	r30, r18
    21a6:	20 81       	ld	r18, Z
    21a8:	31 81       	ldd	r19, Z+1	; 0x01
    21aa:	fc 01       	movw	r30, r24
    21ac:	31 83       	std	Z+1, r19	; 0x01
    21ae:	20 83       	st	Z, r18
    21b0:	ce 01       	movw	r24, r28
    21b2:	8e 52       	subi	r24, 0x2E	; 46
    21b4:	9f 4f       	sbci	r25, 0xFF	; 255
    21b6:	fc 01       	movw	r30, r24
    21b8:	80 81       	ld	r24, Z
    21ba:	91 81       	ldd	r25, Z+1	; 0x01
    21bc:	8c 01       	movw	r16, r24
    21be:	c8 01       	movw	r24, r16
    21c0:	01 97       	sbiw	r24, 0x01	; 1
    21c2:	f1 f7       	brne	.-4      	; 0x21c0 <main+0x1856>
    21c4:	8c 01       	movw	r16, r24
    21c6:	ce 01       	movw	r24, r28
    21c8:	8e 52       	subi	r24, 0x2E	; 46
    21ca:	9f 4f       	sbci	r25, 0xFF	; 255
    21cc:	fc 01       	movw	r30, r24
    21ce:	11 83       	std	Z+1, r17	; 0x01
    21d0:	00 83       	st	Z, r16
			_delay_ms(10);
			writestr("KEY 7");
    21d2:	86 ea       	ldi	r24, 0xA6	; 166
    21d4:	90 e0       	ldi	r25, 0x00	; 0
    21d6:	0e 94 9f 02 	call	0x53e	; 0x53e <writestr>
    21da:	9e 01       	movw	r18, r28
    21dc:	2c 52       	subi	r18, 0x2C	; 44
    21de:	3f 4f       	sbci	r19, 0xFF	; 255
    21e0:	80 e0       	ldi	r24, 0x00	; 0
    21e2:	90 e0       	ldi	r25, 0x00	; 0
    21e4:	a8 e4       	ldi	r26, 0x48	; 72
    21e6:	b2 e4       	ldi	r27, 0x42	; 66
    21e8:	f9 01       	movw	r30, r18
    21ea:	80 83       	st	Z, r24
    21ec:	91 83       	std	Z+1, r25	; 0x01
    21ee:	a2 83       	std	Z+2, r26	; 0x02
    21f0:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
    21f2:	8e 01       	movw	r16, r28
    21f4:	08 52       	subi	r16, 0x28	; 40
    21f6:	1f 4f       	sbci	r17, 0xFF	; 255
    21f8:	ce 01       	movw	r24, r28
    21fa:	8c 52       	subi	r24, 0x2C	; 44
    21fc:	9f 4f       	sbci	r25, 0xFF	; 255
    21fe:	fc 01       	movw	r30, r24
    2200:	60 81       	ld	r22, Z
    2202:	71 81       	ldd	r23, Z+1	; 0x01
    2204:	82 81       	ldd	r24, Z+2	; 0x02
    2206:	93 81       	ldd	r25, Z+3	; 0x03
    2208:	20 e0       	ldi	r18, 0x00	; 0
    220a:	30 e0       	ldi	r19, 0x00	; 0
    220c:	4a e7       	ldi	r20, 0x7A	; 122
    220e:	53 e4       	ldi	r21, 0x43	; 67
    2210:	0e 94 14 14 	call	0x2828	; 0x2828 <__mulsf3>
    2214:	dc 01       	movw	r26, r24
    2216:	cb 01       	movw	r24, r22
    2218:	f8 01       	movw	r30, r16
    221a:	80 83       	st	Z, r24
    221c:	91 83       	std	Z+1, r25	; 0x01
    221e:	a2 83       	std	Z+2, r26	; 0x02
    2220:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2222:	ce 01       	movw	r24, r28
    2224:	88 52       	subi	r24, 0x28	; 40
    2226:	9f 4f       	sbci	r25, 0xFF	; 255
    2228:	11 e0       	ldi	r17, 0x01	; 1
    222a:	fc 01       	movw	r30, r24
    222c:	60 81       	ld	r22, Z
    222e:	71 81       	ldd	r23, Z+1	; 0x01
    2230:	82 81       	ldd	r24, Z+2	; 0x02
    2232:	93 81       	ldd	r25, Z+3	; 0x03
    2234:	20 e0       	ldi	r18, 0x00	; 0
    2236:	30 e0       	ldi	r19, 0x00	; 0
    2238:	40 e8       	ldi	r20, 0x80	; 128
    223a:	5f e3       	ldi	r21, 0x3F	; 63
    223c:	0e 94 93 13 	call	0x2726	; 0x2726 <__cmpsf2>
    2240:	88 23       	and	r24, r24
    2242:	0c f0       	brlt	.+2      	; 0x2246 <main+0x18dc>
    2244:	10 e0       	ldi	r17, 0x00	; 0
    2246:	11 23       	and	r17, r17
    2248:	49 f0       	breq	.+18     	; 0x225c <main+0x18f2>
		__ticks = 1;
    224a:	ce 01       	movw	r24, r28
    224c:	84 52       	subi	r24, 0x24	; 36
    224e:	9f 4f       	sbci	r25, 0xFF	; 255
    2250:	21 e0       	ldi	r18, 0x01	; 1
    2252:	30 e0       	ldi	r19, 0x00	; 0
    2254:	fc 01       	movw	r30, r24
    2256:	31 83       	std	Z+1, r19	; 0x01
    2258:	20 83       	st	Z, r18
    225a:	74 c0       	rjmp	.+232    	; 0x2344 <main+0x19da>
	else if (__tmp > 65535)
    225c:	ce 01       	movw	r24, r28
    225e:	88 52       	subi	r24, 0x28	; 40
    2260:	9f 4f       	sbci	r25, 0xFF	; 255
    2262:	11 e0       	ldi	r17, 0x01	; 1
    2264:	fc 01       	movw	r30, r24
    2266:	60 81       	ld	r22, Z
    2268:	71 81       	ldd	r23, Z+1	; 0x01
    226a:	82 81       	ldd	r24, Z+2	; 0x02
    226c:	93 81       	ldd	r25, Z+3	; 0x03
    226e:	20 e0       	ldi	r18, 0x00	; 0
    2270:	3f ef       	ldi	r19, 0xFF	; 255
    2272:	4f e7       	ldi	r20, 0x7F	; 127
    2274:	57 e4       	ldi	r21, 0x47	; 71
    2276:	0e 94 10 14 	call	0x2820	; 0x2820 <__gesf2>
    227a:	18 16       	cp	r1, r24
    227c:	0c f0       	brlt	.+2      	; 0x2280 <main+0x1916>
    227e:	10 e0       	ldi	r17, 0x00	; 0
    2280:	11 23       	and	r17, r17
    2282:	09 f4       	brne	.+2      	; 0x2286 <main+0x191c>
    2284:	4d c0       	rjmp	.+154    	; 0x2320 <main+0x19b6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2286:	ce 01       	movw	r24, r28
    2288:	8c 52       	subi	r24, 0x2C	; 44
    228a:	9f 4f       	sbci	r25, 0xFF	; 255
    228c:	fc 01       	movw	r30, r24
    228e:	60 81       	ld	r22, Z
    2290:	71 81       	ldd	r23, Z+1	; 0x01
    2292:	82 81       	ldd	r24, Z+2	; 0x02
    2294:	93 81       	ldd	r25, Z+3	; 0x03
    2296:	20 e0       	ldi	r18, 0x00	; 0
    2298:	30 e0       	ldi	r19, 0x00	; 0
    229a:	40 e2       	ldi	r20, 0x20	; 32
    229c:	51 e4       	ldi	r21, 0x41	; 65
    229e:	0e 94 14 14 	call	0x2828	; 0x2828 <__mulsf3>
    22a2:	dc 01       	movw	r26, r24
    22a4:	cb 01       	movw	r24, r22
    22a6:	8e 01       	movw	r16, r28
    22a8:	04 52       	subi	r16, 0x24	; 36
    22aa:	1f 4f       	sbci	r17, 0xFF	; 255
    22ac:	bc 01       	movw	r22, r24
    22ae:	cd 01       	movw	r24, r26
    22b0:	0e 94 97 13 	call	0x272e	; 0x272e <__fixunssfsi>
    22b4:	dc 01       	movw	r26, r24
    22b6:	cb 01       	movw	r24, r22
    22b8:	f8 01       	movw	r30, r16
    22ba:	91 83       	std	Z+1, r25	; 0x01
    22bc:	80 83       	st	Z, r24
    22be:	27 c0       	rjmp	.+78     	; 0x230e <main+0x19a4>
    22c0:	ce 01       	movw	r24, r28
    22c2:	82 52       	subi	r24, 0x22	; 34
    22c4:	9f 4f       	sbci	r25, 0xFF	; 255
    22c6:	29 e1       	ldi	r18, 0x19	; 25
    22c8:	30 e0       	ldi	r19, 0x00	; 0
    22ca:	fc 01       	movw	r30, r24
    22cc:	31 83       	std	Z+1, r19	; 0x01
    22ce:	20 83       	st	Z, r18
    22d0:	ce 01       	movw	r24, r28
    22d2:	82 52       	subi	r24, 0x22	; 34
    22d4:	9f 4f       	sbci	r25, 0xFF	; 255
    22d6:	fc 01       	movw	r30, r24
    22d8:	80 81       	ld	r24, Z
    22da:	91 81       	ldd	r25, Z+1	; 0x01
    22dc:	8c 01       	movw	r16, r24
    22de:	c8 01       	movw	r24, r16
    22e0:	01 97       	sbiw	r24, 0x01	; 1
    22e2:	f1 f7       	brne	.-4      	; 0x22e0 <main+0x1976>
    22e4:	8c 01       	movw	r16, r24
    22e6:	ce 01       	movw	r24, r28
    22e8:	82 52       	subi	r24, 0x22	; 34
    22ea:	9f 4f       	sbci	r25, 0xFF	; 255
    22ec:	fc 01       	movw	r30, r24
    22ee:	11 83       	std	Z+1, r17	; 0x01
    22f0:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    22f2:	ce 01       	movw	r24, r28
    22f4:	84 52       	subi	r24, 0x24	; 36
    22f6:	9f 4f       	sbci	r25, 0xFF	; 255
    22f8:	9e 01       	movw	r18, r28
    22fa:	24 52       	subi	r18, 0x24	; 36
    22fc:	3f 4f       	sbci	r19, 0xFF	; 255
    22fe:	f9 01       	movw	r30, r18
    2300:	20 81       	ld	r18, Z
    2302:	31 81       	ldd	r19, Z+1	; 0x01
    2304:	21 50       	subi	r18, 0x01	; 1
    2306:	30 40       	sbci	r19, 0x00	; 0
    2308:	fc 01       	movw	r30, r24
    230a:	31 83       	std	Z+1, r19	; 0x01
    230c:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    230e:	ce 01       	movw	r24, r28
    2310:	84 52       	subi	r24, 0x24	; 36
    2312:	9f 4f       	sbci	r25, 0xFF	; 255
    2314:	fc 01       	movw	r30, r24
    2316:	80 81       	ld	r24, Z
    2318:	91 81       	ldd	r25, Z+1	; 0x01
    231a:	00 97       	sbiw	r24, 0x00	; 0
    231c:	89 f6       	brne	.-94     	; 0x22c0 <main+0x1956>
    231e:	2f c0       	rjmp	.+94     	; 0x237e <main+0x1a14>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2320:	8e 01       	movw	r16, r28
    2322:	04 52       	subi	r16, 0x24	; 36
    2324:	1f 4f       	sbci	r17, 0xFF	; 255
    2326:	ce 01       	movw	r24, r28
    2328:	88 52       	subi	r24, 0x28	; 40
    232a:	9f 4f       	sbci	r25, 0xFF	; 255
    232c:	fc 01       	movw	r30, r24
    232e:	60 81       	ld	r22, Z
    2330:	71 81       	ldd	r23, Z+1	; 0x01
    2332:	82 81       	ldd	r24, Z+2	; 0x02
    2334:	93 81       	ldd	r25, Z+3	; 0x03
    2336:	0e 94 97 13 	call	0x272e	; 0x272e <__fixunssfsi>
    233a:	dc 01       	movw	r26, r24
    233c:	cb 01       	movw	r24, r22
    233e:	f8 01       	movw	r30, r16
    2340:	91 83       	std	Z+1, r25	; 0x01
    2342:	80 83       	st	Z, r24
    2344:	ce 01       	movw	r24, r28
    2346:	80 52       	subi	r24, 0x20	; 32
    2348:	9f 4f       	sbci	r25, 0xFF	; 255
    234a:	9e 01       	movw	r18, r28
    234c:	24 52       	subi	r18, 0x24	; 36
    234e:	3f 4f       	sbci	r19, 0xFF	; 255
    2350:	f9 01       	movw	r30, r18
    2352:	20 81       	ld	r18, Z
    2354:	31 81       	ldd	r19, Z+1	; 0x01
    2356:	fc 01       	movw	r30, r24
    2358:	31 83       	std	Z+1, r19	; 0x01
    235a:	20 83       	st	Z, r18
    235c:	ce 01       	movw	r24, r28
    235e:	80 52       	subi	r24, 0x20	; 32
    2360:	9f 4f       	sbci	r25, 0xFF	; 255
    2362:	fc 01       	movw	r30, r24
    2364:	80 81       	ld	r24, Z
    2366:	91 81       	ldd	r25, Z+1	; 0x01
    2368:	8c 01       	movw	r16, r24
    236a:	c8 01       	movw	r24, r16
    236c:	01 97       	sbiw	r24, 0x01	; 1
    236e:	f1 f7       	brne	.-4      	; 0x236c <main+0x1a02>
    2370:	8c 01       	movw	r16, r24
    2372:	ce 01       	movw	r24, r28
    2374:	80 52       	subi	r24, 0x20	; 32
    2376:	9f 4f       	sbci	r25, 0xFF	; 255
    2378:	fc 01       	movw	r30, r24
    237a:	11 83       	std	Z+1, r17	; 0x01
    237c:	00 83       	st	Z, r16
			_delay_ms(50);
			break;
    237e:	d1 c1       	rjmp	.+930    	; 0x2722 <main+0x1db8>
	case 8:  writecmd(0xc5);
    2380:	85 ec       	ldi	r24, 0xC5	; 197
    2382:	0e 94 52 03 	call	0x6a4	; 0x6a4 <writecmd>
			PORTD=arr[a];
    2386:	82 e3       	ldi	r24, 0x32	; 50
    2388:	90 e0       	ldi	r25, 0x00	; 0
    238a:	29 81       	ldd	r18, Y+1	; 0x01
    238c:	22 2f       	mov	r18, r18
    238e:	30 e0       	ldi	r19, 0x00	; 0
    2390:	ae 01       	movw	r20, r28
    2392:	42 50       	subi	r20, 0x02	; 2
    2394:	5f 4f       	sbci	r21, 0xFF	; 255
    2396:	24 0f       	add	r18, r20
    2398:	35 1f       	adc	r19, r21
    239a:	f9 01       	movw	r30, r18
    239c:	20 81       	ld	r18, Z
    239e:	fc 01       	movw	r30, r24
    23a0:	20 83       	st	Z, r18
			writestr("KEY 8");
    23a2:	8c ea       	ldi	r24, 0xAC	; 172
    23a4:	90 e0       	ldi	r25, 0x00	; 0
    23a6:	0e 94 9f 02 	call	0x53e	; 0x53e <writestr>
    23aa:	9e 01       	movw	r18, r28
    23ac:	2e 51       	subi	r18, 0x1E	; 30
    23ae:	3f 4f       	sbci	r19, 0xFF	; 255
    23b0:	80 e0       	ldi	r24, 0x00	; 0
    23b2:	90 e0       	ldi	r25, 0x00	; 0
    23b4:	a8 e4       	ldi	r26, 0x48	; 72
    23b6:	b2 e4       	ldi	r27, 0x42	; 66
    23b8:	f9 01       	movw	r30, r18
    23ba:	80 83       	st	Z, r24
    23bc:	91 83       	std	Z+1, r25	; 0x01
    23be:	a2 83       	std	Z+2, r26	; 0x02
    23c0:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
    23c2:	8e 01       	movw	r16, r28
    23c4:	0a 51       	subi	r16, 0x1A	; 26
    23c6:	1f 4f       	sbci	r17, 0xFF	; 255
    23c8:	ce 01       	movw	r24, r28
    23ca:	8e 51       	subi	r24, 0x1E	; 30
    23cc:	9f 4f       	sbci	r25, 0xFF	; 255
    23ce:	fc 01       	movw	r30, r24
    23d0:	60 81       	ld	r22, Z
    23d2:	71 81       	ldd	r23, Z+1	; 0x01
    23d4:	82 81       	ldd	r24, Z+2	; 0x02
    23d6:	93 81       	ldd	r25, Z+3	; 0x03
    23d8:	20 e0       	ldi	r18, 0x00	; 0
    23da:	30 e0       	ldi	r19, 0x00	; 0
    23dc:	4a e7       	ldi	r20, 0x7A	; 122
    23de:	53 e4       	ldi	r21, 0x43	; 67
    23e0:	0e 94 14 14 	call	0x2828	; 0x2828 <__mulsf3>
    23e4:	dc 01       	movw	r26, r24
    23e6:	cb 01       	movw	r24, r22
    23e8:	f8 01       	movw	r30, r16
    23ea:	80 83       	st	Z, r24
    23ec:	91 83       	std	Z+1, r25	; 0x01
    23ee:	a2 83       	std	Z+2, r26	; 0x02
    23f0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    23f2:	ce 01       	movw	r24, r28
    23f4:	8a 51       	subi	r24, 0x1A	; 26
    23f6:	9f 4f       	sbci	r25, 0xFF	; 255
    23f8:	11 e0       	ldi	r17, 0x01	; 1
    23fa:	fc 01       	movw	r30, r24
    23fc:	60 81       	ld	r22, Z
    23fe:	71 81       	ldd	r23, Z+1	; 0x01
    2400:	82 81       	ldd	r24, Z+2	; 0x02
    2402:	93 81       	ldd	r25, Z+3	; 0x03
    2404:	20 e0       	ldi	r18, 0x00	; 0
    2406:	30 e0       	ldi	r19, 0x00	; 0
    2408:	40 e8       	ldi	r20, 0x80	; 128
    240a:	5f e3       	ldi	r21, 0x3F	; 63
    240c:	0e 94 93 13 	call	0x2726	; 0x2726 <__cmpsf2>
    2410:	88 23       	and	r24, r24
    2412:	0c f0       	brlt	.+2      	; 0x2416 <main+0x1aac>
    2414:	10 e0       	ldi	r17, 0x00	; 0
    2416:	11 23       	and	r17, r17
    2418:	49 f0       	breq	.+18     	; 0x242c <main+0x1ac2>
		__ticks = 1;
    241a:	ce 01       	movw	r24, r28
    241c:	86 51       	subi	r24, 0x16	; 22
    241e:	9f 4f       	sbci	r25, 0xFF	; 255
    2420:	21 e0       	ldi	r18, 0x01	; 1
    2422:	30 e0       	ldi	r19, 0x00	; 0
    2424:	fc 01       	movw	r30, r24
    2426:	31 83       	std	Z+1, r19	; 0x01
    2428:	20 83       	st	Z, r18
    242a:	74 c0       	rjmp	.+232    	; 0x2514 <main+0x1baa>
	else if (__tmp > 65535)
    242c:	ce 01       	movw	r24, r28
    242e:	8a 51       	subi	r24, 0x1A	; 26
    2430:	9f 4f       	sbci	r25, 0xFF	; 255
    2432:	11 e0       	ldi	r17, 0x01	; 1
    2434:	fc 01       	movw	r30, r24
    2436:	60 81       	ld	r22, Z
    2438:	71 81       	ldd	r23, Z+1	; 0x01
    243a:	82 81       	ldd	r24, Z+2	; 0x02
    243c:	93 81       	ldd	r25, Z+3	; 0x03
    243e:	20 e0       	ldi	r18, 0x00	; 0
    2440:	3f ef       	ldi	r19, 0xFF	; 255
    2442:	4f e7       	ldi	r20, 0x7F	; 127
    2444:	57 e4       	ldi	r21, 0x47	; 71
    2446:	0e 94 10 14 	call	0x2820	; 0x2820 <__gesf2>
    244a:	18 16       	cp	r1, r24
    244c:	0c f0       	brlt	.+2      	; 0x2450 <main+0x1ae6>
    244e:	10 e0       	ldi	r17, 0x00	; 0
    2450:	11 23       	and	r17, r17
    2452:	09 f4       	brne	.+2      	; 0x2456 <main+0x1aec>
    2454:	4d c0       	rjmp	.+154    	; 0x24f0 <main+0x1b86>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2456:	ce 01       	movw	r24, r28
    2458:	8e 51       	subi	r24, 0x1E	; 30
    245a:	9f 4f       	sbci	r25, 0xFF	; 255
    245c:	fc 01       	movw	r30, r24
    245e:	60 81       	ld	r22, Z
    2460:	71 81       	ldd	r23, Z+1	; 0x01
    2462:	82 81       	ldd	r24, Z+2	; 0x02
    2464:	93 81       	ldd	r25, Z+3	; 0x03
    2466:	20 e0       	ldi	r18, 0x00	; 0
    2468:	30 e0       	ldi	r19, 0x00	; 0
    246a:	40 e2       	ldi	r20, 0x20	; 32
    246c:	51 e4       	ldi	r21, 0x41	; 65
    246e:	0e 94 14 14 	call	0x2828	; 0x2828 <__mulsf3>
    2472:	dc 01       	movw	r26, r24
    2474:	cb 01       	movw	r24, r22
    2476:	8e 01       	movw	r16, r28
    2478:	06 51       	subi	r16, 0x16	; 22
    247a:	1f 4f       	sbci	r17, 0xFF	; 255
    247c:	bc 01       	movw	r22, r24
    247e:	cd 01       	movw	r24, r26
    2480:	0e 94 97 13 	call	0x272e	; 0x272e <__fixunssfsi>
    2484:	dc 01       	movw	r26, r24
    2486:	cb 01       	movw	r24, r22
    2488:	f8 01       	movw	r30, r16
    248a:	91 83       	std	Z+1, r25	; 0x01
    248c:	80 83       	st	Z, r24
    248e:	27 c0       	rjmp	.+78     	; 0x24de <main+0x1b74>
    2490:	ce 01       	movw	r24, r28
    2492:	84 51       	subi	r24, 0x14	; 20
    2494:	9f 4f       	sbci	r25, 0xFF	; 255
    2496:	29 e1       	ldi	r18, 0x19	; 25
    2498:	30 e0       	ldi	r19, 0x00	; 0
    249a:	fc 01       	movw	r30, r24
    249c:	31 83       	std	Z+1, r19	; 0x01
    249e:	20 83       	st	Z, r18
    24a0:	ce 01       	movw	r24, r28
    24a2:	84 51       	subi	r24, 0x14	; 20
    24a4:	9f 4f       	sbci	r25, 0xFF	; 255
    24a6:	fc 01       	movw	r30, r24
    24a8:	80 81       	ld	r24, Z
    24aa:	91 81       	ldd	r25, Z+1	; 0x01
    24ac:	8c 01       	movw	r16, r24
    24ae:	c8 01       	movw	r24, r16
    24b0:	01 97       	sbiw	r24, 0x01	; 1
    24b2:	f1 f7       	brne	.-4      	; 0x24b0 <main+0x1b46>
    24b4:	8c 01       	movw	r16, r24
    24b6:	ce 01       	movw	r24, r28
    24b8:	84 51       	subi	r24, 0x14	; 20
    24ba:	9f 4f       	sbci	r25, 0xFF	; 255
    24bc:	fc 01       	movw	r30, r24
    24be:	11 83       	std	Z+1, r17	; 0x01
    24c0:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    24c2:	ce 01       	movw	r24, r28
    24c4:	86 51       	subi	r24, 0x16	; 22
    24c6:	9f 4f       	sbci	r25, 0xFF	; 255
    24c8:	9e 01       	movw	r18, r28
    24ca:	26 51       	subi	r18, 0x16	; 22
    24cc:	3f 4f       	sbci	r19, 0xFF	; 255
    24ce:	f9 01       	movw	r30, r18
    24d0:	20 81       	ld	r18, Z
    24d2:	31 81       	ldd	r19, Z+1	; 0x01
    24d4:	21 50       	subi	r18, 0x01	; 1
    24d6:	30 40       	sbci	r19, 0x00	; 0
    24d8:	fc 01       	movw	r30, r24
    24da:	31 83       	std	Z+1, r19	; 0x01
    24dc:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    24de:	ce 01       	movw	r24, r28
    24e0:	86 51       	subi	r24, 0x16	; 22
    24e2:	9f 4f       	sbci	r25, 0xFF	; 255
    24e4:	fc 01       	movw	r30, r24
    24e6:	80 81       	ld	r24, Z
    24e8:	91 81       	ldd	r25, Z+1	; 0x01
    24ea:	00 97       	sbiw	r24, 0x00	; 0
    24ec:	89 f6       	brne	.-94     	; 0x2490 <main+0x1b26>
    24ee:	2f c0       	rjmp	.+94     	; 0x254e <main+0x1be4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    24f0:	8e 01       	movw	r16, r28
    24f2:	06 51       	subi	r16, 0x16	; 22
    24f4:	1f 4f       	sbci	r17, 0xFF	; 255
    24f6:	ce 01       	movw	r24, r28
    24f8:	8a 51       	subi	r24, 0x1A	; 26
    24fa:	9f 4f       	sbci	r25, 0xFF	; 255
    24fc:	fc 01       	movw	r30, r24
    24fe:	60 81       	ld	r22, Z
    2500:	71 81       	ldd	r23, Z+1	; 0x01
    2502:	82 81       	ldd	r24, Z+2	; 0x02
    2504:	93 81       	ldd	r25, Z+3	; 0x03
    2506:	0e 94 97 13 	call	0x272e	; 0x272e <__fixunssfsi>
    250a:	dc 01       	movw	r26, r24
    250c:	cb 01       	movw	r24, r22
    250e:	f8 01       	movw	r30, r16
    2510:	91 83       	std	Z+1, r25	; 0x01
    2512:	80 83       	st	Z, r24
    2514:	ce 01       	movw	r24, r28
    2516:	82 51       	subi	r24, 0x12	; 18
    2518:	9f 4f       	sbci	r25, 0xFF	; 255
    251a:	9e 01       	movw	r18, r28
    251c:	26 51       	subi	r18, 0x16	; 22
    251e:	3f 4f       	sbci	r19, 0xFF	; 255
    2520:	f9 01       	movw	r30, r18
    2522:	20 81       	ld	r18, Z
    2524:	31 81       	ldd	r19, Z+1	; 0x01
    2526:	fc 01       	movw	r30, r24
    2528:	31 83       	std	Z+1, r19	; 0x01
    252a:	20 83       	st	Z, r18
    252c:	ce 01       	movw	r24, r28
    252e:	82 51       	subi	r24, 0x12	; 18
    2530:	9f 4f       	sbci	r25, 0xFF	; 255
    2532:	fc 01       	movw	r30, r24
    2534:	80 81       	ld	r24, Z
    2536:	91 81       	ldd	r25, Z+1	; 0x01
    2538:	8c 01       	movw	r16, r24
    253a:	c8 01       	movw	r24, r16
    253c:	01 97       	sbiw	r24, 0x01	; 1
    253e:	f1 f7       	brne	.-4      	; 0x253c <main+0x1bd2>
    2540:	8c 01       	movw	r16, r24
    2542:	ce 01       	movw	r24, r28
    2544:	82 51       	subi	r24, 0x12	; 18
    2546:	9f 4f       	sbci	r25, 0xFF	; 255
    2548:	fc 01       	movw	r30, r24
    254a:	11 83       	std	Z+1, r17	; 0x01
    254c:	00 83       	st	Z, r16
			_delay_ms(50);
			break;
    254e:	e9 c0       	rjmp	.+466    	; 0x2722 <main+0x1db8>
	case 9: writecmd(0xc5);
    2550:	85 ec       	ldi	r24, 0xC5	; 197
    2552:	0e 94 52 03 	call	0x6a4	; 0x6a4 <writecmd>
			PORTD=arr[a];
    2556:	82 e3       	ldi	r24, 0x32	; 50
    2558:	90 e0       	ldi	r25, 0x00	; 0
    255a:	29 81       	ldd	r18, Y+1	; 0x01
    255c:	22 2f       	mov	r18, r18
    255e:	30 e0       	ldi	r19, 0x00	; 0
    2560:	ae 01       	movw	r20, r28
    2562:	42 50       	subi	r20, 0x02	; 2
    2564:	5f 4f       	sbci	r21, 0xFF	; 255
    2566:	24 0f       	add	r18, r20
    2568:	35 1f       	adc	r19, r21
    256a:	f9 01       	movw	r30, r18
    256c:	20 81       	ld	r18, Z
    256e:	fc 01       	movw	r30, r24
    2570:	20 83       	st	Z, r18
			writestr("KEY 9");
    2572:	82 eb       	ldi	r24, 0xB2	; 178
    2574:	90 e0       	ldi	r25, 0x00	; 0
    2576:	0e 94 9f 02 	call	0x53e	; 0x53e <writestr>
    257a:	9e 01       	movw	r18, r28
    257c:	20 51       	subi	r18, 0x10	; 16
    257e:	3f 4f       	sbci	r19, 0xFF	; 255
    2580:	80 e0       	ldi	r24, 0x00	; 0
    2582:	90 e0       	ldi	r25, 0x00	; 0
    2584:	a8 e4       	ldi	r26, 0x48	; 72
    2586:	b2 e4       	ldi	r27, 0x42	; 66
    2588:	f9 01       	movw	r30, r18
    258a:	80 83       	st	Z, r24
    258c:	91 83       	std	Z+1, r25	; 0x01
    258e:	a2 83       	std	Z+2, r26	; 0x02
    2590:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
    2592:	8e 01       	movw	r16, r28
    2594:	0c 50       	subi	r16, 0x0C	; 12
    2596:	1f 4f       	sbci	r17, 0xFF	; 255
    2598:	ce 01       	movw	r24, r28
    259a:	80 51       	subi	r24, 0x10	; 16
    259c:	9f 4f       	sbci	r25, 0xFF	; 255
    259e:	fc 01       	movw	r30, r24
    25a0:	60 81       	ld	r22, Z
    25a2:	71 81       	ldd	r23, Z+1	; 0x01
    25a4:	82 81       	ldd	r24, Z+2	; 0x02
    25a6:	93 81       	ldd	r25, Z+3	; 0x03
    25a8:	20 e0       	ldi	r18, 0x00	; 0
    25aa:	30 e0       	ldi	r19, 0x00	; 0
    25ac:	4a e7       	ldi	r20, 0x7A	; 122
    25ae:	53 e4       	ldi	r21, 0x43	; 67
    25b0:	0e 94 14 14 	call	0x2828	; 0x2828 <__mulsf3>
    25b4:	dc 01       	movw	r26, r24
    25b6:	cb 01       	movw	r24, r22
    25b8:	f8 01       	movw	r30, r16
    25ba:	80 83       	st	Z, r24
    25bc:	91 83       	std	Z+1, r25	; 0x01
    25be:	a2 83       	std	Z+2, r26	; 0x02
    25c0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    25c2:	ce 01       	movw	r24, r28
    25c4:	8c 50       	subi	r24, 0x0C	; 12
    25c6:	9f 4f       	sbci	r25, 0xFF	; 255
    25c8:	11 e0       	ldi	r17, 0x01	; 1
    25ca:	fc 01       	movw	r30, r24
    25cc:	60 81       	ld	r22, Z
    25ce:	71 81       	ldd	r23, Z+1	; 0x01
    25d0:	82 81       	ldd	r24, Z+2	; 0x02
    25d2:	93 81       	ldd	r25, Z+3	; 0x03
    25d4:	20 e0       	ldi	r18, 0x00	; 0
    25d6:	30 e0       	ldi	r19, 0x00	; 0
    25d8:	40 e8       	ldi	r20, 0x80	; 128
    25da:	5f e3       	ldi	r21, 0x3F	; 63
    25dc:	0e 94 93 13 	call	0x2726	; 0x2726 <__cmpsf2>
    25e0:	88 23       	and	r24, r24
    25e2:	0c f0       	brlt	.+2      	; 0x25e6 <main+0x1c7c>
    25e4:	10 e0       	ldi	r17, 0x00	; 0
    25e6:	11 23       	and	r17, r17
    25e8:	49 f0       	breq	.+18     	; 0x25fc <main+0x1c92>
		__ticks = 1;
    25ea:	ce 01       	movw	r24, r28
    25ec:	88 50       	subi	r24, 0x08	; 8
    25ee:	9f 4f       	sbci	r25, 0xFF	; 255
    25f0:	21 e0       	ldi	r18, 0x01	; 1
    25f2:	30 e0       	ldi	r19, 0x00	; 0
    25f4:	fc 01       	movw	r30, r24
    25f6:	31 83       	std	Z+1, r19	; 0x01
    25f8:	20 83       	st	Z, r18
    25fa:	74 c0       	rjmp	.+232    	; 0x26e4 <main+0x1d7a>
	else if (__tmp > 65535)
    25fc:	ce 01       	movw	r24, r28
    25fe:	8c 50       	subi	r24, 0x0C	; 12
    2600:	9f 4f       	sbci	r25, 0xFF	; 255
    2602:	11 e0       	ldi	r17, 0x01	; 1
    2604:	fc 01       	movw	r30, r24
    2606:	60 81       	ld	r22, Z
    2608:	71 81       	ldd	r23, Z+1	; 0x01
    260a:	82 81       	ldd	r24, Z+2	; 0x02
    260c:	93 81       	ldd	r25, Z+3	; 0x03
    260e:	20 e0       	ldi	r18, 0x00	; 0
    2610:	3f ef       	ldi	r19, 0xFF	; 255
    2612:	4f e7       	ldi	r20, 0x7F	; 127
    2614:	57 e4       	ldi	r21, 0x47	; 71
    2616:	0e 94 10 14 	call	0x2820	; 0x2820 <__gesf2>
    261a:	18 16       	cp	r1, r24
    261c:	0c f0       	brlt	.+2      	; 0x2620 <main+0x1cb6>
    261e:	10 e0       	ldi	r17, 0x00	; 0
    2620:	11 23       	and	r17, r17
    2622:	09 f4       	brne	.+2      	; 0x2626 <main+0x1cbc>
    2624:	4d c0       	rjmp	.+154    	; 0x26c0 <main+0x1d56>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2626:	ce 01       	movw	r24, r28
    2628:	80 51       	subi	r24, 0x10	; 16
    262a:	9f 4f       	sbci	r25, 0xFF	; 255
    262c:	fc 01       	movw	r30, r24
    262e:	60 81       	ld	r22, Z
    2630:	71 81       	ldd	r23, Z+1	; 0x01
    2632:	82 81       	ldd	r24, Z+2	; 0x02
    2634:	93 81       	ldd	r25, Z+3	; 0x03
    2636:	20 e0       	ldi	r18, 0x00	; 0
    2638:	30 e0       	ldi	r19, 0x00	; 0
    263a:	40 e2       	ldi	r20, 0x20	; 32
    263c:	51 e4       	ldi	r21, 0x41	; 65
    263e:	0e 94 14 14 	call	0x2828	; 0x2828 <__mulsf3>
    2642:	dc 01       	movw	r26, r24
    2644:	cb 01       	movw	r24, r22
    2646:	8e 01       	movw	r16, r28
    2648:	08 50       	subi	r16, 0x08	; 8
    264a:	1f 4f       	sbci	r17, 0xFF	; 255
    264c:	bc 01       	movw	r22, r24
    264e:	cd 01       	movw	r24, r26
    2650:	0e 94 97 13 	call	0x272e	; 0x272e <__fixunssfsi>
    2654:	dc 01       	movw	r26, r24
    2656:	cb 01       	movw	r24, r22
    2658:	f8 01       	movw	r30, r16
    265a:	91 83       	std	Z+1, r25	; 0x01
    265c:	80 83       	st	Z, r24
    265e:	27 c0       	rjmp	.+78     	; 0x26ae <main+0x1d44>
    2660:	ce 01       	movw	r24, r28
    2662:	86 50       	subi	r24, 0x06	; 6
    2664:	9f 4f       	sbci	r25, 0xFF	; 255
    2666:	29 e1       	ldi	r18, 0x19	; 25
    2668:	30 e0       	ldi	r19, 0x00	; 0
    266a:	fc 01       	movw	r30, r24
    266c:	31 83       	std	Z+1, r19	; 0x01
    266e:	20 83       	st	Z, r18
    2670:	ce 01       	movw	r24, r28
    2672:	86 50       	subi	r24, 0x06	; 6
    2674:	9f 4f       	sbci	r25, 0xFF	; 255
    2676:	fc 01       	movw	r30, r24
    2678:	80 81       	ld	r24, Z
    267a:	91 81       	ldd	r25, Z+1	; 0x01
    267c:	8c 01       	movw	r16, r24
    267e:	c8 01       	movw	r24, r16
    2680:	01 97       	sbiw	r24, 0x01	; 1
    2682:	f1 f7       	brne	.-4      	; 0x2680 <main+0x1d16>
    2684:	8c 01       	movw	r16, r24
    2686:	ce 01       	movw	r24, r28
    2688:	86 50       	subi	r24, 0x06	; 6
    268a:	9f 4f       	sbci	r25, 0xFF	; 255
    268c:	fc 01       	movw	r30, r24
    268e:	11 83       	std	Z+1, r17	; 0x01
    2690:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2692:	ce 01       	movw	r24, r28
    2694:	88 50       	subi	r24, 0x08	; 8
    2696:	9f 4f       	sbci	r25, 0xFF	; 255
    2698:	9e 01       	movw	r18, r28
    269a:	28 50       	subi	r18, 0x08	; 8
    269c:	3f 4f       	sbci	r19, 0xFF	; 255
    269e:	f9 01       	movw	r30, r18
    26a0:	20 81       	ld	r18, Z
    26a2:	31 81       	ldd	r19, Z+1	; 0x01
    26a4:	21 50       	subi	r18, 0x01	; 1
    26a6:	30 40       	sbci	r19, 0x00	; 0
    26a8:	fc 01       	movw	r30, r24
    26aa:	31 83       	std	Z+1, r19	; 0x01
    26ac:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    26ae:	ce 01       	movw	r24, r28
    26b0:	88 50       	subi	r24, 0x08	; 8
    26b2:	9f 4f       	sbci	r25, 0xFF	; 255
    26b4:	fc 01       	movw	r30, r24
    26b6:	80 81       	ld	r24, Z
    26b8:	91 81       	ldd	r25, Z+1	; 0x01
    26ba:	00 97       	sbiw	r24, 0x00	; 0
    26bc:	89 f6       	brne	.-94     	; 0x2660 <main+0x1cf6>
    26be:	2f c0       	rjmp	.+94     	; 0x271e <main+0x1db4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    26c0:	8e 01       	movw	r16, r28
    26c2:	08 50       	subi	r16, 0x08	; 8
    26c4:	1f 4f       	sbci	r17, 0xFF	; 255
    26c6:	ce 01       	movw	r24, r28
    26c8:	8c 50       	subi	r24, 0x0C	; 12
    26ca:	9f 4f       	sbci	r25, 0xFF	; 255
    26cc:	fc 01       	movw	r30, r24
    26ce:	60 81       	ld	r22, Z
    26d0:	71 81       	ldd	r23, Z+1	; 0x01
    26d2:	82 81       	ldd	r24, Z+2	; 0x02
    26d4:	93 81       	ldd	r25, Z+3	; 0x03
    26d6:	0e 94 97 13 	call	0x272e	; 0x272e <__fixunssfsi>
    26da:	dc 01       	movw	r26, r24
    26dc:	cb 01       	movw	r24, r22
    26de:	f8 01       	movw	r30, r16
    26e0:	91 83       	std	Z+1, r25	; 0x01
    26e2:	80 83       	st	Z, r24
    26e4:	ce 01       	movw	r24, r28
    26e6:	84 50       	subi	r24, 0x04	; 4
    26e8:	9f 4f       	sbci	r25, 0xFF	; 255
    26ea:	9e 01       	movw	r18, r28
    26ec:	28 50       	subi	r18, 0x08	; 8
    26ee:	3f 4f       	sbci	r19, 0xFF	; 255
    26f0:	f9 01       	movw	r30, r18
    26f2:	20 81       	ld	r18, Z
    26f4:	31 81       	ldd	r19, Z+1	; 0x01
    26f6:	fc 01       	movw	r30, r24
    26f8:	31 83       	std	Z+1, r19	; 0x01
    26fa:	20 83       	st	Z, r18
    26fc:	ce 01       	movw	r24, r28
    26fe:	84 50       	subi	r24, 0x04	; 4
    2700:	9f 4f       	sbci	r25, 0xFF	; 255
    2702:	fc 01       	movw	r30, r24
    2704:	80 81       	ld	r24, Z
    2706:	91 81       	ldd	r25, Z+1	; 0x01
    2708:	8c 01       	movw	r16, r24
    270a:	c8 01       	movw	r24, r16
    270c:	01 97       	sbiw	r24, 0x01	; 1
    270e:	f1 f7       	brne	.-4      	; 0x270c <main+0x1da2>
    2710:	8c 01       	movw	r16, r24
    2712:	ce 01       	movw	r24, r28
    2714:	84 50       	subi	r24, 0x04	; 4
    2716:	9f 4f       	sbci	r25, 0xFF	; 255
    2718:	fc 01       	movw	r30, r24
    271a:	11 83       	std	Z+1, r17	; 0x01
    271c:	00 83       	st	Z, r16
            _delay_ms(50);
			break;
    271e:	01 c0       	rjmp	.+2      	; 0x2722 <main+0x1db8>
	default:
			break;
    2720:	00 00       	nop

	}
  //}
}  
    2722:	0c 94 fb 04 	jmp	0x9f6	; 0x9f6 <main+0x8c>

00002726 <__cmpsf2>:
    2726:	2f d0       	rcall	.+94     	; 0x2786 <__fp_cmp>
    2728:	08 f4       	brcc	.+2      	; 0x272c <__cmpsf2+0x6>
    272a:	81 e0       	ldi	r24, 0x01	; 1
    272c:	08 95       	ret

0000272e <__fixunssfsi>:
    272e:	57 d0       	rcall	.+174    	; 0x27de <__fp_splitA>
    2730:	88 f0       	brcs	.+34     	; 0x2754 <__fixunssfsi+0x26>
    2732:	9f 57       	subi	r25, 0x7F	; 127
    2734:	90 f0       	brcs	.+36     	; 0x275a <__fixunssfsi+0x2c>
    2736:	b9 2f       	mov	r27, r25
    2738:	99 27       	eor	r25, r25
    273a:	b7 51       	subi	r27, 0x17	; 23
    273c:	a0 f0       	brcs	.+40     	; 0x2766 <__fixunssfsi+0x38>
    273e:	d1 f0       	breq	.+52     	; 0x2774 <__fixunssfsi+0x46>
    2740:	66 0f       	add	r22, r22
    2742:	77 1f       	adc	r23, r23
    2744:	88 1f       	adc	r24, r24
    2746:	99 1f       	adc	r25, r25
    2748:	1a f0       	brmi	.+6      	; 0x2750 <__fixunssfsi+0x22>
    274a:	ba 95       	dec	r27
    274c:	c9 f7       	brne	.-14     	; 0x2740 <__fixunssfsi+0x12>
    274e:	12 c0       	rjmp	.+36     	; 0x2774 <__fixunssfsi+0x46>
    2750:	b1 30       	cpi	r27, 0x01	; 1
    2752:	81 f0       	breq	.+32     	; 0x2774 <__fixunssfsi+0x46>
    2754:	5e d0       	rcall	.+188    	; 0x2812 <__fp_zero>
    2756:	b1 e0       	ldi	r27, 0x01	; 1
    2758:	08 95       	ret
    275a:	5b c0       	rjmp	.+182    	; 0x2812 <__fp_zero>
    275c:	67 2f       	mov	r22, r23
    275e:	78 2f       	mov	r23, r24
    2760:	88 27       	eor	r24, r24
    2762:	b8 5f       	subi	r27, 0xF8	; 248
    2764:	39 f0       	breq	.+14     	; 0x2774 <__fixunssfsi+0x46>
    2766:	b9 3f       	cpi	r27, 0xF9	; 249
    2768:	cc f3       	brlt	.-14     	; 0x275c <__fixunssfsi+0x2e>
    276a:	86 95       	lsr	r24
    276c:	77 95       	ror	r23
    276e:	67 95       	ror	r22
    2770:	b3 95       	inc	r27
    2772:	d9 f7       	brne	.-10     	; 0x276a <__fixunssfsi+0x3c>
    2774:	3e f4       	brtc	.+14     	; 0x2784 <__fixunssfsi+0x56>
    2776:	90 95       	com	r25
    2778:	80 95       	com	r24
    277a:	70 95       	com	r23
    277c:	61 95       	neg	r22
    277e:	7f 4f       	sbci	r23, 0xFF	; 255
    2780:	8f 4f       	sbci	r24, 0xFF	; 255
    2782:	9f 4f       	sbci	r25, 0xFF	; 255
    2784:	08 95       	ret

00002786 <__fp_cmp>:
    2786:	99 0f       	add	r25, r25
    2788:	00 08       	sbc	r0, r0
    278a:	55 0f       	add	r21, r21
    278c:	aa 0b       	sbc	r26, r26
    278e:	e0 e8       	ldi	r30, 0x80	; 128
    2790:	fe ef       	ldi	r31, 0xFE	; 254
    2792:	16 16       	cp	r1, r22
    2794:	17 06       	cpc	r1, r23
    2796:	e8 07       	cpc	r30, r24
    2798:	f9 07       	cpc	r31, r25
    279a:	c0 f0       	brcs	.+48     	; 0x27cc <__fp_cmp+0x46>
    279c:	12 16       	cp	r1, r18
    279e:	13 06       	cpc	r1, r19
    27a0:	e4 07       	cpc	r30, r20
    27a2:	f5 07       	cpc	r31, r21
    27a4:	98 f0       	brcs	.+38     	; 0x27cc <__fp_cmp+0x46>
    27a6:	62 1b       	sub	r22, r18
    27a8:	73 0b       	sbc	r23, r19
    27aa:	84 0b       	sbc	r24, r20
    27ac:	95 0b       	sbc	r25, r21
    27ae:	39 f4       	brne	.+14     	; 0x27be <__fp_cmp+0x38>
    27b0:	0a 26       	eor	r0, r26
    27b2:	61 f0       	breq	.+24     	; 0x27cc <__fp_cmp+0x46>
    27b4:	23 2b       	or	r18, r19
    27b6:	24 2b       	or	r18, r20
    27b8:	25 2b       	or	r18, r21
    27ba:	21 f4       	brne	.+8      	; 0x27c4 <__fp_cmp+0x3e>
    27bc:	08 95       	ret
    27be:	0a 26       	eor	r0, r26
    27c0:	09 f4       	brne	.+2      	; 0x27c4 <__fp_cmp+0x3e>
    27c2:	a1 40       	sbci	r26, 0x01	; 1
    27c4:	a6 95       	lsr	r26
    27c6:	8f ef       	ldi	r24, 0xFF	; 255
    27c8:	81 1d       	adc	r24, r1
    27ca:	81 1d       	adc	r24, r1
    27cc:	08 95       	ret

000027ce <__fp_split3>:
    27ce:	57 fd       	sbrc	r21, 7
    27d0:	90 58       	subi	r25, 0x80	; 128
    27d2:	44 0f       	add	r20, r20
    27d4:	55 1f       	adc	r21, r21
    27d6:	59 f0       	breq	.+22     	; 0x27ee <__fp_splitA+0x10>
    27d8:	5f 3f       	cpi	r21, 0xFF	; 255
    27da:	71 f0       	breq	.+28     	; 0x27f8 <__fp_splitA+0x1a>
    27dc:	47 95       	ror	r20

000027de <__fp_splitA>:
    27de:	88 0f       	add	r24, r24
    27e0:	97 fb       	bst	r25, 7
    27e2:	99 1f       	adc	r25, r25
    27e4:	61 f0       	breq	.+24     	; 0x27fe <__fp_splitA+0x20>
    27e6:	9f 3f       	cpi	r25, 0xFF	; 255
    27e8:	79 f0       	breq	.+30     	; 0x2808 <__fp_splitA+0x2a>
    27ea:	87 95       	ror	r24
    27ec:	08 95       	ret
    27ee:	12 16       	cp	r1, r18
    27f0:	13 06       	cpc	r1, r19
    27f2:	14 06       	cpc	r1, r20
    27f4:	55 1f       	adc	r21, r21
    27f6:	f2 cf       	rjmp	.-28     	; 0x27dc <__fp_split3+0xe>
    27f8:	46 95       	lsr	r20
    27fa:	f1 df       	rcall	.-30     	; 0x27de <__fp_splitA>
    27fc:	08 c0       	rjmp	.+16     	; 0x280e <__fp_splitA+0x30>
    27fe:	16 16       	cp	r1, r22
    2800:	17 06       	cpc	r1, r23
    2802:	18 06       	cpc	r1, r24
    2804:	99 1f       	adc	r25, r25
    2806:	f1 cf       	rjmp	.-30     	; 0x27ea <__fp_splitA+0xc>
    2808:	86 95       	lsr	r24
    280a:	71 05       	cpc	r23, r1
    280c:	61 05       	cpc	r22, r1
    280e:	08 94       	sec
    2810:	08 95       	ret

00002812 <__fp_zero>:
    2812:	e8 94       	clt

00002814 <__fp_szero>:
    2814:	bb 27       	eor	r27, r27
    2816:	66 27       	eor	r22, r22
    2818:	77 27       	eor	r23, r23
    281a:	cb 01       	movw	r24, r22
    281c:	97 f9       	bld	r25, 7
    281e:	08 95       	ret

00002820 <__gesf2>:
    2820:	b2 df       	rcall	.-156    	; 0x2786 <__fp_cmp>
    2822:	08 f4       	brcc	.+2      	; 0x2826 <__gesf2+0x6>
    2824:	8f ef       	ldi	r24, 0xFF	; 255
    2826:	08 95       	ret

00002828 <__mulsf3>:
    2828:	0b d0       	rcall	.+22     	; 0x2840 <__mulsf3x>
    282a:	78 c0       	rjmp	.+240    	; 0x291c <__fp_round>
    282c:	69 d0       	rcall	.+210    	; 0x2900 <__fp_pscA>
    282e:	28 f0       	brcs	.+10     	; 0x283a <__mulsf3+0x12>
    2830:	6e d0       	rcall	.+220    	; 0x290e <__fp_pscB>
    2832:	18 f0       	brcs	.+6      	; 0x283a <__mulsf3+0x12>
    2834:	95 23       	and	r25, r21
    2836:	09 f0       	breq	.+2      	; 0x283a <__mulsf3+0x12>
    2838:	5a c0       	rjmp	.+180    	; 0x28ee <__fp_inf>
    283a:	5f c0       	rjmp	.+190    	; 0x28fa <__fp_nan>
    283c:	11 24       	eor	r1, r1
    283e:	ea cf       	rjmp	.-44     	; 0x2814 <__fp_szero>

00002840 <__mulsf3x>:
    2840:	c6 df       	rcall	.-116    	; 0x27ce <__fp_split3>
    2842:	a0 f3       	brcs	.-24     	; 0x282c <__mulsf3+0x4>

00002844 <__mulsf3_pse>:
    2844:	95 9f       	mul	r25, r21
    2846:	d1 f3       	breq	.-12     	; 0x283c <__mulsf3+0x14>
    2848:	95 0f       	add	r25, r21
    284a:	50 e0       	ldi	r21, 0x00	; 0
    284c:	55 1f       	adc	r21, r21
    284e:	62 9f       	mul	r22, r18
    2850:	f0 01       	movw	r30, r0
    2852:	72 9f       	mul	r23, r18
    2854:	bb 27       	eor	r27, r27
    2856:	f0 0d       	add	r31, r0
    2858:	b1 1d       	adc	r27, r1
    285a:	63 9f       	mul	r22, r19
    285c:	aa 27       	eor	r26, r26
    285e:	f0 0d       	add	r31, r0
    2860:	b1 1d       	adc	r27, r1
    2862:	aa 1f       	adc	r26, r26
    2864:	64 9f       	mul	r22, r20
    2866:	66 27       	eor	r22, r22
    2868:	b0 0d       	add	r27, r0
    286a:	a1 1d       	adc	r26, r1
    286c:	66 1f       	adc	r22, r22
    286e:	82 9f       	mul	r24, r18
    2870:	22 27       	eor	r18, r18
    2872:	b0 0d       	add	r27, r0
    2874:	a1 1d       	adc	r26, r1
    2876:	62 1f       	adc	r22, r18
    2878:	73 9f       	mul	r23, r19
    287a:	b0 0d       	add	r27, r0
    287c:	a1 1d       	adc	r26, r1
    287e:	62 1f       	adc	r22, r18
    2880:	83 9f       	mul	r24, r19
    2882:	a0 0d       	add	r26, r0
    2884:	61 1d       	adc	r22, r1
    2886:	22 1f       	adc	r18, r18
    2888:	74 9f       	mul	r23, r20
    288a:	33 27       	eor	r19, r19
    288c:	a0 0d       	add	r26, r0
    288e:	61 1d       	adc	r22, r1
    2890:	23 1f       	adc	r18, r19
    2892:	84 9f       	mul	r24, r20
    2894:	60 0d       	add	r22, r0
    2896:	21 1d       	adc	r18, r1
    2898:	82 2f       	mov	r24, r18
    289a:	76 2f       	mov	r23, r22
    289c:	6a 2f       	mov	r22, r26
    289e:	11 24       	eor	r1, r1
    28a0:	9f 57       	subi	r25, 0x7F	; 127
    28a2:	50 40       	sbci	r21, 0x00	; 0
    28a4:	8a f0       	brmi	.+34     	; 0x28c8 <__mulsf3_pse+0x84>
    28a6:	e1 f0       	breq	.+56     	; 0x28e0 <__mulsf3_pse+0x9c>
    28a8:	88 23       	and	r24, r24
    28aa:	4a f0       	brmi	.+18     	; 0x28be <__mulsf3_pse+0x7a>
    28ac:	ee 0f       	add	r30, r30
    28ae:	ff 1f       	adc	r31, r31
    28b0:	bb 1f       	adc	r27, r27
    28b2:	66 1f       	adc	r22, r22
    28b4:	77 1f       	adc	r23, r23
    28b6:	88 1f       	adc	r24, r24
    28b8:	91 50       	subi	r25, 0x01	; 1
    28ba:	50 40       	sbci	r21, 0x00	; 0
    28bc:	a9 f7       	brne	.-22     	; 0x28a8 <__mulsf3_pse+0x64>
    28be:	9e 3f       	cpi	r25, 0xFE	; 254
    28c0:	51 05       	cpc	r21, r1
    28c2:	70 f0       	brcs	.+28     	; 0x28e0 <__mulsf3_pse+0x9c>
    28c4:	14 c0       	rjmp	.+40     	; 0x28ee <__fp_inf>
    28c6:	a6 cf       	rjmp	.-180    	; 0x2814 <__fp_szero>
    28c8:	5f 3f       	cpi	r21, 0xFF	; 255
    28ca:	ec f3       	brlt	.-6      	; 0x28c6 <__mulsf3_pse+0x82>
    28cc:	98 3e       	cpi	r25, 0xE8	; 232
    28ce:	dc f3       	brlt	.-10     	; 0x28c6 <__mulsf3_pse+0x82>
    28d0:	86 95       	lsr	r24
    28d2:	77 95       	ror	r23
    28d4:	67 95       	ror	r22
    28d6:	b7 95       	ror	r27
    28d8:	f7 95       	ror	r31
    28da:	e7 95       	ror	r30
    28dc:	9f 5f       	subi	r25, 0xFF	; 255
    28de:	c1 f7       	brne	.-16     	; 0x28d0 <__mulsf3_pse+0x8c>
    28e0:	fe 2b       	or	r31, r30
    28e2:	88 0f       	add	r24, r24
    28e4:	91 1d       	adc	r25, r1
    28e6:	96 95       	lsr	r25
    28e8:	87 95       	ror	r24
    28ea:	97 f9       	bld	r25, 7
    28ec:	08 95       	ret

000028ee <__fp_inf>:
    28ee:	97 f9       	bld	r25, 7
    28f0:	9f 67       	ori	r25, 0x7F	; 127
    28f2:	80 e8       	ldi	r24, 0x80	; 128
    28f4:	70 e0       	ldi	r23, 0x00	; 0
    28f6:	60 e0       	ldi	r22, 0x00	; 0
    28f8:	08 95       	ret

000028fa <__fp_nan>:
    28fa:	9f ef       	ldi	r25, 0xFF	; 255
    28fc:	80 ec       	ldi	r24, 0xC0	; 192
    28fe:	08 95       	ret

00002900 <__fp_pscA>:
    2900:	00 24       	eor	r0, r0
    2902:	0a 94       	dec	r0
    2904:	16 16       	cp	r1, r22
    2906:	17 06       	cpc	r1, r23
    2908:	18 06       	cpc	r1, r24
    290a:	09 06       	cpc	r0, r25
    290c:	08 95       	ret

0000290e <__fp_pscB>:
    290e:	00 24       	eor	r0, r0
    2910:	0a 94       	dec	r0
    2912:	12 16       	cp	r1, r18
    2914:	13 06       	cpc	r1, r19
    2916:	14 06       	cpc	r1, r20
    2918:	05 06       	cpc	r0, r21
    291a:	08 95       	ret

0000291c <__fp_round>:
    291c:	09 2e       	mov	r0, r25
    291e:	03 94       	inc	r0
    2920:	00 0c       	add	r0, r0
    2922:	11 f4       	brne	.+4      	; 0x2928 <__fp_round+0xc>
    2924:	88 23       	and	r24, r24
    2926:	52 f0       	brmi	.+20     	; 0x293c <__fp_round+0x20>
    2928:	bb 0f       	add	r27, r27
    292a:	40 f4       	brcc	.+16     	; 0x293c <__fp_round+0x20>
    292c:	bf 2b       	or	r27, r31
    292e:	11 f4       	brne	.+4      	; 0x2934 <__fp_round+0x18>
    2930:	60 ff       	sbrs	r22, 0
    2932:	04 c0       	rjmp	.+8      	; 0x293c <__fp_round+0x20>
    2934:	6f 5f       	subi	r22, 0xFF	; 255
    2936:	7f 4f       	sbci	r23, 0xFF	; 255
    2938:	8f 4f       	sbci	r24, 0xFF	; 255
    293a:	9f 4f       	sbci	r25, 0xFF	; 255
    293c:	08 95       	ret

0000293e <strlen>:
    293e:	fc 01       	movw	r30, r24
    2940:	01 90       	ld	r0, Z+
    2942:	00 20       	and	r0, r0
    2944:	e9 f7       	brne	.-6      	; 0x2940 <strlen+0x2>
    2946:	80 95       	com	r24
    2948:	90 95       	com	r25
    294a:	8e 0f       	add	r24, r30
    294c:	9f 1f       	adc	r25, r31
    294e:	08 95       	ret

00002950 <_exit>:
    2950:	f8 94       	cli

00002952 <__stop_program>:
    2952:	ff cf       	rjmp	.-2      	; 0x2952 <__stop_program>
