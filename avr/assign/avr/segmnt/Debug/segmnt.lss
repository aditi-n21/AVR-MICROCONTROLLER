
segmnt.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000426  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  00000426  0000049a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00001638  00000000  00000000  000004a4  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      0000057e  00000000  00000000  00001adc  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000080  00000000  00000000  00002060  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000040f  00000000  00000000  000020e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000113  00000000  00000000  000024ef  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000360  00000000  00000000  00002602  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000003c  00000000  00000000  00002964  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000000ba  00000000  00000000  000029a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000055  00000000  00000000  00002a5a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 e2       	ldi	r30, 0x26	; 38
  68:	f4 e0       	ldi	r31, 0x04	; 4
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	aa 36       	cpi	r26, 0x6A	; 106
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	aa e6       	ldi	r26, 0x6A	; 106
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	aa 36       	cpi	r26, 0x6A	; 106
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 11 02 	jmp	0x422	; 0x422 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
 */ 

#include <avr/io.h>
#include <util/delay.h>
int main(void)
{   DDRB=0xff;
  92:	0f 93       	push	r16
  94:	1f 93       	push	r17
  96:	cf 93       	push	r28
  98:	df 93       	push	r29
  9a:	cd b7       	in	r28, 0x3d	; 61
  9c:	de b7       	in	r29, 0x3e	; 62
  9e:	6a 97       	sbiw	r28, 0x1a	; 26
  a0:	0f b6       	in	r0, 0x3f	; 63
  a2:	f8 94       	cli
  a4:	de bf       	out	0x3e, r29	; 62
  a6:	0f be       	out	0x3f, r0	; 63
  a8:	cd bf       	out	0x3d, r28	; 61
  aa:	87 e3       	ldi	r24, 0x37	; 55
  ac:	90 e0       	ldi	r25, 0x00	; 0
  ae:	2f ef       	ldi	r18, 0xFF	; 255
  b0:	fc 01       	movw	r30, r24
  b2:	20 83       	st	Z, r18
	//PORTB=0xff;
	//char num[]={0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8,0x80,0x90};		//(anode)
		char num[]={0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F};		//(cathode) H
  b4:	ce 01       	movw	r24, r28
  b6:	41 96       	adiw	r24, 0x11	; 17
  b8:	20 e6       	ldi	r18, 0x60	; 96
  ba:	30 e0       	ldi	r19, 0x00	; 0
  bc:	4a e0       	ldi	r20, 0x0A	; 10
  be:	f9 01       	movw	r30, r18
  c0:	00 80       	ld	r0, Z
  c2:	2f 5f       	subi	r18, 0xFF	; 255
  c4:	3f 4f       	sbci	r19, 0xFF	; 255
  c6:	fc 01       	movw	r30, r24
  c8:	00 82       	st	Z, r0
  ca:	01 96       	adiw	r24, 0x01	; 1
  cc:	41 50       	subi	r20, 0x01	; 1
  ce:	44 23       	and	r20, r20
  d0:	b1 f7       	brne	.-20     	; 0xbe <main+0x2c>
	unsigned int c;
	while(1)
	{
		for(c=0;c<10;c++)
  d2:	1a 82       	std	Y+2, r1	; 0x02
  d4:	19 82       	std	Y+1, r1	; 0x01
  d6:	92 c0       	rjmp	.+292    	; 0x1fc <main+0x16a>
		{
		PORTB=num[c]; // anode
  d8:	88 e3       	ldi	r24, 0x38	; 56
  da:	90 e0       	ldi	r25, 0x00	; 0
  dc:	ae 01       	movw	r20, r28
  de:	4f 5e       	subi	r20, 0xEF	; 239
  e0:	5f 4f       	sbci	r21, 0xFF	; 255
  e2:	29 81       	ldd	r18, Y+1	; 0x01
  e4:	3a 81       	ldd	r19, Y+2	; 0x02
  e6:	24 0f       	add	r18, r20
  e8:	35 1f       	adc	r19, r21
  ea:	f9 01       	movw	r30, r18
  ec:	20 81       	ld	r18, Z
  ee:	fc 01       	movw	r30, r24
  f0:	20 83       	st	Z, r18
  f2:	80 e0       	ldi	r24, 0x00	; 0
  f4:	90 e0       	ldi	r25, 0x00	; 0
  f6:	aa e7       	ldi	r26, 0x7A	; 122
  f8:	b4 e4       	ldi	r27, 0x44	; 68
  fa:	8b 83       	std	Y+3, r24	; 0x03
  fc:	9c 83       	std	Y+4, r25	; 0x04
  fe:	ad 83       	std	Y+5, r26	; 0x05
 100:	be 83       	std	Y+6, r27	; 0x06
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
 102:	6b 81       	ldd	r22, Y+3	; 0x03
 104:	7c 81       	ldd	r23, Y+4	; 0x04
 106:	8d 81       	ldd	r24, Y+5	; 0x05
 108:	9e 81       	ldd	r25, Y+6	; 0x06
 10a:	20 e0       	ldi	r18, 0x00	; 0
 10c:	30 e0       	ldi	r19, 0x00	; 0
 10e:	4a e7       	ldi	r20, 0x7A	; 122
 110:	53 e4       	ldi	r21, 0x43	; 67
 112:	0e 94 86 01 	call	0x30c	; 0x30c <__mulsf3>
 116:	dc 01       	movw	r26, r24
 118:	cb 01       	movw	r24, r22
 11a:	8f 83       	std	Y+7, r24	; 0x07
 11c:	98 87       	std	Y+8, r25	; 0x08
 11e:	a9 87       	std	Y+9, r26	; 0x09
 120:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
 122:	11 e0       	ldi	r17, 0x01	; 1
 124:	6f 81       	ldd	r22, Y+7	; 0x07
 126:	78 85       	ldd	r23, Y+8	; 0x08
 128:	89 85       	ldd	r24, Y+9	; 0x09
 12a:	9a 85       	ldd	r25, Y+10	; 0x0a
 12c:	20 e0       	ldi	r18, 0x00	; 0
 12e:	30 e0       	ldi	r19, 0x00	; 0
 130:	40 e8       	ldi	r20, 0x80	; 128
 132:	5f e3       	ldi	r21, 0x3F	; 63
 134:	0e 94 05 01 	call	0x20a	; 0x20a <__cmpsf2>
 138:	88 23       	and	r24, r24
 13a:	0c f0       	brlt	.+2      	; 0x13e <main+0xac>
 13c:	10 e0       	ldi	r17, 0x00	; 0
 13e:	11 23       	and	r17, r17
 140:	29 f0       	breq	.+10     	; 0x14c <main+0xba>
		__ticks = 1;
 142:	81 e0       	ldi	r24, 0x01	; 1
 144:	90 e0       	ldi	r25, 0x00	; 0
 146:	9c 87       	std	Y+12, r25	; 0x0c
 148:	8b 87       	std	Y+11, r24	; 0x0b
 14a:	46 c0       	rjmp	.+140    	; 0x1d8 <main+0x146>
	else if (__tmp > 65535)
 14c:	11 e0       	ldi	r17, 0x01	; 1
 14e:	6f 81       	ldd	r22, Y+7	; 0x07
 150:	78 85       	ldd	r23, Y+8	; 0x08
 152:	89 85       	ldd	r24, Y+9	; 0x09
 154:	9a 85       	ldd	r25, Y+10	; 0x0a
 156:	20 e0       	ldi	r18, 0x00	; 0
 158:	3f ef       	ldi	r19, 0xFF	; 255
 15a:	4f e7       	ldi	r20, 0x7F	; 127
 15c:	57 e4       	ldi	r21, 0x47	; 71
 15e:	0e 94 82 01 	call	0x304	; 0x304 <__gesf2>
 162:	18 16       	cp	r1, r24
 164:	0c f0       	brlt	.+2      	; 0x168 <main+0xd6>
 166:	10 e0       	ldi	r17, 0x00	; 0
 168:	11 23       	and	r17, r17
 16a:	61 f1       	breq	.+88     	; 0x1c4 <main+0x132>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 16c:	6b 81       	ldd	r22, Y+3	; 0x03
 16e:	7c 81       	ldd	r23, Y+4	; 0x04
 170:	8d 81       	ldd	r24, Y+5	; 0x05
 172:	9e 81       	ldd	r25, Y+6	; 0x06
 174:	20 e0       	ldi	r18, 0x00	; 0
 176:	30 e0       	ldi	r19, 0x00	; 0
 178:	40 e2       	ldi	r20, 0x20	; 32
 17a:	51 e4       	ldi	r21, 0x41	; 65
 17c:	0e 94 86 01 	call	0x30c	; 0x30c <__mulsf3>
 180:	dc 01       	movw	r26, r24
 182:	cb 01       	movw	r24, r22
 184:	bc 01       	movw	r22, r24
 186:	cd 01       	movw	r24, r26
 188:	0e 94 09 01 	call	0x212	; 0x212 <__fixunssfsi>
 18c:	dc 01       	movw	r26, r24
 18e:	cb 01       	movw	r24, r22
 190:	9c 87       	std	Y+12, r25	; 0x0c
 192:	8b 87       	std	Y+11, r24	; 0x0b
 194:	12 c0       	rjmp	.+36     	; 0x1ba <main+0x128>
 196:	89 e1       	ldi	r24, 0x19	; 25
 198:	90 e0       	ldi	r25, 0x00	; 0
 19a:	9e 87       	std	Y+14, r25	; 0x0e
 19c:	8d 87       	std	Y+13, r24	; 0x0d
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 19e:	8d 85       	ldd	r24, Y+13	; 0x0d
 1a0:	9e 85       	ldd	r25, Y+14	; 0x0e
 1a2:	8c 01       	movw	r16, r24
 1a4:	c8 01       	movw	r24, r16
 1a6:	01 97       	sbiw	r24, 0x01	; 1
 1a8:	f1 f7       	brne	.-4      	; 0x1a6 <main+0x114>
 1aa:	8c 01       	movw	r16, r24
 1ac:	1e 87       	std	Y+14, r17	; 0x0e
 1ae:	0d 87       	std	Y+13, r16	; 0x0d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 1b0:	8b 85       	ldd	r24, Y+11	; 0x0b
 1b2:	9c 85       	ldd	r25, Y+12	; 0x0c
 1b4:	01 97       	sbiw	r24, 0x01	; 1
 1b6:	9c 87       	std	Y+12, r25	; 0x0c
 1b8:	8b 87       	std	Y+11, r24	; 0x0b
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 1ba:	8b 85       	ldd	r24, Y+11	; 0x0b
 1bc:	9c 85       	ldd	r25, Y+12	; 0x0c
 1be:	00 97       	sbiw	r24, 0x00	; 0
 1c0:	51 f7       	brne	.-44     	; 0x196 <main+0x104>
 1c2:	17 c0       	rjmp	.+46     	; 0x1f2 <main+0x160>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 1c4:	6f 81       	ldd	r22, Y+7	; 0x07
 1c6:	78 85       	ldd	r23, Y+8	; 0x08
 1c8:	89 85       	ldd	r24, Y+9	; 0x09
 1ca:	9a 85       	ldd	r25, Y+10	; 0x0a
 1cc:	0e 94 09 01 	call	0x212	; 0x212 <__fixunssfsi>
 1d0:	dc 01       	movw	r26, r24
 1d2:	cb 01       	movw	r24, r22
 1d4:	9c 87       	std	Y+12, r25	; 0x0c
 1d6:	8b 87       	std	Y+11, r24	; 0x0b
 1d8:	8b 85       	ldd	r24, Y+11	; 0x0b
 1da:	9c 85       	ldd	r25, Y+12	; 0x0c
 1dc:	98 8b       	std	Y+16, r25	; 0x10
 1de:	8f 87       	std	Y+15, r24	; 0x0f
 1e0:	8f 85       	ldd	r24, Y+15	; 0x0f
 1e2:	98 89       	ldd	r25, Y+16	; 0x10
 1e4:	8c 01       	movw	r16, r24
 1e6:	f8 01       	movw	r30, r16
 1e8:	31 97       	sbiw	r30, 0x01	; 1
 1ea:	f1 f7       	brne	.-4      	; 0x1e8 <main+0x156>
 1ec:	8f 01       	movw	r16, r30
 1ee:	18 8b       	std	Y+16, r17	; 0x10
 1f0:	0f 87       	std	Y+15, r16	; 0x0f
	//char num[]={0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8,0x80,0x90};		//(anode)
		char num[]={0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F};		//(cathode) H
	unsigned int c;
	while(1)
	{
		for(c=0;c<10;c++)
 1f2:	89 81       	ldd	r24, Y+1	; 0x01
 1f4:	9a 81       	ldd	r25, Y+2	; 0x02
 1f6:	01 96       	adiw	r24, 0x01	; 1
 1f8:	9a 83       	std	Y+2, r25	; 0x02
 1fa:	89 83       	std	Y+1, r24	; 0x01
 1fc:	89 81       	ldd	r24, Y+1	; 0x01
 1fe:	9a 81       	ldd	r25, Y+2	; 0x02
 200:	8a 30       	cpi	r24, 0x0A	; 10
 202:	91 05       	cpc	r25, r1
 204:	08 f4       	brcc	.+2      	; 0x208 <main+0x176>
 206:	68 cf       	rjmp	.-304    	; 0xd8 <main+0x46>
		{
		PORTB=num[c]; // anode
		_delay_ms(1000);
		}
	}
 208:	64 cf       	rjmp	.-312    	; 0xd2 <main+0x40>

0000020a <__cmpsf2>:
 20a:	2f d0       	rcall	.+94     	; 0x26a <__fp_cmp>
 20c:	08 f4       	brcc	.+2      	; 0x210 <__cmpsf2+0x6>
 20e:	81 e0       	ldi	r24, 0x01	; 1
 210:	08 95       	ret

00000212 <__fixunssfsi>:
 212:	57 d0       	rcall	.+174    	; 0x2c2 <__fp_splitA>
 214:	88 f0       	brcs	.+34     	; 0x238 <__fixunssfsi+0x26>
 216:	9f 57       	subi	r25, 0x7F	; 127
 218:	90 f0       	brcs	.+36     	; 0x23e <__fixunssfsi+0x2c>
 21a:	b9 2f       	mov	r27, r25
 21c:	99 27       	eor	r25, r25
 21e:	b7 51       	subi	r27, 0x17	; 23
 220:	a0 f0       	brcs	.+40     	; 0x24a <__fixunssfsi+0x38>
 222:	d1 f0       	breq	.+52     	; 0x258 <__fixunssfsi+0x46>
 224:	66 0f       	add	r22, r22
 226:	77 1f       	adc	r23, r23
 228:	88 1f       	adc	r24, r24
 22a:	99 1f       	adc	r25, r25
 22c:	1a f0       	brmi	.+6      	; 0x234 <__fixunssfsi+0x22>
 22e:	ba 95       	dec	r27
 230:	c9 f7       	brne	.-14     	; 0x224 <__fixunssfsi+0x12>
 232:	12 c0       	rjmp	.+36     	; 0x258 <__fixunssfsi+0x46>
 234:	b1 30       	cpi	r27, 0x01	; 1
 236:	81 f0       	breq	.+32     	; 0x258 <__fixunssfsi+0x46>
 238:	5e d0       	rcall	.+188    	; 0x2f6 <__fp_zero>
 23a:	b1 e0       	ldi	r27, 0x01	; 1
 23c:	08 95       	ret
 23e:	5b c0       	rjmp	.+182    	; 0x2f6 <__fp_zero>
 240:	67 2f       	mov	r22, r23
 242:	78 2f       	mov	r23, r24
 244:	88 27       	eor	r24, r24
 246:	b8 5f       	subi	r27, 0xF8	; 248
 248:	39 f0       	breq	.+14     	; 0x258 <__fixunssfsi+0x46>
 24a:	b9 3f       	cpi	r27, 0xF9	; 249
 24c:	cc f3       	brlt	.-14     	; 0x240 <__fixunssfsi+0x2e>
 24e:	86 95       	lsr	r24
 250:	77 95       	ror	r23
 252:	67 95       	ror	r22
 254:	b3 95       	inc	r27
 256:	d9 f7       	brne	.-10     	; 0x24e <__fixunssfsi+0x3c>
 258:	3e f4       	brtc	.+14     	; 0x268 <__fixunssfsi+0x56>
 25a:	90 95       	com	r25
 25c:	80 95       	com	r24
 25e:	70 95       	com	r23
 260:	61 95       	neg	r22
 262:	7f 4f       	sbci	r23, 0xFF	; 255
 264:	8f 4f       	sbci	r24, 0xFF	; 255
 266:	9f 4f       	sbci	r25, 0xFF	; 255
 268:	08 95       	ret

0000026a <__fp_cmp>:
 26a:	99 0f       	add	r25, r25
 26c:	00 08       	sbc	r0, r0
 26e:	55 0f       	add	r21, r21
 270:	aa 0b       	sbc	r26, r26
 272:	e0 e8       	ldi	r30, 0x80	; 128
 274:	fe ef       	ldi	r31, 0xFE	; 254
 276:	16 16       	cp	r1, r22
 278:	17 06       	cpc	r1, r23
 27a:	e8 07       	cpc	r30, r24
 27c:	f9 07       	cpc	r31, r25
 27e:	c0 f0       	brcs	.+48     	; 0x2b0 <__fp_cmp+0x46>
 280:	12 16       	cp	r1, r18
 282:	13 06       	cpc	r1, r19
 284:	e4 07       	cpc	r30, r20
 286:	f5 07       	cpc	r31, r21
 288:	98 f0       	brcs	.+38     	; 0x2b0 <__fp_cmp+0x46>
 28a:	62 1b       	sub	r22, r18
 28c:	73 0b       	sbc	r23, r19
 28e:	84 0b       	sbc	r24, r20
 290:	95 0b       	sbc	r25, r21
 292:	39 f4       	brne	.+14     	; 0x2a2 <__fp_cmp+0x38>
 294:	0a 26       	eor	r0, r26
 296:	61 f0       	breq	.+24     	; 0x2b0 <__fp_cmp+0x46>
 298:	23 2b       	or	r18, r19
 29a:	24 2b       	or	r18, r20
 29c:	25 2b       	or	r18, r21
 29e:	21 f4       	brne	.+8      	; 0x2a8 <__fp_cmp+0x3e>
 2a0:	08 95       	ret
 2a2:	0a 26       	eor	r0, r26
 2a4:	09 f4       	brne	.+2      	; 0x2a8 <__fp_cmp+0x3e>
 2a6:	a1 40       	sbci	r26, 0x01	; 1
 2a8:	a6 95       	lsr	r26
 2aa:	8f ef       	ldi	r24, 0xFF	; 255
 2ac:	81 1d       	adc	r24, r1
 2ae:	81 1d       	adc	r24, r1
 2b0:	08 95       	ret

000002b2 <__fp_split3>:
 2b2:	57 fd       	sbrc	r21, 7
 2b4:	90 58       	subi	r25, 0x80	; 128
 2b6:	44 0f       	add	r20, r20
 2b8:	55 1f       	adc	r21, r21
 2ba:	59 f0       	breq	.+22     	; 0x2d2 <__fp_splitA+0x10>
 2bc:	5f 3f       	cpi	r21, 0xFF	; 255
 2be:	71 f0       	breq	.+28     	; 0x2dc <__fp_splitA+0x1a>
 2c0:	47 95       	ror	r20

000002c2 <__fp_splitA>:
 2c2:	88 0f       	add	r24, r24
 2c4:	97 fb       	bst	r25, 7
 2c6:	99 1f       	adc	r25, r25
 2c8:	61 f0       	breq	.+24     	; 0x2e2 <__fp_splitA+0x20>
 2ca:	9f 3f       	cpi	r25, 0xFF	; 255
 2cc:	79 f0       	breq	.+30     	; 0x2ec <__fp_splitA+0x2a>
 2ce:	87 95       	ror	r24
 2d0:	08 95       	ret
 2d2:	12 16       	cp	r1, r18
 2d4:	13 06       	cpc	r1, r19
 2d6:	14 06       	cpc	r1, r20
 2d8:	55 1f       	adc	r21, r21
 2da:	f2 cf       	rjmp	.-28     	; 0x2c0 <__fp_split3+0xe>
 2dc:	46 95       	lsr	r20
 2de:	f1 df       	rcall	.-30     	; 0x2c2 <__fp_splitA>
 2e0:	08 c0       	rjmp	.+16     	; 0x2f2 <__fp_splitA+0x30>
 2e2:	16 16       	cp	r1, r22
 2e4:	17 06       	cpc	r1, r23
 2e6:	18 06       	cpc	r1, r24
 2e8:	99 1f       	adc	r25, r25
 2ea:	f1 cf       	rjmp	.-30     	; 0x2ce <__fp_splitA+0xc>
 2ec:	86 95       	lsr	r24
 2ee:	71 05       	cpc	r23, r1
 2f0:	61 05       	cpc	r22, r1
 2f2:	08 94       	sec
 2f4:	08 95       	ret

000002f6 <__fp_zero>:
 2f6:	e8 94       	clt

000002f8 <__fp_szero>:
 2f8:	bb 27       	eor	r27, r27
 2fa:	66 27       	eor	r22, r22
 2fc:	77 27       	eor	r23, r23
 2fe:	cb 01       	movw	r24, r22
 300:	97 f9       	bld	r25, 7
 302:	08 95       	ret

00000304 <__gesf2>:
 304:	b2 df       	rcall	.-156    	; 0x26a <__fp_cmp>
 306:	08 f4       	brcc	.+2      	; 0x30a <__gesf2+0x6>
 308:	8f ef       	ldi	r24, 0xFF	; 255
 30a:	08 95       	ret

0000030c <__mulsf3>:
 30c:	0b d0       	rcall	.+22     	; 0x324 <__mulsf3x>
 30e:	78 c0       	rjmp	.+240    	; 0x400 <__fp_round>
 310:	69 d0       	rcall	.+210    	; 0x3e4 <__fp_pscA>
 312:	28 f0       	brcs	.+10     	; 0x31e <__mulsf3+0x12>
 314:	6e d0       	rcall	.+220    	; 0x3f2 <__fp_pscB>
 316:	18 f0       	brcs	.+6      	; 0x31e <__mulsf3+0x12>
 318:	95 23       	and	r25, r21
 31a:	09 f0       	breq	.+2      	; 0x31e <__mulsf3+0x12>
 31c:	5a c0       	rjmp	.+180    	; 0x3d2 <__fp_inf>
 31e:	5f c0       	rjmp	.+190    	; 0x3de <__fp_nan>
 320:	11 24       	eor	r1, r1
 322:	ea cf       	rjmp	.-44     	; 0x2f8 <__fp_szero>

00000324 <__mulsf3x>:
 324:	c6 df       	rcall	.-116    	; 0x2b2 <__fp_split3>
 326:	a0 f3       	brcs	.-24     	; 0x310 <__mulsf3+0x4>

00000328 <__mulsf3_pse>:
 328:	95 9f       	mul	r25, r21
 32a:	d1 f3       	breq	.-12     	; 0x320 <__mulsf3+0x14>
 32c:	95 0f       	add	r25, r21
 32e:	50 e0       	ldi	r21, 0x00	; 0
 330:	55 1f       	adc	r21, r21
 332:	62 9f       	mul	r22, r18
 334:	f0 01       	movw	r30, r0
 336:	72 9f       	mul	r23, r18
 338:	bb 27       	eor	r27, r27
 33a:	f0 0d       	add	r31, r0
 33c:	b1 1d       	adc	r27, r1
 33e:	63 9f       	mul	r22, r19
 340:	aa 27       	eor	r26, r26
 342:	f0 0d       	add	r31, r0
 344:	b1 1d       	adc	r27, r1
 346:	aa 1f       	adc	r26, r26
 348:	64 9f       	mul	r22, r20
 34a:	66 27       	eor	r22, r22
 34c:	b0 0d       	add	r27, r0
 34e:	a1 1d       	adc	r26, r1
 350:	66 1f       	adc	r22, r22
 352:	82 9f       	mul	r24, r18
 354:	22 27       	eor	r18, r18
 356:	b0 0d       	add	r27, r0
 358:	a1 1d       	adc	r26, r1
 35a:	62 1f       	adc	r22, r18
 35c:	73 9f       	mul	r23, r19
 35e:	b0 0d       	add	r27, r0
 360:	a1 1d       	adc	r26, r1
 362:	62 1f       	adc	r22, r18
 364:	83 9f       	mul	r24, r19
 366:	a0 0d       	add	r26, r0
 368:	61 1d       	adc	r22, r1
 36a:	22 1f       	adc	r18, r18
 36c:	74 9f       	mul	r23, r20
 36e:	33 27       	eor	r19, r19
 370:	a0 0d       	add	r26, r0
 372:	61 1d       	adc	r22, r1
 374:	23 1f       	adc	r18, r19
 376:	84 9f       	mul	r24, r20
 378:	60 0d       	add	r22, r0
 37a:	21 1d       	adc	r18, r1
 37c:	82 2f       	mov	r24, r18
 37e:	76 2f       	mov	r23, r22
 380:	6a 2f       	mov	r22, r26
 382:	11 24       	eor	r1, r1
 384:	9f 57       	subi	r25, 0x7F	; 127
 386:	50 40       	sbci	r21, 0x00	; 0
 388:	8a f0       	brmi	.+34     	; 0x3ac <__mulsf3_pse+0x84>
 38a:	e1 f0       	breq	.+56     	; 0x3c4 <__mulsf3_pse+0x9c>
 38c:	88 23       	and	r24, r24
 38e:	4a f0       	brmi	.+18     	; 0x3a2 <__mulsf3_pse+0x7a>
 390:	ee 0f       	add	r30, r30
 392:	ff 1f       	adc	r31, r31
 394:	bb 1f       	adc	r27, r27
 396:	66 1f       	adc	r22, r22
 398:	77 1f       	adc	r23, r23
 39a:	88 1f       	adc	r24, r24
 39c:	91 50       	subi	r25, 0x01	; 1
 39e:	50 40       	sbci	r21, 0x00	; 0
 3a0:	a9 f7       	brne	.-22     	; 0x38c <__mulsf3_pse+0x64>
 3a2:	9e 3f       	cpi	r25, 0xFE	; 254
 3a4:	51 05       	cpc	r21, r1
 3a6:	70 f0       	brcs	.+28     	; 0x3c4 <__mulsf3_pse+0x9c>
 3a8:	14 c0       	rjmp	.+40     	; 0x3d2 <__fp_inf>
 3aa:	a6 cf       	rjmp	.-180    	; 0x2f8 <__fp_szero>
 3ac:	5f 3f       	cpi	r21, 0xFF	; 255
 3ae:	ec f3       	brlt	.-6      	; 0x3aa <__mulsf3_pse+0x82>
 3b0:	98 3e       	cpi	r25, 0xE8	; 232
 3b2:	dc f3       	brlt	.-10     	; 0x3aa <__mulsf3_pse+0x82>
 3b4:	86 95       	lsr	r24
 3b6:	77 95       	ror	r23
 3b8:	67 95       	ror	r22
 3ba:	b7 95       	ror	r27
 3bc:	f7 95       	ror	r31
 3be:	e7 95       	ror	r30
 3c0:	9f 5f       	subi	r25, 0xFF	; 255
 3c2:	c1 f7       	brne	.-16     	; 0x3b4 <__mulsf3_pse+0x8c>
 3c4:	fe 2b       	or	r31, r30
 3c6:	88 0f       	add	r24, r24
 3c8:	91 1d       	adc	r25, r1
 3ca:	96 95       	lsr	r25
 3cc:	87 95       	ror	r24
 3ce:	97 f9       	bld	r25, 7
 3d0:	08 95       	ret

000003d2 <__fp_inf>:
 3d2:	97 f9       	bld	r25, 7
 3d4:	9f 67       	ori	r25, 0x7F	; 127
 3d6:	80 e8       	ldi	r24, 0x80	; 128
 3d8:	70 e0       	ldi	r23, 0x00	; 0
 3da:	60 e0       	ldi	r22, 0x00	; 0
 3dc:	08 95       	ret

000003de <__fp_nan>:
 3de:	9f ef       	ldi	r25, 0xFF	; 255
 3e0:	80 ec       	ldi	r24, 0xC0	; 192
 3e2:	08 95       	ret

000003e4 <__fp_pscA>:
 3e4:	00 24       	eor	r0, r0
 3e6:	0a 94       	dec	r0
 3e8:	16 16       	cp	r1, r22
 3ea:	17 06       	cpc	r1, r23
 3ec:	18 06       	cpc	r1, r24
 3ee:	09 06       	cpc	r0, r25
 3f0:	08 95       	ret

000003f2 <__fp_pscB>:
 3f2:	00 24       	eor	r0, r0
 3f4:	0a 94       	dec	r0
 3f6:	12 16       	cp	r1, r18
 3f8:	13 06       	cpc	r1, r19
 3fa:	14 06       	cpc	r1, r20
 3fc:	05 06       	cpc	r0, r21
 3fe:	08 95       	ret

00000400 <__fp_round>:
 400:	09 2e       	mov	r0, r25
 402:	03 94       	inc	r0
 404:	00 0c       	add	r0, r0
 406:	11 f4       	brne	.+4      	; 0x40c <__fp_round+0xc>
 408:	88 23       	and	r24, r24
 40a:	52 f0       	brmi	.+20     	; 0x420 <__fp_round+0x20>
 40c:	bb 0f       	add	r27, r27
 40e:	40 f4       	brcc	.+16     	; 0x420 <__fp_round+0x20>
 410:	bf 2b       	or	r27, r31
 412:	11 f4       	brne	.+4      	; 0x418 <__fp_round+0x18>
 414:	60 ff       	sbrs	r22, 0
 416:	04 c0       	rjmp	.+8      	; 0x420 <__fp_round+0x20>
 418:	6f 5f       	subi	r22, 0xFF	; 255
 41a:	7f 4f       	sbci	r23, 0xFF	; 255
 41c:	8f 4f       	sbci	r24, 0xFF	; 255
 41e:	9f 4f       	sbci	r25, 0xFF	; 255
 420:	08 95       	ret

00000422 <_exit>:
 422:	f8 94       	cli

00000424 <__stop_program>:
 424:	ff cf       	rjmp	.-2      	; 0x424 <__stop_program>
