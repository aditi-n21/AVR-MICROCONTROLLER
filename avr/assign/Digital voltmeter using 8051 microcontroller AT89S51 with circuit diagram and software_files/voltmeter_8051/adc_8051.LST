C51 COMPILER V9.01   ADC_8051                                                              01/23/2014 12:20:48 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE ADC_8051
OBJECT MODULE PLACED IN adc_8051.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE adc_8051.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<reg51.h>
   2          void _nop_(void);
   3          
   4          #define delay_us _nop_(); //generates 1 microsecond
   5          #define LCD P2
   6          #define ADC_OUT P1
   7          sbit RS=P3^0; //connect p3.0 to rs pin of lcd
   8          sbit RW=P3^1; //connect p3.2 to en pin of lcd
   9          sbit EN=P3^2; //connect p3.1 to en pin of lcd
  10          
  11          sbit rd = P3^3;
  12          sbit wr = P3^4;
  13          sbit intr = P3^5;
  14          
  15          void init_lcd(void);
  16          void cmd_lcd(unsigned char);
  17          void write_lcd(unsigned char);
  18          void display_lcd(unsigned char *);
  19          void delay_ms(unsigned int);
  20          void temp();                                                             //for temperature 
  21          void convertAndDisplay(unsigned int value);
  22          void timer(unsigned char);
  23          void temp_check(unsigned char);
  24          
  25          
  26          void main()
  27          {
  28   1          TMOD=0x20;
  29   1              init_lcd();
  30   1              cmd_lcd(0x82);
  31   1              display_lcd("TEMP:");
  32   1         while(1)
  33   1         {
  34   2              temp();  
  35   2         }
  36   1      }
  37          
  38          void timer(unsigned char msec)   // Function for timer
  39          {
  40   1              unsigned char i;
  41   1              TR1=1;
  42   1              for(i=0;i<msec;i++)
  43   1              {
  44   2                      while(TF1==0);
  45   2                      TF1=0;
  46   2              }
  47   1              TR1=0;
  48   1      }
  49          
  50          void temp() 
  51          {        unsigned int value;
  52   1                     delay_ms(1);
  53   1                         wr = 0;
  54   1                        delay_ms(1);
  55   1                        wr = 1;
C51 COMPILER V9.01   ADC_8051                                                              01/23/2014 12:20:48 PAGE 2   

  56   1                        while(intr==1);
  57   1                        rd=0;
  58   1                        value = ADC_OUT;        
  59   1                        convertAndDisplay(value);
  60   1                        rd=1;
  61   1      }
  62          
  63           /*void convertAndDisplay(unsigned int value)
  64                   
  65                   {
  66                      unsigned char x,d1,d2;
  67                          value=value*2;
  68                          d1=value%10;
  69                          d2=value/10;
  70                          cmd_lcd(0x88);
  71                          write_lcd(d2+48);               
  72                          write_lcd(d1+48);
  73                          write_lcd('`');
  74                          write_lcd('C');
  75                          delay_ms(10);
  76                          
  77          } */
  78            void convertAndDisplay(unsigned int value)    //func.   for voltage
  79                   
  80                   {
  81   1                  unsigned char x,d1,d2;
  82   1                      float value1;
  83   1                      value1=(float)value;
  84   1                      value1=(value1*500)/255;
  85   1                      value=(unsigned int)value1;
  86   1                      d1=value%10;            //lsb
  87   1                      d2=value/10;
  88   1                      x=d2%10;
  89   1                      d2=d2/10;        //msb
  90   1                      cmd_lcd(0x88);
  91   1                      write_lcd(d2+48);
  92   1                      write_lcd('.');         
  93   1                      write_lcd(x+48);
  94   1                      write_lcd(d1+48);
  95   1                      delay_ms(10);
  96   1                      
  97   1      }       
  98          //initialize lcd
  99          void init_lcd(void)
 100          {                           
 101   1      delay_ms(10); //delay 10 milliseconds
 102   1      cmd_lcd(0x0e); //lcd on, cursor on
 103   1      delay_ms(10);
 104   1      cmd_lcd(0x38); //8 bit initialize, 5x7 character font, 16x2 display
 105   1      delay_ms(10);
 106   1      cmd_lcd(0x06); //right shift cursor automatically after each character is displayed
 107   1      delay_ms(10);
 108   1      cmd_lcd(0x01); //clear lcd
 109   1      delay_ms(10);
 110   1      cmd_lcd (0x80);
 111   1      }
 112          //transmit command or instruction to lcd
 113          void cmd_lcd(unsigned char c)
 114          {
 115   1      EN=1;
 116   1      RW=0;//set enable pin
 117   1      RS=0; //clear register select pin
C51 COMPILER V9.01   ADC_8051                                                              01/23/2014 12:20:48 PAGE 3   

 118   1      LCD=c; //load 8 bit data
 119   1      EN=0; //clear enable pin
 120   1      delay_ms(2); //delay 2 milliseconds
 121   1      }
 122          //transmit a character to be displayed on lcd
 123          void write_lcd(unsigned char c)
 124          {
 125   1      EN=1; //set enable pin
 126   1      RW=0;
 127   1      RS=1; //set register select pin
 128   1      LCD=c;  //load 8 bit data
 129   1      EN=0; //clear enable pin
 130   1      delay_ms(2); //delay 2 milliseconds
 131   1      }
 132          //transmit a string to be displayed on lcd
 133          void display_lcd(unsigned char *s)
 134          {
 135   1      while(*s)
 136   1      write_lcd(*s++);
 137   1      }
 138          //generates delay in milli seconds
 139          void delay_ms(unsigned int i)
 140          {
 141   1      unsigned int j;
 142   1                  while(i-->0)
 143   1                  {
 144   2                              for(j=0;j<500;j++)
 145   2                              {
 146   3                                          ;
 147   3                              }
 148   2                  }
 149   1      }  


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    368    ----
   CONSTANT SIZE    =      6    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
