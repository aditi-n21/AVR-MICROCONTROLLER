C51 COMPILER V9.51   PBLS                                                                  04/01/2014 11:21:08 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE PBLS
OBJECT MODULE PLACED IN pbls.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE pbls.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include<reg51.h>
   2          #include<string.h>
   3          #define LCD P1
   4          sbit RS = P3^2;
   5          sbit RW = P3^1;
   6          sbit EN = P3^0;
   7          sbit red = P1^1;
   8          sbit green = P1^2;
   9          sbit buzz = P1^0;
  10          sbit row0 = P0^7;
  11          sbit row1 = P0^6;
  12          sbit row2 = P0^5;
  13          sbit col0 = P0^3;
  14          sbit col1 = P0^2;
  15          sbit col2 = P0^1;
  16          sbit rotor_a = P2^0;
  17          sbit rotor_b = P2^1;
  18          sbit rotor_c = P2^2;
  19          sbit rotor_d = P2^3;
  20          
  21          unsigned int input,ps1=12345;
  22          
  23          void lcd_cmd(unsigned char);
  24          void lcd_data(unsigned char);
  25          void lcd_str(unsigned char *);
  26          void lcd_init(void);
  27          unsigned char keysense(void);
  28          void delay(unsigned char);
  29          unsigned int insert(void);
  30          unsigned char cardread(void);
  31          void right(void);
  32          void stepperf(void);
  33          void stepperb(void);
  34          //char arr[10] = {0x40,0x79,0x24,0x30,0x19,0x12,0x02,0x78,0x00,0x10};
  35          
  36          void delay(unsigned char time)
  37          {
  38   1      int i,j;
  39   1      for(j=0;j<time;j++)
  40   1      for(i=0;i<1275;i++);
  41   1      }
  42          unsigned char keysense(void)
  43          {
  44   1      while(1)
  45   1      {
  46   2      col0=0;
  47   2      col1=1;
  48   2      col2=1;
  49   2      if(row0==0)
  50   2      return(1);
  51   2      if(row1==0)
  52   2      return(4);
  53   2      if(row2==0)
  54   2      return(7);
  55   2      col0=1;
C51 COMPILER V9.51   PBLS                                                                  04/01/2014 11:21:08 PAGE 2   

  56   2      col1=0;
  57   2      col2=1;
  58   2      if(row0==0)
  59   2      return(2);
  60   2      if(row1==0)
  61   2      return(5);
  62   2      if(row2==0)
  63   2      return(8);
  64   2      col0=1;
  65   2      col1=1;
  66   2      col2=0;
  67   2      if(row0==0)
  68   2      return(3);
  69   2      if(row1==0)
  70   2      return(6);
  71   2      if(row2==0)
  72   2      return(9);
  73   2      delay(10);
  74   2      };
  75   1      }
  76          
  77          void lcd_init() 
  78          {
  79   1      lcd_cmd(0x38);
  80   1      lcd_cmd(0x01);
  81   1      lcd_cmd(0x06);
  82   1      lcd_cmd(0x0E);
  83   1      lcd_cmd(0x80);
  84   1      }
  85          void lcd_cmd(unsigned char value) 
  86          {
  87   1      LCD=value;
  88   1      RS=0;
  89   1      RW=0;
  90   1      EN=1;
  91   1      delay(5);
  92   1      EN=0;
  93   1      }
  94          void lcd_str(unsigned char *s)
  95          {
  96   1        unsigned char l,j;
  97   1        l=strlen(s);
  98   1        for(j=0;j<l;j++)
  99   1          {
 100   2            lcd_data(*s);
 101   2            s++;
 102   2          delay(10);
 103   2          }
 104   1      }
 105          void lcd_data(unsigned char value) 
 106          {
 107   1      LCD=value;
 108   1      RS=1;
 109   1      RW=0;
 110   1      EN=1;
 111   1      delay(5);
 112   1      EN=0;
 113   1      }
 114          unsigned int insert(void)
 115          {   unsigned char t1,t2,t3,t4,t5;
 116   1          lcd_init();
 117   1          lcd_str("Enter password");
C51 COMPILER V9.51   PBLS                                                                  04/01/2014 11:21:08 PAGE 3   

 118   1          t1=keysense();
 119   1          lcd_cmd(0xc6);
 120   1          lcd_data('#');
 121   1          //  lcd_data(t1+48);
 122   1        
 123   1          delay(100);
 124   1          t2=keysense();
 125   1          lcd_cmd(0xc7);
 126   1          lcd_data('#');
 127   1          //lcd_data(t2+48);
 128   1        
 129   1          delay(100);
 130   1          t3=keysense();
 131   1          lcd_cmd(0xc8);
 132   1        lcd_data('#');
 133   1        //lcd_data(t3+48);
 134   1        
 135   1          delay(100);
 136   1          t4=keysense();
 137   1          lcd_cmd(0xc9);
 138   1        lcd_data('#');
 139   1        //  lcd_data(t1+48);
 140   1        delay(100);
 141   1        t5=keysense();
 142   1          lcd_cmd(0xca);
 143   1          lcd_data('#');
 144   1          //lcd_data(t2+48);
 145   1        
 146   1          delay(100);
 147   1          
 148   1        
 149   1          input=10000*t1+1000*t2+100*t3+10*t4+t5;
 150   1          return(input);
 151   1      }
 152                  
 153          void right(void)
 154              {
 155   1          lcd_init();
 156   1          lcd_str("Correct Password");
 157   1          delay(10);
 158   1          lcd_init();
 159   1          lcd_str("Opening Door");
 160   1          green=0;
 161   1          red=0;
 162   1          stepperf();
 163   1          lcd_cmd(0xc0);
 164   1          lcd_str("  Ur Welcome");
 165   1          delay(100);
 166   1          lcd_cmd(0x01);
 167   1          lcd_cmd(0x80);
 168   1          lcd_str("Closing Door");
 169   1          delay(10);
 170   1          stepperb();
 171   1          delay(10);
 172   1          lcd_cmd(0xc0);
 173   1          lcd_str("Door Closed");
 174   1          delay(10);
 175   1          green=1;
 176   1          delay(10);
 177   1          red=0;
 178   1          delay(10);
 179   1          delay(10);
C51 COMPILER V9.51   PBLS                                                                  04/01/2014 11:21:08 PAGE 4   

 180   1          lcd_cmd(0x80);
 181   1          lcd_str("Security System");
 182   1              delay(10);
 183   1             } 
 184          void stepperf(void)
 185          {
 186   1        unsigned int i;
 187   1        for(i=0;i<30;i++)
 188   1          {
 189   2            rotor_a=1;
 190   2      rotor_b=0;
 191   2      rotor_c=0;
 192   2      rotor_d=0;
 193   2            delay(10);
 194   2            rotor_a=0;
 195   2      rotor_b=1;
 196   2      rotor_c=0;
 197   2      rotor_d=0;
 198   2            delay(10);
 199   2            rotor_a=0;
 200   2      rotor_b=0;
 201   2      rotor_c=1;
 202   2      rotor_d=0;
 203   2            delay(10);
 204   2            rotor_a=0;
 205   2      rotor_b=0;
 206   2      rotor_c=0;
 207   2      rotor_d=1;
 208   2            delay(10);
 209   2          }
 210   1      }
 211          void stepperb(void)
 212          {
 213   1        unsigned int i;
 214   1        for(i=0;i<30;i++)
 215   1          {
 216   2            rotor_a=0;
 217   2      rotor_b=0;
 218   2      rotor_c=0;
 219   2      rotor_d=1;
 220   2            delay(10);
 221   2            rotor_a=0;
 222   2      rotor_b=0;
 223   2      rotor_c=1;
 224   2      rotor_d=0;
 225   2            delay(10);
 226   2            rotor_a=0;
 227   2      rotor_b=1;
 228   2      rotor_c=0;
 229   2      rotor_d=0;
 230   2            delay(10);
 231   2            rotor_a=1;
 232   2      rotor_b=0;
 233   2      rotor_c=0;
 234   2      rotor_d=0;
 235   2            delay(10);
 236   2          }
 237   1      }
 238          /*unsigned char cardread(void)
 239          {
 240                        
 241                 if((octo1==0)&&(octo2==0))
C51 COMPILER V9.51   PBLS                                                                  04/01/2014 11:21:08 PAGE 5   

 242                {
 243                return('0');
 244                }
 245              else if((octo1==0)&&(octo2==1))
 246                {
 247                 return('1');
 248                
 249                }
 250              else if((octo1==1)&&(octo2==0))
 251                {
 252                 return('2');
 253                                                           
 254                }
 255              else 
 256                 return('3');
 257          }
 258          
 259          */
 260          void main()
 261          {
 262   1      unsigned char cnt=0;
 263   1      red=0;
 264   1      green=1;
 265   1      buzz=1;
 266   1      delay(10);
 267   1      P3=0x07;
 268   1      lcd_init();
 269   1      lcd_str("A PROJECT ON");
 270   1      lcd_cmd(0xc0);
 271   1      lcd_str("PASSWORD BASED");
 272   1      delay(10);
 273   1      lcd_cmd(0x01);
 274   1      lcd_str("SECURITY SYSTEM");
 275   1      /*lcd_cmd(0x01);
 276   1      lcd_str("MADE BY :-");
 277   1      lcd_cmd(0xc5);
 278   1      lcd_str("NEHA & SONIA");
 279   1      delay(10); */
 280   1      delay(10);
 281   1      while(1)
 282   1      {
 283   2          aa1:   insert();
 284   2             if(input==ps1)
 285   2                  {
 286   3               right();
 287   3                }
 288   2             else
 289   2              {
 290   3            lcd_cmd(0x01);
 291   3            lcd_str(" Wrong Password");
 292   3            buzz=0;
 293   3            red=1;
 294   3            delay(50);
 295   3            buzz=1;
 296   3            cnt++;
 297   3            if(cnt<=2)
 298   3            {
 299   4             lcd_cmd(0xc0);
 300   4             lcd_str(" ENTER IT AGAIN");
 301   4             red=0;
 302   4             goto aa1;
 303   4            }
C51 COMPILER V9.51   PBLS                                                                  04/01/2014 11:21:08 PAGE 6   

 304   3            else
 305   3              {
 306   4                lcd_cmd(0x01);
 307   4                lcd_str("   3rd time");
 308   4                lcd_cmd(0xc0);
 309   4                lcd_str(" Wrong Password");
 310   4                  buzz=0;
 311   4                delay(50);
 312   4                lcd_cmd(0x01);
 313   4                        red = 0;
 314   4                  lcd_str(" System Exiting!!!!");
 315   4                delay(100);
 316   4                buzz=1;
 317   4                lcd_cmd(0x01);
 318   4                lcd_cmd(0x80);
 319   4                lcd_str("Security System");
 320   4                        delay(10);
 321   4              }
 322   3            }  
 323   2            cnt=0;  
 324   2      }
 325   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    831    ----
   CONSTANT SIZE    =    207    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
