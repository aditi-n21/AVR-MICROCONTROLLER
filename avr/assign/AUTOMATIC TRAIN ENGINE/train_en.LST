C51 COMPILER V9.51   TRAIN_EN                                                              09/27/2013 07:33:18 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE TRAIN_EN
OBJECT MODULE PLACED IN train_en.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE train_en.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1           #include<reg51.h>
   2          #define LCD P0
   3          
   4          sbit RS=P2^0; //connect p3.0 to rs pin of lcd
   5          sbit RW=P2^1; //connect p3.1 to en pin of lcd
   6          sbit EN=P2^2; //connect p3.2 to en pin of lcd
   7          
   8          sbit RED= P1^1;
   9          sbit Yellow= P1^2;
  10          sbit Green= P1^0;
  11          //sbit mode4= P2^3;
  12          sbit led_red=P3^3;
  13          sbit led_yellow=P3^2;
  14          sbit led_green=P3^1;
  15          sbit buzz=P3^0;
  16          //sbit led4=P2^7;
  17          sbit motor= P2^4;
  18          //sbit motor=P2^0; 
  19          
  20          void timer(unsigned char);
  21          void variation(void);
  22          void delay_ms(unsigned int);
  23          void init_lcd(void);
  24          void cmd_lcd(unsigned char);
  25          void write_lcd(unsigned char);
  26          void display_lcd(unsigned char *);
  27          unsigned char keysense(void);
  28          
  29          
  30          unsigned char pwm_width;
  31          bit pwm_flag = 0;
  32          
  33          void timer0() interrupt 1 {
  34   1              if(!pwm_flag) { //Start of High level
  35   2                      pwm_flag = 1;   //Set flag
  36   2                      motor = 1;     //Set PWM o/p pin
  37   2                      TH0 = pwm_width;        //Load timer
  38   2                      TF0 = 0;                //Clear interrupt flag
  39   2                      return;         //Return
  40   2              }
  41   1              else {  //Start of Low level
  42   2                      pwm_flag = 0;   //Clear flag
  43   2                      motor = 0;     //Clear PWM o/p pin
  44   2                      TH0 = 255 - pwm_width;  //Load timer
  45   2                      TF0 = 0;        //Clear Interrupt flag
  46   2                      return;         //return
  47   2              }
  48   1      }
  49          
  50          void main()
  51          {
  52   1        unsigned char k;  
  53   1       //TMOD=0x20;
  54   1        //TH1=0xd2;
  55   1        RED=Yellow=Green=1;
C51 COMPILER V9.51   TRAIN_EN                                                              09/27/2013 07:33:18 PAGE 2   

  56   1       TMOD = 0x00;
  57   1      //        pwm_width = 200;
  58   1              EA = 1;
  59   1              ET0 = 1;
  60   1              TR0 = 1;
  61   1          init_lcd();
  62   1          cmd_lcd(0x80);
  63   1          display_lcd("WELCOME 2 AUTOMATIC");
  64   1          cmd_lcd(0xc0);
  65   1          display_lcd("TRAIN ENGINE");
  66   1          cmd_lcd(0x80);
  67   1          display_lcd("Made By:-");
  68   1          cmd_lcd(0xc0);
  69   1          display_lcd("Vaishali Chauhan");
  70   1       while(1)
  71   1       { 
  72   2         k=keysense();
  73   2         switch(k)
  74   2         {
  75   3          case 1:  
  76   3                 led_red=0;led_yellow=1;led_green=1;
  77   3               pwm_width = 00;
  78   3             cmd_lcd(0x80);
  79   3          
  80   3            display_lcd("100 % SPEED ");
  81   3      
  82   3      
  83   3           break;
  84   3        case 2:
  85   3               led_red=1;led_yellow=0;led_green=1;
  86   3        pwm_width = 126;
  87   3        buzz=0;
  88   3         cmd_lcd(0x80);
  89   3          display_lcd("50 % SPEED ");
  90   3      delay_ms(10);
  91   3        buzz=1;
  92   3           break;
  93   3          case 3:
  94   3               led_red=1;led_yellow=1;led_green=0;
  95   3            pwm_width = 255;
  96   3            cmd_lcd(0x80);
  97   3          display_lcd("stop ");
  98   3       break;
  99   3       default:   //pwm_width = pwm_width-40;
 100   3        //buzz=0;
 101   3       // led_red=1;led_yellow=1;led_green=1;
 102   3           
 103   3        //  cmd_lcd(0x80);
 104   3          //display_lcd("100 % SPEED ");
 105   3      //buzz=1;
 106   3             break;
 107   3         }
 108   2       } 
 109   1      }
 110          unsigned char keysense(void)
 111          {
 112   1      if(RED==0)
 113   1         return(1);
 114   1      else if(Yellow==0)
 115   1         return(2);
 116   1      else if(Green==0)
 117   1         return(3);
C51 COMPILER V9.51   TRAIN_EN                                                              09/27/2013 07:33:18 PAGE 3   

 118   1      //else if(mode4==0)
 119   1       //  return(4);
 120   1      else
 121   1          return(0);
 122   1      
 123   1      }
 124          /*void timer(unsigned char msec)   // Function for timer
 125          {
 126            unsigned char i;
 127            TR1=1;
 128            for(i=0;i<msec;i++)
 129            {
 130              while(TF1==0);
 131              TF1=0;
 132            }
 133            TR1=0;
 134          } */
 135          void delay_ms(unsigned int i)
 136          {
 137   1      unsigned int j;
 138   1                  while(i-->0)
 139   1                  {
 140   2                              for(j=0;j<500;j++)
 141   2                              {
 142   3                                          ;
 143   3                              }
 144   2                  }
 145   1      }           
 146          //initialize lcd
 147          void init_lcd(void)
 148          {                           
 149   1      cmd_lcd(0x0e); //lcd on, cursor on
 150   1      delay_ms(10);
 151   1      cmd_lcd(0x38); //8 bit initialize, 5x7 character font, 16x2 display
 152   1      delay_ms(10);
 153   1      cmd_lcd(0x06); //right shift cursor automatically after each character is displayed
 154   1      delay_ms(10);
 155   1      cmd_lcd(0x01); //clear lcd
 156   1      delay_ms(10);
 157   1      cmd_lcd (0x80);
 158   1      }
 159          //transmit command or instruction to lcd
 160          void cmd_lcd(unsigned char c)
 161          {
 162   1      EN=1;
 163   1      RW=0;//set enable pin
 164   1      RS=0; //clear register select pin
 165   1      LCD=c; //load 8 bit data
 166   1      EN=0; //clear enable pin
 167   1      delay_ms(2); //delay 2 milliseconds
 168   1      }
 169          //transmit a character to be displayed on lcd
 170          void write_lcd(unsigned char c)
 171          {
 172   1      EN=1; //set enable pin
 173   1      RW=0;
 174   1      RS=1; //set register select pin
 175   1      LCD=c;  //load 8 bit data
 176   1      EN=0; //clear enable pin
 177   1      delay_ms(2); //delay 2 milliseconds
 178   1      }
 179          //transmit a string to be displayed on lcd
C51 COMPILER V9.51   TRAIN_EN                                                              09/27/2013 07:33:18 PAGE 4   

 180          void display_lcd(unsigned char *s)
 181          {
 182   1      while(*s)
 183   1      write_lcd(*s++);
 184   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    374    ----
   CONSTANT SIZE    =     91    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
