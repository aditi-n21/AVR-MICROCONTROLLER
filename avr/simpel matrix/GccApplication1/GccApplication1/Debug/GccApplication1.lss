
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000100  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000006cc  00000000  00000000  00000154  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000085  00000000  00000000  00000820  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_aranges 00000080  00000000  00000000  000008a8  2**3
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   000004bd  00000000  00000000  00000928  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000127  00000000  00000000  00000de5  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000397  00000000  00000000  00000f0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000024  00000000  00000000  000012a4  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000010a  00000000  00000000  000012c8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 e0       	ldi	r30, 0x00	; 0
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 7e 00 	jmp	0xfc	; 0xfc <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:

#include <avr/io.h>
#include <util/delay.h>
int main(void)
{DDRD=0xff;
  92:	8f ef       	ldi	r24, 0xFF	; 255
  94:	81 bb       	out	0x11, r24	; 17
	DDRC=0xff;
  96:	84 bb       	out	0x14, r24	; 20
	DDRA=0xff;
  98:	8a bb       	out	0x1a, r24	; 26

//	unsigned char arr[]={0x7F, 0x49, 0x49, 0x49, 0x36,0x00,0x00,0x00};//for B
	while(1)
    {
		
			PORTC=0xfe;
  9a:	7e ef       	ldi	r23, 0xFE	; 254
			PORTD=0x7f;
  9c:	6f e7       	ldi	r22, 0x7F	; 127
			_delay_ms(10);
			PORTC=0xfd;
  9e:	5d ef       	ldi	r21, 0xFD	; 253
			PORTD=0x49;
  a0:	89 e4       	ldi	r24, 0x49	; 73
			_delay_ms(10);
				PORTC=0xfb;
  a2:	4b ef       	ldi	r20, 0xFB	; 251
				PORTD=0x49;
				_delay_ms(10);
					PORTC=0xf7;
  a4:	37 ef       	ldi	r19, 0xF7	; 247
					PORTD=0x49;
					_delay_ms(10);
						PORTC=0xef;
  a6:	2f ee       	ldi	r18, 0xEF	; 239
						PORTD=0x36;
  a8:	96 e3       	ldi	r25, 0x36	; 54

//	unsigned char arr[]={0x7F, 0x49, 0x49, 0x49, 0x36,0x00,0x00,0x00};//for B
	while(1)
    {
		
			PORTC=0xfe;
  aa:	75 bb       	out	0x15, r23	; 21
			PORTD=0x7f;
  ac:	62 bb       	out	0x12, r22	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ae:	e3 ec       	ldi	r30, 0xC3	; 195
  b0:	f9 e0       	ldi	r31, 0x09	; 9
  b2:	31 97       	sbiw	r30, 0x01	; 1
  b4:	f1 f7       	brne	.-4      	; 0xb2 <main+0x20>
  b6:	00 c0       	rjmp	.+0      	; 0xb8 <main+0x26>
  b8:	00 00       	nop
			_delay_ms(10);
			PORTC=0xfd;
  ba:	55 bb       	out	0x15, r21	; 21
			PORTD=0x49;
  bc:	82 bb       	out	0x12, r24	; 18
  be:	e3 ec       	ldi	r30, 0xC3	; 195
  c0:	f9 e0       	ldi	r31, 0x09	; 9
  c2:	31 97       	sbiw	r30, 0x01	; 1
  c4:	f1 f7       	brne	.-4      	; 0xc2 <main+0x30>
  c6:	00 c0       	rjmp	.+0      	; 0xc8 <main+0x36>
  c8:	00 00       	nop
			_delay_ms(10);
				PORTC=0xfb;
  ca:	45 bb       	out	0x15, r20	; 21
				PORTD=0x49;
  cc:	82 bb       	out	0x12, r24	; 18
  ce:	e3 ec       	ldi	r30, 0xC3	; 195
  d0:	f9 e0       	ldi	r31, 0x09	; 9
  d2:	31 97       	sbiw	r30, 0x01	; 1
  d4:	f1 f7       	brne	.-4      	; 0xd2 <main+0x40>
  d6:	00 c0       	rjmp	.+0      	; 0xd8 <main+0x46>
  d8:	00 00       	nop
				_delay_ms(10);
					PORTC=0xf7;
  da:	35 bb       	out	0x15, r19	; 21
					PORTD=0x49;
  dc:	82 bb       	out	0x12, r24	; 18
  de:	e3 ec       	ldi	r30, 0xC3	; 195
  e0:	f9 e0       	ldi	r31, 0x09	; 9
  e2:	31 97       	sbiw	r30, 0x01	; 1
  e4:	f1 f7       	brne	.-4      	; 0xe2 <main+0x50>
  e6:	00 c0       	rjmp	.+0      	; 0xe8 <main+0x56>
  e8:	00 00       	nop
					_delay_ms(10);
						PORTC=0xef;
  ea:	25 bb       	out	0x15, r18	; 21
						PORTD=0x36;
  ec:	92 bb       	out	0x12, r25	; 18
  ee:	e3 ec       	ldi	r30, 0xC3	; 195
  f0:	f9 e0       	ldi	r31, 0x09	; 9
  f2:	31 97       	sbiw	r30, 0x01	; 1
  f4:	f1 f7       	brne	.-4      	; 0xf2 <main+0x60>
  f6:	00 c0       	rjmp	.+0      	; 0xf8 <main+0x66>
  f8:	00 00       	nop
  fa:	d7 cf       	rjmp	.-82     	; 0xaa <main+0x18>

000000fc <_exit>:
  fc:	f8 94       	cli

000000fe <__stop_program>:
  fe:	ff cf       	rjmp	.-2      	; 0xfe <__stop_program>
