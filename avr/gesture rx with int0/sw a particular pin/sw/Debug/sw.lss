
sw.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000027e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000006cc  00000000  00000000  000002d4  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000085  00000000  00000000  000009a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_aranges 00000080  00000000  00000000  00000a28  2**3
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   000007ae  00000000  00000000  00000aa8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000169  00000000  00000000  00001256  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000003d8  00000000  00000000  000013bf  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  000000a4  00000000  00000000  00001798  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000011e  00000000  00000000  0000183c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000002dd  00000000  00000000  0000195a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 76 00 	jmp	0xec	; 0xec <__vector_1>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ee e7       	ldi	r30, 0x7E	; 126
  68:	f2 e0       	ldi	r31, 0x02	; 2
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 e7 00 	call	0x1ce	; 0x1ce <main>
  8a:	0c 94 3d 01 	jmp	0x27a	; 0x27a <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <car_trun>:
#include <avr/interrupt.h>
void int_interrupt0();
void car_trun();
void car_trun()
{
	if (bit_is_set(PIND,PD3))
  92:	83 9b       	sbis	0x10, 3	; 16
  94:	21 c0       	rjmp	.+66     	; 0xd8 <car_trun+0x46>
	{
		PORTA=0x55;
  96:	85 e5       	ldi	r24, 0x55	; 85
  98:	8b bb       	out	0x1b, r24	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  9a:	8f e1       	ldi	r24, 0x1F	; 31
  9c:	9f eb       	ldi	r25, 0xBF	; 191
  9e:	a2 e0       	ldi	r26, 0x02	; 2
  a0:	81 50       	subi	r24, 0x01	; 1
  a2:	90 40       	sbci	r25, 0x00	; 0
  a4:	a0 40       	sbci	r26, 0x00	; 0
  a6:	e1 f7       	brne	.-8      	; 0xa0 <car_trun+0xe>
  a8:	00 c0       	rjmp	.+0      	; 0xaa <car_trun+0x18>
  aa:	00 00       	nop
		_delay_ms(900);
			PORTA=0xa20;
  ac:	80 e2       	ldi	r24, 0x20	; 32
  ae:	8b bb       	out	0x1b, r24	; 27
  b0:	8f e1       	ldi	r24, 0x1F	; 31
  b2:	9f eb       	ldi	r25, 0xBF	; 191
  b4:	a2 e0       	ldi	r26, 0x02	; 2
  b6:	81 50       	subi	r24, 0x01	; 1
  b8:	90 40       	sbci	r25, 0x00	; 0
  ba:	a0 40       	sbci	r26, 0x00	; 0
  bc:	e1 f7       	brne	.-8      	; 0xb6 <car_trun+0x24>
  be:	00 c0       	rjmp	.+0      	; 0xc0 <car_trun+0x2e>
  c0:	00 00       	nop
			_delay_ms(900);
				PORTA=0xaa;
  c2:	8a ea       	ldi	r24, 0xAA	; 170
  c4:	8b bb       	out	0x1b, r24	; 27
  c6:	8f e1       	ldi	r24, 0x1F	; 31
  c8:	9f eb       	ldi	r25, 0xBF	; 191
  ca:	a2 e0       	ldi	r26, 0x02	; 2
  cc:	81 50       	subi	r24, 0x01	; 1
  ce:	90 40       	sbci	r25, 0x00	; 0
  d0:	a0 40       	sbci	r26, 0x00	; 0
  d2:	e1 f7       	brne	.-8      	; 0xcc <car_trun+0x3a>
  d4:	00 c0       	rjmp	.+0      	; 0xd6 <car_trun+0x44>
  d6:	00 00       	nop
  d8:	08 95       	ret

000000da <int_interrupt0>:
				_delay_ms(900);
	}
}
void int_interrupt0()
  {
      if (bit_is_set(PIND,PD2))
  da:	82 9b       	sbis	0x10, 2	; 16
  dc:	06 c0       	rjmp	.+12     	; 0xea <int_interrupt0+0x10>
    {
	    cli();
  de:	f8 94       	cli
	    GICR=(1<<INT0);
  e0:	80 e4       	ldi	r24, 0x40	; 64
  e2:	8b bf       	out	0x3b, r24	; 59
	    MCUCR=(1<<ISC00);
  e4:	81 e0       	ldi	r24, 0x01	; 1
  e6:	85 bf       	out	0x35, r24	; 53
	    sei();
  e8:	78 94       	sei
  ea:	08 95       	ret

000000ec <__vector_1>:
	}
}
ISR(INT0_vect)
{
  ec:	1f 92       	push	r1
  ee:	0f 92       	push	r0
  f0:	0f b6       	in	r0, 0x3f	; 63
  f2:	0f 92       	push	r0
  f4:	11 24       	eor	r1, r1
  f6:	2f 93       	push	r18
  f8:	3f 93       	push	r19
  fa:	4f 93       	push	r20
  fc:	5f 93       	push	r21
  fe:	6f 93       	push	r22
 100:	7f 93       	push	r23
 102:	8f 93       	push	r24
 104:	9f 93       	push	r25
 106:	af 93       	push	r26
 108:	bf 93       	push	r27
 10a:	cf 93       	push	r28
 10c:	df 93       	push	r29
 10e:	ef 93       	push	r30
 110:	ff 93       	push	r31
	    PORTC=0x20;
 112:	d0 e2       	ldi	r29, 0x20	; 32
 114:	d5 bb       	out	0x15, r29	; 21
 116:	2f e1       	ldi	r18, 0x1F	; 31
 118:	3f eb       	ldi	r19, 0xBF	; 191
 11a:	42 e0       	ldi	r20, 0x02	; 2
 11c:	21 50       	subi	r18, 0x01	; 1
 11e:	30 40       	sbci	r19, 0x00	; 0
 120:	40 40       	sbci	r20, 0x00	; 0
 122:	e1 f7       	brne	.-8      	; 0x11c <__vector_1+0x30>
 124:	00 c0       	rjmp	.+0      	; 0x126 <__vector_1+0x3a>
 126:	00 00       	nop
	    _delay_ms(900);
	    PORTC=0xaa;
 128:	ca ea       	ldi	r28, 0xAA	; 170
 12a:	c5 bb       	out	0x15, r28	; 21
 12c:	8f e1       	ldi	r24, 0x1F	; 31
 12e:	9f eb       	ldi	r25, 0xBF	; 191
 130:	a2 e0       	ldi	r26, 0x02	; 2
 132:	81 50       	subi	r24, 0x01	; 1
 134:	90 40       	sbci	r25, 0x00	; 0
 136:	a0 40       	sbci	r26, 0x00	; 0
 138:	e1 f7       	brne	.-8      	; 0x132 <__vector_1+0x46>
 13a:	00 c0       	rjmp	.+0      	; 0x13c <__vector_1+0x50>
 13c:	00 00       	nop
	    _delay_ms(900);  
   car_trun();
 13e:	0e 94 49 00 	call	0x92	; 0x92 <car_trun>
        PORTC=0x02;
 142:	82 e0       	ldi	r24, 0x02	; 2
 144:	85 bb       	out	0x15, r24	; 21
 146:	2f e1       	ldi	r18, 0x1F	; 31
 148:	3f eb       	ldi	r19, 0xBF	; 191
 14a:	42 e0       	ldi	r20, 0x02	; 2
 14c:	21 50       	subi	r18, 0x01	; 1
 14e:	30 40       	sbci	r19, 0x00	; 0
 150:	40 40       	sbci	r20, 0x00	; 0
 152:	e1 f7       	brne	.-8      	; 0x14c <__vector_1+0x60>
 154:	00 c0       	rjmp	.+0      	; 0x156 <__vector_1+0x6a>
 156:	00 00       	nop
        _delay_ms(900);

        PORTC=0x0aa;
 158:	c5 bb       	out	0x15, r28	; 21
 15a:	2f e1       	ldi	r18, 0x1F	; 31
 15c:	3f eb       	ldi	r19, 0xBF	; 191
 15e:	42 e0       	ldi	r20, 0x02	; 2
 160:	21 50       	subi	r18, 0x01	; 1
 162:	30 40       	sbci	r19, 0x00	; 0
 164:	40 40       	sbci	r20, 0x00	; 0
 166:	e1 f7       	brne	.-8      	; 0x160 <__vector_1+0x74>
 168:	00 c0       	rjmp	.+0      	; 0x16a <__vector_1+0x7e>
 16a:	00 00       	nop
       _delay_ms(900);

        PORTC=0x02;
 16c:	85 bb       	out	0x15, r24	; 21
 16e:	8f e1       	ldi	r24, 0x1F	; 31
 170:	9f eb       	ldi	r25, 0xBF	; 191
 172:	a2 e0       	ldi	r26, 0x02	; 2
 174:	81 50       	subi	r24, 0x01	; 1
 176:	90 40       	sbci	r25, 0x00	; 0
 178:	a0 40       	sbci	r26, 0x00	; 0
 17a:	e1 f7       	brne	.-8      	; 0x174 <__vector_1+0x88>
 17c:	00 c0       	rjmp	.+0      	; 0x17e <__vector_1+0x92>
 17e:	00 00       	nop
       _delay_ms(900);
       PORTC=0x0aa;
 180:	c5 bb       	out	0x15, r28	; 21
 182:	2f e1       	ldi	r18, 0x1F	; 31
 184:	3f eb       	ldi	r19, 0xBF	; 191
 186:	42 e0       	ldi	r20, 0x02	; 2
 188:	21 50       	subi	r18, 0x01	; 1
 18a:	30 40       	sbci	r19, 0x00	; 0
 18c:	40 40       	sbci	r20, 0x00	; 0
 18e:	e1 f7       	brne	.-8      	; 0x188 <__vector_1+0x9c>
 190:	00 c0       	rjmp	.+0      	; 0x192 <__vector_1+0xa6>
 192:	00 00       	nop
       _delay_ms(900);

       PORTC=0x20;
 194:	d5 bb       	out	0x15, r29	; 21
 196:	8f e1       	ldi	r24, 0x1F	; 31
 198:	9f eb       	ldi	r25, 0xBF	; 191
 19a:	a2 e0       	ldi	r26, 0x02	; 2
 19c:	81 50       	subi	r24, 0x01	; 1
 19e:	90 40       	sbci	r25, 0x00	; 0
 1a0:	a0 40       	sbci	r26, 0x00	; 0
 1a2:	e1 f7       	brne	.-8      	; 0x19c <__vector_1+0xb0>
 1a4:	00 c0       	rjmp	.+0      	; 0x1a6 <__vector_1+0xba>
 1a6:	00 00       	nop
       _delay_ms(900);

}
 1a8:	ff 91       	pop	r31
 1aa:	ef 91       	pop	r30
 1ac:	df 91       	pop	r29
 1ae:	cf 91       	pop	r28
 1b0:	bf 91       	pop	r27
 1b2:	af 91       	pop	r26
 1b4:	9f 91       	pop	r25
 1b6:	8f 91       	pop	r24
 1b8:	7f 91       	pop	r23
 1ba:	6f 91       	pop	r22
 1bc:	5f 91       	pop	r21
 1be:	4f 91       	pop	r20
 1c0:	3f 91       	pop	r19
 1c2:	2f 91       	pop	r18
 1c4:	0f 90       	pop	r0
 1c6:	0f be       	out	0x3f, r0	; 63
 1c8:	0f 90       	pop	r0
 1ca:	1f 90       	pop	r1
 1cc:	18 95       	reti

000001ce <main>:

int main(void)
 {    DDRA=0xff;
 1ce:	8f ef       	ldi	r24, 0xFF	; 255
 1d0:	8a bb       	out	0x1a, r24	; 26
   	  DDRB=0x00;
 1d2:	17 ba       	out	0x17, r1	; 23
	  DDRD&=~(1<<PD2)|(1<<PD3);
 1d4:	8a 98       	cbi	0x11, 2	; 17
	  PORTB|=(1<<PB0)|(1<<PB1)|(1<<PB2)|(1<<PB3);
 1d6:	98 b3       	in	r25, 0x18	; 24
 1d8:	9f 60       	ori	r25, 0x0F	; 15
 1da:	98 bb       	out	0x18, r25	; 24
      PORTD&=~((1<<PD2)|(1<<PD3));
 1dc:	92 b3       	in	r25, 0x12	; 18
 1de:	93 7f       	andi	r25, 0xF3	; 243
 1e0:	92 bb       	out	0x12, r25	; 18
	  DDRC=0xff;
 1e2:	84 bb       	out	0x14, r24	; 20
 1e4:	8f e3       	ldi	r24, 0x3F	; 63
 1e6:	9d e0       	ldi	r25, 0x0D	; 13
 1e8:	a3 e0       	ldi	r26, 0x03	; 3
 1ea:	81 50       	subi	r24, 0x01	; 1
 1ec:	90 40       	sbci	r25, 0x00	; 0
 1ee:	a0 40       	sbci	r26, 0x00	; 0
 1f0:	e1 f7       	brne	.-8      	; 0x1ea <main+0x1c>
 1f2:	00 c0       	rjmp	.+0      	; 0x1f4 <main+0x26>
 1f4:	00 00       	nop
 1f6:	8f e3       	ldi	r24, 0x3F	; 63
 1f8:	9d e0       	ldi	r25, 0x0D	; 13
 1fa:	a3 e0       	ldi	r26, 0x03	; 3
 1fc:	81 50       	subi	r24, 0x01	; 1
 1fe:	90 40       	sbci	r25, 0x00	; 0
 200:	a0 40       	sbci	r26, 0x00	; 0
 202:	e1 f7       	brne	.-8      	; 0x1fc <main+0x2e>
 204:	00 c0       	rjmp	.+0      	; 0x206 <main+0x38>
 206:	00 00       	nop
	
while(1)
   {
      if (bit_is_clear(PINB,PB0)) //for forwared
		   {
			   PORTC=0xaa;
 208:	0a ea       	ldi	r16, 0xAA	; 170
			   _delay_ms(500);
		   }			    		  
		   int_interrupt0(); 	 		   		   
     if(bit_is_clear(PINB,PB1)) //for revers 
           {
			   PORTC=0x55;
 20a:	15 e5       	ldi	r17, 0x55	; 85
			   _delay_ms(500);
		   }		   		   
     if (bit_is_clear(PINB,PB2))   // for right turan
           {
	      	  PORTC=0x20;
 20c:	d0 e2       	ldi	r29, 0x20	; 32
			 _delay_ms(500);
	       }
     if(bit_is_clear(PINB,PB3))    // for left turan 
          {
	          PORTC=0x02;
 20e:	c2 e0       	ldi	r28, 0x02	; 2
	  _delay_ms(1000);
	   
	
while(1)
   {
      if (bit_is_clear(PINB,PB0)) //for forwared
 210:	b0 99       	sbic	0x16, 0	; 22
 212:	0a c0       	rjmp	.+20     	; 0x228 <main+0x5a>
		   {
			   PORTC=0xaa;
 214:	05 bb       	out	0x15, r16	; 21
 216:	8f e9       	ldi	r24, 0x9F	; 159
 218:	96 e8       	ldi	r25, 0x86	; 134
 21a:	a1 e0       	ldi	r26, 0x01	; 1
 21c:	81 50       	subi	r24, 0x01	; 1
 21e:	90 40       	sbci	r25, 0x00	; 0
 220:	a0 40       	sbci	r26, 0x00	; 0
 222:	e1 f7       	brne	.-8      	; 0x21c <main+0x4e>
 224:	00 c0       	rjmp	.+0      	; 0x226 <main+0x58>
 226:	00 00       	nop
			   _delay_ms(500);
		   }			    		  
		   int_interrupt0(); 	 		   		   
 228:	0e 94 6d 00 	call	0xda	; 0xda <int_interrupt0>
     if(bit_is_clear(PINB,PB1)) //for revers 
 22c:	b1 99       	sbic	0x16, 1	; 22
 22e:	0a c0       	rjmp	.+20     	; 0x244 <main+0x76>
           {
			   PORTC=0x55;
 230:	15 bb       	out	0x15, r17	; 21
 232:	8f e9       	ldi	r24, 0x9F	; 159
 234:	96 e8       	ldi	r25, 0x86	; 134
 236:	a1 e0       	ldi	r26, 0x01	; 1
 238:	81 50       	subi	r24, 0x01	; 1
 23a:	90 40       	sbci	r25, 0x00	; 0
 23c:	a0 40       	sbci	r26, 0x00	; 0
 23e:	e1 f7       	brne	.-8      	; 0x238 <main+0x6a>
 240:	00 c0       	rjmp	.+0      	; 0x242 <main+0x74>
 242:	00 00       	nop
			   _delay_ms(500);
		   }		   		   
     if (bit_is_clear(PINB,PB2))   // for right turan
 244:	b2 99       	sbic	0x16, 2	; 22
 246:	0a c0       	rjmp	.+20     	; 0x25c <main+0x8e>
           {
	      	  PORTC=0x20;
 248:	d5 bb       	out	0x15, r29	; 21
 24a:	8f e9       	ldi	r24, 0x9F	; 159
 24c:	96 e8       	ldi	r25, 0x86	; 134
 24e:	a1 e0       	ldi	r26, 0x01	; 1
 250:	81 50       	subi	r24, 0x01	; 1
 252:	90 40       	sbci	r25, 0x00	; 0
 254:	a0 40       	sbci	r26, 0x00	; 0
 256:	e1 f7       	brne	.-8      	; 0x250 <main+0x82>
 258:	00 c0       	rjmp	.+0      	; 0x25a <main+0x8c>
 25a:	00 00       	nop
			 _delay_ms(500);
	       }
     if(bit_is_clear(PINB,PB3))    // for left turan 
 25c:	b3 99       	sbic	0x16, 3	; 22
 25e:	0b c0       	rjmp	.+22     	; 0x276 <main+0xa8>
          {
	          PORTC=0x02;
 260:	c5 bb       	out	0x15, r28	; 21
 262:	8f e9       	ldi	r24, 0x9F	; 159
 264:	96 e8       	ldi	r25, 0x86	; 134
 266:	a1 e0       	ldi	r26, 0x01	; 1
 268:	81 50       	subi	r24, 0x01	; 1
 26a:	90 40       	sbci	r25, 0x00	; 0
 26c:	a0 40       	sbci	r26, 0x00	; 0
 26e:	e1 f7       	brne	.-8      	; 0x268 <main+0x9a>
 270:	00 c0       	rjmp	.+0      	; 0x272 <main+0xa4>
 272:	00 00       	nop
 274:	cd cf       	rjmp	.-102    	; 0x210 <main+0x42>
			_delay_ms(500);
	      }	          
else
  {
        PORTC=0x00;
 276:	15 ba       	out	0x15, r1	; 21
 278:	cb cf       	rjmp	.-106    	; 0x210 <main+0x42>

0000027a <_exit>:
 27a:	f8 94       	cli

0000027c <__stop_program>:
 27c:	ff cf       	rjmp	.-2      	; 0x27c <__stop_program>
