
home.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000146  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000006cc  00000000  00000000  0000019c  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000085  00000000  00000000  00000868  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_aranges 00000080  00000000  00000000  000008f0  2**3
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000540  00000000  00000000  00000970  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000139  00000000  00000000  00000eb0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000371  00000000  00000000  00000fe9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000024  00000000  00000000  0000135c  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000000f5  00000000  00000000  00001380  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000001d2  00000000  00000000  00001475  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 e4       	ldi	r30, 0x46	; 70
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 a1 00 	jmp	0x142	; 0x142 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
#include <avr/io.h>
#include<util/delay.h>
#define sense PINB
#define sense_ddr DDRB
int main(void)
{DDRD=0xff;
  92:	8f ef       	ldi	r24, 0xFF	; 255
  94:	81 bb       	out	0x11, r24	; 17
	sense_ddr&=0xf0;
  96:	87 b3       	in	r24, 0x17	; 23
  98:	80 7f       	andi	r24, 0xF0	; 240
  9a:	87 bb       	out	0x17, r24	; 23
						   PORTD=0x05;
						   _delay_ms(100);
						   break;
						   
						   case 0x07:
						   PORTD=0x07;
  9c:	77 e0       	ldi	r23, 0x07	; 7
			    case 0x08:
				PORTD=0x08;
				 _delay_ms(100);          
							break;
				case 0x06:
				PORTD=0x06;
  9e:	66 e0       	ldi	r22, 0x06	; 6
				case 0x04:
				PORTD=0x04;
				 _delay_ms(100);
						   break;					  
			    case 0x08:
				PORTD=0x08;
  a0:	58 e0       	ldi	r21, 0x08	; 8
			   case 0x01:   
			   PORTD=0x01;
			              _delay_ms(100);
						  break;
				case 0x02:
				PORTD=0x02;
  a2:	42 e0       	ldi	r20, 0x02	; 2
				  _delay_ms(100);
							break;
				case 0x04:
				PORTD=0x04;
  a4:	34 e0       	ldi	r19, 0x04	; 4
		input=sense;
		input=input & 0x0f;
        switch(input)
		   {
			   case 0x01:   
			   PORTD=0x01;
  a6:	21 e0       	ldi	r18, 0x01	; 1
				PORTD=0x06;
				 _delay_ms(100);					   
						   break;
						   
						   case 0x05:
						   PORTD=0x05;
  a8:	95 e0       	ldi	r25, 0x05	; 5
	sense_ddr&=0xf0;
	unsigned char input;
	
    while(1)
    {  
		input=sense;
  aa:	86 b3       	in	r24, 0x16	; 22
		input=input & 0x0f;
  ac:	8f 70       	andi	r24, 0x0F	; 15
        switch(input)
  ae:	85 30       	cpi	r24, 0x05	; 5
  b0:	c1 f1       	breq	.+112    	; 0x122 <main+0x90>
  b2:	86 30       	cpi	r24, 0x06	; 6
  b4:	38 f4       	brcc	.+14     	; 0xc4 <main+0x32>
  b6:	82 30       	cpi	r24, 0x02	; 2
  b8:	a1 f0       	breq	.+40     	; 0xe2 <main+0x50>
  ba:	84 30       	cpi	r24, 0x04	; 4
  bc:	d1 f0       	breq	.+52     	; 0xf2 <main+0x60>
  be:	81 30       	cpi	r24, 0x01	; 1
  c0:	a1 f7       	brne	.-24     	; 0xaa <main+0x18>
  c2:	07 c0       	rjmp	.+14     	; 0xd2 <main+0x40>
  c4:	87 30       	cpi	r24, 0x07	; 7
  c6:	a9 f1       	breq	.+106    	; 0x132 <main+0xa0>
  c8:	87 30       	cpi	r24, 0x07	; 7
  ca:	18 f1       	brcs	.+70     	; 0x112 <main+0x80>
  cc:	88 30       	cpi	r24, 0x08	; 8
  ce:	69 f7       	brne	.-38     	; 0xaa <main+0x18>
  d0:	18 c0       	rjmp	.+48     	; 0x102 <main+0x70>
		   {
			   case 0x01:   
			   PORTD=0x01;
  d2:	22 bb       	out	0x12, r18	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  d4:	e7 ea       	ldi	r30, 0xA7	; 167
  d6:	f1 e6       	ldi	r31, 0x61	; 97
  d8:	31 97       	sbiw	r30, 0x01	; 1
  da:	f1 f7       	brne	.-4      	; 0xd8 <main+0x46>
  dc:	00 c0       	rjmp	.+0      	; 0xde <main+0x4c>
  de:	00 00       	nop
  e0:	e4 cf       	rjmp	.-56     	; 0xaa <main+0x18>
			              _delay_ms(100);
						  break;
				case 0x02:
				PORTD=0x02;
  e2:	42 bb       	out	0x12, r20	; 18
  e4:	e7 ea       	ldi	r30, 0xA7	; 167
  e6:	f1 e6       	ldi	r31, 0x61	; 97
  e8:	31 97       	sbiw	r30, 0x01	; 1
  ea:	f1 f7       	brne	.-4      	; 0xe8 <main+0x56>
  ec:	00 c0       	rjmp	.+0      	; 0xee <main+0x5c>
  ee:	00 00       	nop
  f0:	dc cf       	rjmp	.-72     	; 0xaa <main+0x18>
				  _delay_ms(100);
							break;
				case 0x04:
				PORTD=0x04;
  f2:	32 bb       	out	0x12, r19	; 18
  f4:	e7 ea       	ldi	r30, 0xA7	; 167
  f6:	f1 e6       	ldi	r31, 0x61	; 97
  f8:	31 97       	sbiw	r30, 0x01	; 1
  fa:	f1 f7       	brne	.-4      	; 0xf8 <main+0x66>
  fc:	00 c0       	rjmp	.+0      	; 0xfe <main+0x6c>
  fe:	00 00       	nop
 100:	d4 cf       	rjmp	.-88     	; 0xaa <main+0x18>
				 _delay_ms(100);
						   break;					  
			    case 0x08:
				PORTD=0x08;
 102:	52 bb       	out	0x12, r21	; 18
 104:	e7 ea       	ldi	r30, 0xA7	; 167
 106:	f1 e6       	ldi	r31, 0x61	; 97
 108:	31 97       	sbiw	r30, 0x01	; 1
 10a:	f1 f7       	brne	.-4      	; 0x108 <main+0x76>
 10c:	00 c0       	rjmp	.+0      	; 0x10e <main+0x7c>
 10e:	00 00       	nop
 110:	cc cf       	rjmp	.-104    	; 0xaa <main+0x18>
				 _delay_ms(100);          
							break;
				case 0x06:
				PORTD=0x06;
 112:	62 bb       	out	0x12, r22	; 18
 114:	e7 ea       	ldi	r30, 0xA7	; 167
 116:	f1 e6       	ldi	r31, 0x61	; 97
 118:	31 97       	sbiw	r30, 0x01	; 1
 11a:	f1 f7       	brne	.-4      	; 0x118 <main+0x86>
 11c:	00 c0       	rjmp	.+0      	; 0x11e <main+0x8c>
 11e:	00 00       	nop
 120:	c4 cf       	rjmp	.-120    	; 0xaa <main+0x18>
				 _delay_ms(100);					   
						   break;
						   
						   case 0x05:
						   PORTD=0x05;
 122:	92 bb       	out	0x12, r25	; 18
 124:	e7 ea       	ldi	r30, 0xA7	; 167
 126:	f1 e6       	ldi	r31, 0x61	; 97
 128:	31 97       	sbiw	r30, 0x01	; 1
 12a:	f1 f7       	brne	.-4      	; 0x128 <main+0x96>
 12c:	00 c0       	rjmp	.+0      	; 0x12e <main+0x9c>
 12e:	00 00       	nop
 130:	bc cf       	rjmp	.-136    	; 0xaa <main+0x18>
						   _delay_ms(100);
						   break;
						   
						   case 0x07:
						   PORTD=0x07;
 132:	72 bb       	out	0x12, r23	; 18
 134:	e7 ea       	ldi	r30, 0xA7	; 167
 136:	f1 e6       	ldi	r31, 0x61	; 97
 138:	31 97       	sbiw	r30, 0x01	; 1
 13a:	f1 f7       	brne	.-4      	; 0x138 <main+0xa6>
 13c:	00 c0       	rjmp	.+0      	; 0x13e <main+0xac>
 13e:	00 00       	nop
 140:	b4 cf       	rjmp	.-152    	; 0xaa <main+0x18>

00000142 <_exit>:
 142:	f8 94       	cli

00000144 <__stop_program>:
 144:	ff cf       	rjmp	.-2      	; 0x144 <__stop_program>
