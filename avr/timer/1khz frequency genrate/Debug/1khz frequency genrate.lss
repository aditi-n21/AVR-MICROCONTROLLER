
1khz frequency genrate.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000be  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000006cc  00000000  00000000  00000114  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000085  00000000  00000000  000007e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_aranges 00000080  00000000  00000000  00000868  2**3
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   0000032d  00000000  00000000  000008e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000009d  00000000  00000000  00000c15  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000002a4  00000000  00000000  00000cb2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000034  00000000  00000000  00000f58  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000000aa  00000000  00000000  00000f8c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ee eb       	ldi	r30, 0xBE	; 190
  68:	f0 e0       	ldi	r31, 0x00	; 0
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 55 00 	call	0xaa	; 0xaa <main>
  8a:	0c 94 5d 00 	jmp	0xba	; 0xba <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <delay>:


#include <avr/io.h>
void delay()
{
	TCNT0=0x88; // tcnt value 256-63=193 aproxi=0xc1; 
  92:	88 e8       	ldi	r24, 0x88	; 136
  94:	82 bf       	out	0x32, r24	; 50
	TCCR0=0x0a; // for cs0=011; valuse for prescaler 64mhz;
  96:	8a e0       	ldi	r24, 0x0A	; 10
  98:	83 bf       	out	0x33, r24	; 51
	while((TIFR&(1<<TOV0))==0);
  9a:	08 b6       	in	r0, 0x38	; 56
  9c:	00 fe       	sbrs	r0, 0
  9e:	fd cf       	rjmp	.-6      	; 0x9a <delay+0x8>
	TIFR|=(1<<TOV0);
  a0:	88 b7       	in	r24, 0x38	; 56
  a2:	81 60       	ori	r24, 0x01	; 1
  a4:	88 bf       	out	0x38, r24	; 56
	TCCR0=0X00;
  a6:	13 be       	out	0x33, r1	; 51
}
  a8:	08 95       	ret

000000aa <main>:
int main(void)
{
	DDRB|=(1<<PB5);
  aa:	bd 9a       	sbi	0x17, 5	; 23
	while(1)
	{
		PORTB|=(1<<PB5);
  ac:	c5 9a       	sbi	0x18, 5	; 24
		delay();
  ae:	0e 94 49 00 	call	0x92	; 0x92 <delay>
		PORTB&=~(1<<PB5);
  b2:	c5 98       	cbi	0x18, 5	; 24
		delay();
  b4:	0e 94 49 00 	call	0x92	; 0x92 <delay>
  b8:	f9 cf       	rjmp	.-14     	; 0xac <main+0x2>

000000ba <_exit>:
  ba:	f8 94       	cli

000000bc <__stop_program>:
  bc:	ff cf       	rjmp	.-2      	; 0xbc <__stop_program>
